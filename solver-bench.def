Bootstrap: docker
From: debian:bookworm-slim

%environment
    export LC_ALL=C
    export LANG=C
    export PATH=/usr/local/bin:$PATH

%post
    set -e
    apt-get update
    apt-get install -y --no-install-recommends \
        python3 python3-pip python3-setuptools python3-wheel \
        git wget curl ca-certificates gnupg unzip bc dos2unix \
        build-essential cmake libgmp-dev default-jdk sbt scala z3 \
        libffi-dev libxml2 libxslt1.1 libxslt1-dev \
        && rm -rf /var/lib/apt/lists/*

    # BenchExec (system install)
    pip3 install --no-cache-dir benchexec

    # cvc5 static
    wget -O /tmp/cvc5.zip https://github.com/cvc5/cvc5/releases/download/cvc5-1.2.1/cvc5-Linux-x86_64-static.zip
    unzip /tmp/cvc5.zip -d /tmp/
    install -m 0755 /tmp/cvc5-*/bin/cvc5 /usr/local/bin/cvc5
    rm -rf /tmp/cvc5*

    # mata
    git clone https://github.com/VeriFIT/mata.git /tmp/mata
    (cd /tmp/mata && make release && make install)
    rm -rf /tmp/mata

    # z3-noodler
    wget -O /tmp/z3-noodler.tar.gz https://github.com/VeriFIT/z3-noodler/archive/refs/tags/v1.4.0.tar.gz
    mkdir -p /tmp/z3-noodler
    tar -xzf /tmp/z3-noodler.tar.gz -C /tmp/z3-noodler --strip-components=1
    (cd /tmp/z3-noodler && mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=Release .. && make -j"$(nproc)")
    install -d /usr/local/bin/z3-noodler
    install -m 0755 /tmp/z3-noodler/build/z3 /usr/local/bin/z3-noodler/z3-noodler
    rm -rf /tmp/z3-noodler*

    # (Copy in Ostrich sources later via %files; build after copy)

%files
    /fmcad25-artifact/ostrich /ostrich
    /bin/mas.jar /usr/local/bin/mas.jar

%post
    # Build Ostrich
    cd /ostrich
    sbt "set test in assembly := {}" assembly
    cp target/scala-*/ostrich-assembly-*.jar /usr/local/bin/ostrich.jar
    printf '#!/bin/bash\nexec java -jar /usr/local/bin/ostrich.jar "$@"\n' >/usr/local/bin/ostrich
    chmod +x /usr/local/bin/ostrich

    # Simple wrapper for z3-noodler
    printf '#!/bin/bash\nexec /usr/local/bin/z3-noodler/z3-noodler "$@"\n' >/usr/local/bin/z3-noodler
    chmod +x /usr/local/bin/z3-noodler

    # MAS
    printf '#!/bin/bash\nexec java -jar /usr/local/bin/mas.jar edu.boisestate.cs.SolveMain "$@"\n' >/usr/local/bin/mas || true
    chmod +x /usr/local/bin/mas || true

    # Entry script for non-interactive BenchExec use
    cat >/entrypoint.sh <<'EOF'

#!/bin/bash
# If first arg is benchexec, run it; else exec whatever is given.
/usr/bin/env
if [ "$1" = "benchexec" ]; then
    shift
    exec benchexec "$@"
else
    exec "$@"
fi
EOF
    chmod +x /entrypoint.sh

%runscript
    exec /entrypoint.sh "$@"

%labels
    Author="Nat Steven"
    Tooling="BenchExec+Solvers"