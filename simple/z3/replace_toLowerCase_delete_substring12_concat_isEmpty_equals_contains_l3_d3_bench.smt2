(set-logic ALL)
(set-option :produce-models true)
(define-fun-rec str.toLower ((x String)) String
  (ite (= x "")
      ""
      (let ((Head (str.at x 0)))
        (str.++ 
          (ite (and (<= 65 (str.to_code Head)) 
                     (<= (str.to_code Head) 90))
               (str.from_code (+ (str.to_code Head) 32))
               Head)
          (str.toLower (str.substr x 1 (- (str.len x) 1)))))))
(define-fun str.del ((x String) (a Int) (b Int)) String
  (str.++ (str.substr x 0 a) (str.substr x b (str.len x))))
(declare-fun sym9 () String)
(declare-fun sym7 () String)
(declare-fun sym8 () String)
(declare-fun sym11 () String)
(declare-fun sym10 () String)
(define-fun Alphabet () RegLan 
	(re.* (re.union (str.to_re "A") (str.to_re "B") (str.to_re "C") (str.to_re "a") (str.to_re "b") (str.to_re "c") ))
)

(assert (str.in_re sym10 Alphabet))
(assert (str.in_re sym11 Alphabet))
(assert (str.in_re sym8 Alphabet))
(assert (str.in_re sym7 Alphabet))
(assert (str.in_re sym9 Alphabet))
(assert (not (= "" (str.toLower (str.++ (str.toLower sym10 )"c" )))))
(assert (not (str.contains (str.replace_all sym7  "A"  "B" )"bB" )))
(assert (= "" (str.del sym10  0 3)))
(assert (= (str.substr (str.replace_all (str.toLower sym9 ) "a"  "C" ) 3 0)"" ))
(assert (not (str.contains (str.replace_all (str.toLower sym11 ) "a"  "A" )"aa" )))
(assert (not (= (str.substr (str.++ sym9 sym10 ) 4 0)"aa" )))
(assert (not (= "" (str.substr sym10  1 1))))
(assert (not (= "" (str.++ (str.del (str.replace_all sym7  "B"  "C" ) 1 3)(str.toLower (str.toLower sym7 ))))))
(assert (= "" (str.substr (str.del (str.substr sym11  1 2) 1 1) 0 0)))
(assert (= "" (str.replace_all (str.del (str.substr sym8  2 0) 0 0) "B"  "A" )))
(assert (not (str.contains (str.substr sym11  1 2)"b" )))
(assert (not (= "" (str.replace_all (str.substr (str.del sym11  1 1) 1 1) "c"  "C" ))))
(assert (not (str.contains (str.del sym8  3 3)"cb" )))
(assert (str.contains (str.toLower sym7 )"" ))
(assert (str.contains (str.substr sym10  1 1)"" ))
(assert (not (= "" (str.toLower (str.++ sym9 sym10 )))))
(assert (not (= (str.toLower (str.toLower (str.toLower sym7 )))"c" )))
(assert (not (= "" (str.replace_all sym11  "b"  "A" ))))
(assert (not (= (str.++ (str.del sym9  3 3)(str.replace_all sym8  "B"  "A" ))"BB" )))
(assert (not (= (str.substr (str.replace_all sym7  "B"  "C" ) 1 0)"b" )))
(assert (str.contains (str.++ (str.toLower (str.toLower sym11 ))(str.del sym9  3 3)(str.replace_all sym8  "B"  "A" ))"" ))
(assert (not (= (str.toLower (str.++ (str.toLower sym7 )"c" ))"" )))
(assert (not (= (str.++ sym9 "c" )"bc" )))
(assert (not (= (str.toLower (str.del (str.substr sym8  2 0) 0 0))"Cb" )))
(assert (not (str.contains (str.toLower (str.substr (str.replace_all sym7  "B"  "C" ) 1 0))"CC" )))
(assert (not (= (str.toLower sym9 )"" )))
(assert (not (str.contains (str.replace_all (str.toLower (str.toLower sym11 )) "b"  "B" )"Bb" )))
(assert (= "" (str.del (str.del (str.substr sym8  2 0) 0 0) 0 0)))
(assert (not (= "" (str.toLower sym9 ))))
(assert (= "" (str.substr (str.replace_all (str.toLower sym10 ) "b"  "B" ) 2 0)))
(assert (not (= "" (str.++ (str.replace_all (str.del sym9  2 3) "b"  "B" )(str.replace_all sym7  "a"  "c" )"c" ))))
(assert (not (= (str.toLower (str.toLower (str.toLower sym7 )))"bb" )))
(assert (not (= sym10 "" )))
(assert (not (str.contains (str.substr sym8  3 0)"B" )))
(assert (not (= (str.replace_all (str.del (str.substr sym11  1 2) 1 1) "B"  "a" )"ba" )))
(assert (not (= (str.toLower sym10 )"b" )))
(assert (str.contains (str.++ (str.toLower sym7 )"c" )"" ))
(assert (not (str.contains (str.del (str.replace_all (str.toLower sym11 ) "a"  "A" ) 0 2)"B" )))
(assert (not (= "" (str.replace_all (str.del (str.replace_all sym7  "a"  "C" ) 3 3) "C"  "b" ))))
(assert (not (= "" (str.replace_all (str.++ sym10 "c" ) "a"  "B" ))))
(assert (not (= "" (str.++ (str.del (str.substr sym8  2 0) 0 0)(str.replace_all (str.toLower sym9 ) "a"  "C" )))))
(assert (not (str.contains (str.replace_all (str.substr sym10  1 1) "C"  "b" )"BB" )))
(assert (not (= (str.++ (str.toLower sym10 )"c" )"" )))
(assert (str.contains (str.replace_all sym8  "B"  "A" )"" ))
(assert (= (str.del (str.substr (str.del sym10  0 3) 0 0) 0 0)"" ))
(assert (not (= "" sym9 )))
(assert (not (= (str.replace_all (str.replace_all sym11  "A"  "C" ) "A"  "c" )"b" )))
(assert (str.contains (str.del (str.substr sym11  1 2) 1 1)"" ))
(assert (not (= (str.++ sym11 sym9 )"" )))
(assert (not (str.contains (str.substr (str.++ sym10 "c" ) 2 1)"cB" )))
(assert (not (= (str.++ sym7 "B" )"A" )))
(assert (not (str.contains (str.toLower (str.del sym9  3 3))"aC" )))
(assert (not (= "" (str.substr (str.del (str.replace_all sym7  "a"  "C" ) 3 3) 0 1))))
(assert (not (= (str.substr (str.++ sym9 sym7 ) 1 5)"c" )))
(assert (not (= (str.del (str.replace_all (str.toLower sym9 ) "a"  "C" ) 3 3)"" )))
(assert (not (= (str.toLower (str.toLower sym7 ))"" )))
(assert (not (= (str.++ (str.substr (str.replace_all sym7  "B"  "C" ) 1 0)(str.substr (str.++ sym10 "c" ) 2 1))"" )))
(assert (not (str.contains sym11 "c" )))
(assert (not (= "" (str.toLower (str.++ (str.substr sym7  3 0)"b" )))))
(assert (str.contains (str.replace_all sym8  "c"  "a" )"" ))
(assert (not (= (str.toLower sym11 )"AB" )))
(assert (not (= "" (str.del (str.toLower (str.del sym9  3 3)) 3 3))))
(assert (str.contains (str.toLower (str.++ sym9 "c" ))"" ))
(assert (not (= "" (str.del (str.toLower sym10 ) 3 3))))
(assert (= "" (str.replace_all (str.substr (str.substr sym8  3 0) 0 0) "A"  "c" )))
(assert (= "" (str.substr sym10  0 0)))
(assert (not (str.contains (str.substr sym7  2 0)"B" )))
(assert (not (= (str.del (str.replace_all sym7  "B"  "C" ) 1 3)"" )))
(assert (not (= "" (str.++ (str.substr (str.replace_all sym7  "B"  "C" ) 1 0)(str.replace_all (str.++ sym9 "c" ) "a"  "A" )))))
(assert (not (= (str.toLower sym7 )"" )))
(assert (not (= (str.del (str.substr sym8  2 0) 0 0)"CC" )))
(assert (not (str.contains (str.del (str.substr sym8  0 2) 0 2)"B" )))
(assert (not (str.contains (str.replace_all (str.replace_all (str.replace_all sym11  "A"  "C" ) "A"  "c" ) "a"  "b" )"c" )))
(assert (not (str.contains (str.++ (str.substr sym7  2 0)"C" )"CC" )))
(assert (str.contains (str.del (str.substr (str.++ sym10 "c" ) 2 1) 1 1)"" ))
(assert (str.contains (str.del sym9  3 3)"" ))
(assert (not (str.contains (str.toLower (str.toLower sym11 ))"Bb" )))
(assert (not (= "" (str.++ (str.++ sym11 sym9 )"A" ))))
(assert (str.contains (str.++ sym9 sym7 )"" ))
(assert (not (str.contains (str.toLower (str.++ (str.substr sym7  3 0)"b" ))"c" )))
(assert (= "" (str.substr sym8  3 0)))
(assert (not (= "" (str.++ sym10 "B" ))))
(assert (not (= "" (str.++ (str.++ sym7 "c" )(str.substr sym11  1 2)))))
(assert (str.contains (str.del sym8  0 1)"A" ))
(assert (not (str.contains (str.replace_all (str.replace_all sym7  "b"  "A" ) "c"  "b" )"a" )))
(assert (not (= "" (str.++ (str.replace_all sym7  "a"  "c" )"c" ))))
(assert (not (= "" (str.toLower (str.toLower sym11 )))))
(assert (not (= "" (str.replace_all (str.toLower sym9 ) "a"  "C" ))))
(assert (not (= sym8 "Aa" )))
(assert (not (= (str.++ sym9 sym11 )"" )))
(assert (not (= (str.substr (str.del (str.substr sym11  1 2) 0 2) 0 0)"b" )))
(assert (not (str.contains (str.del (str.replace_all (str.substr sym10  1 1) "C"  "b" ) 1 1)"B" )))
(assert (not (= (str.replace_all sym7  "b"  "A" )"Ac" )))
(assert (not (= (str.++ (str.toLower sym9 )(str.replace_all sym7  "A"  "B" ))"" )))
(assert (str.contains (str.del (str.replace_all sym7  "B"  "C" ) 3 3)"c" ))
(assert (= "" (str.substr sym7  3 0)))
(assert (not (= "" (str.del (str.++ sym11 sym9 ) 4 4))))
(assert (not (= "" (str.replace_all sym8  "c"  "a" ))))
(assert (not (str.contains (str.replace_all (str.del sym8  3 3) "C"  "A" )"bC" )))
(assert (not (= "" (str.++ sym7 "c" ))))
(assert (str.contains (str.++ (str.++ (str.++ sym7 "c" )(str.substr sym11  1 2))"A" )"" ))
(assert (not (= "" (str.replace_all sym7  "a"  "C" ))))
(assert (not (str.contains (str.del sym9  2 3)"BA" )))
(assert (not (= (str.toLower (str.toLower (str.del sym9  3 3)))"b" )))
(assert (not (= (str.substr sym8  0 2)"A" )))
(assert (not (= "" (str.toLower (str.replace_all (str.replace_all sym11  "A"  "C" ) "A"  "c" )))))
(assert (not (str.contains (str.del (str.substr (str.++ sym9 sym10 ) 4 0) 0 0)"a" )))
(assert (not (str.contains (str.toLower sym9 )"bB" )))
(assert (not (str.contains (str.++ sym10 "b" )"C" )))
(assert (not (= (str.del sym11  1 3)"BA" )))
(assert (not (= (str.del (str.toLower (str.++ sym9 sym10 )) 2 6)"a" )))
(assert (= "" (str.substr (str.substr sym8  3 0) 0 0)))
(assert (str.contains (str.substr (str.++ (str.replace_all sym7  "a"  "c" )"c" ) 2 0)"" ))
(assert (str.contains (str.substr (str.replace_all (str.del sym8  3 3) "C"  "A" ) 3 0)"" ))
(assert (not (= (str.++ sym10 "c" )"" )))
(assert (not (= "" (str.toLower (str.++ sym7 "B" )))))
(assert (not (= (str.toLower (str.replace_all sym11  "b"  "A" ))"c" )))
(assert (not (= "" sym7 )))
(assert (str.contains (str.replace_all (str.replace_all (str.del sym9  2 3) "b"  "B" ) "c"  "A" )"" ))
(assert (not (= (str.substr sym8  2 0)"BC" )))
(assert (not (= (str.++ (str.del (str.substr sym8  2 0) 0 0)(str.replace_all (str.del sym8  3 3) "C"  "A" ))"" )))
(assert (not (= (str.del sym8  1 2)"B" )))
(assert (not (= (str.++ (str.substr sym7  3 0)"b" )"bc" )))
(assert (str.contains (str.replace_all sym7  "a"  "c" )"c" ))
(assert (= "" (str.replace_all (str.substr (str.del sym10  0 3) 0 0) "b"  "B" )))
(assert (not (= (str.replace_all (str.toLower sym10 ) "b"  "B" )"b" )))
(assert (not (= "" (str.toLower sym8 ))))
(assert (not (= (str.substr (str.++ (str.++ sym11 sym9 )"A" ) 2 5)"" )))
(assert (= "" (str.substr (str.del sym10  0 3) 0 0)))
(assert (not (= (str.del (str.replace_all sym7  "a"  "C" ) 3 3)"" )))
(assert (= "" (str.substr (str.del sym10  0 3) 0 0)))
(assert (not (= "" (str.toLower sym10 ))))
(assert (not (= "" (str.replace_all sym7  "B"  "C" ))))
(assert (not (= "" (str.del sym11  1 1))))
(assert (not (str.contains (str.toLower (str.toLower sym7 ))"Bb" )))
(assert (not (= "" (str.replace_all sym11  "A"  "C" ))))
(assert (not (= (str.del (str.substr sym8  2 0) 0 0)"Cc" )))
(assert (not (= (str.toLower (str.toLower sym7 ))"aa" )))
(assert (not (= (str.del sym10  1 3)"A" )))
(assert (not (= "" (str.substr (str.del sym11  1 1) 1 1))))
(assert (str.contains (str.del (str.del (str.replace_all sym7  "B"  "C" ) 1 3) 0 1)"" ))
(assert (not (= "" (str.replace_all (str.del sym9  2 3) "b"  "B" ))))
(assert (not (str.contains (str.del (str.substr sym11  1 2) 0 2)"CA" )))
(assert (not (= "" (str.++ (str.++ sym9 sym10 )"B" ))))
(assert (not (= (str.++ (str.substr (str.del sym10  0 3) 0 0)"A" )"aC" )))
(assert (= (str.substr (str.replace_all sym8  "B"  "A" ) 1 1)"A" ))
(assert (= "" (str.substr (str.replace_all sym8  "B"  "A" ) 1 0)))
(assert (not (str.contains (str.replace_all (str.++ sym9 "c" ) "a"  "A" )"cb" )))
(assert (not (str.contains (str.substr (str.del (str.replace_all sym7  "B"  "C" ) 1 3) 0 0)"A" )))
(assert (not (= (str.++ (str.substr (str.++ sym10 "c" ) 2 1)(str.replace_all (str.++ sym10 "c" ) "a"  "B" ))"BC" )))
(assert (not (str.contains (str.substr (str.substr (str.del sym10  0 3) 0 0) 0 0)"aB" )))
(assert (not (= (str.replace_all (str.replace_all (str.replace_all sym7  "b"  "A" ) "c"  "b" ) "b"  "A" )"C" )))
(assert (not (= (str.++ sym9 sym10 )"CC" )))
(assert (not (= (str.del sym9  1 1)"Ba" )))
(assert (not (= "" (str.toLower sym11 ))))
(check-sat)
(get-model)
(exit)
