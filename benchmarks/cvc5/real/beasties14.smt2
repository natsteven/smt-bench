(set-logic ALL)
(set-option :produce-models true)
(declare-fun sym551 () String)
(assert (<= (str.len sym551) 1))
(declare-fun sym209 () String)
(assert (<= (str.len sym209) 1))
(declare-fun sym161 () String)
(assert (<= (str.len sym161) 1))
(define-fun Alphabet () RegLan 
	(re.* (re.union (str.to_re "A") (str.to_re "B") (str.to_re "C") (str.to_re "D") (str.to_re "E") (str.to_re "F") (str.to_re "G") (str.to_re "H") (str.to_re "I") (str.to_re "J") (str.to_re "K") (str.to_re "L") (str.to_re "M") (str.to_re "N") (str.to_re "O") (str.to_re "P") (str.to_re "Q") (str.to_re "R") (str.to_re "S") (str.to_re "T") (str.to_re "U") (str.to_re "V") (str.to_re "W") (str.to_re "X") (str.to_re "Y") (str.to_re "Z") (str.to_re "a") (str.to_re "b") (str.to_re "c") (str.to_re "d") (str.to_re "e") (str.to_re "f") (str.to_re "g") (str.to_re "h") (str.to_re "i") (str.to_re "j") (str.to_re "k") (str.to_re "l") (str.to_re "m") (str.to_re "n") (str.to_re "o") (str.to_re "p") (str.to_re "q") (str.to_re "r") (str.to_re "s") (str.to_re "t") (str.to_re "u") (str.to_re "v") (str.to_re "w") (str.to_re "x") (str.to_re "y") (str.to_re "z") ))
)

(assert (str.in_re sym161 Alphabet))
(assert (str.in_re sym209 Alphabet))
(assert (str.in_re sym551 Alphabet))(assert (<= 1 (str.len sym551 )))
(assert (<= 1 (str.len sym209 )))

(assert (not (= "" "q" )))
(assert (not (= "" sym551 )))
(assert (not (= (str.to_lower (str.substr sym551  0 1))"h" )))
(assert (not (= (str.to_lower (str.substr sym551  0 1))"l" )))
(assert (not (= (str.to_lower (str.substr sym551  0 1))"r" )))
(assert (not (= "" (str.to_lower (str.substr sym209  0 1)))))
(assert (not (= (str.to_lower (str.substr sym551  0 1))"p" )))
(assert (= "y" "y" ))
(assert (= (str.to_lower (str.substr sym209  0 1))"y" ))
(assert (= "" "" ))
(assert (not (= (str.to_lower (str.substr sym551  0 1))"k" )))
(assert (not (= "y" "n" )))
(assert (not (= "" "y" )))
(assert (not (= "" "y" )))
(assert (not (= "" sym209 )))
(assert (not (= (str.to_lower (str.substr sym551  0 1))"q" )))
(assert (not (= (str.to_lower (str.substr sym551  0 1))"g" )))
(assert (= "" sym161 ))
(check-sat)
(get-model)
(exit)
