(set-logic QF_S)
(set-option :parse-transducers true)
(set-option :produce-models true)
(define-fun str.del ((x String) (a Int) (b Int)) String
  (str.++ (str.substr x 0 a) (str.substr x b (str.len x))))
(declare-fun sym7 () String)
(declare-fun sym8 () String)
(declare-fun sym5 () String)
(declare-fun sym6 () String)
(declare-fun sym4 () String)
(define-fun Alphabet () RegLan 
	(re.* (re.union (str.to_re "A") (str.to_re "B") (str.to_re "C") ))
)

(assert (str.in_re sym4 Alphabet))
(assert (str.in_re sym6 Alphabet))
(assert (str.in_re sym5 Alphabet))
(assert (str.in_re sym8 Alphabet))
(assert (str.in_re sym7 Alphabet))
(assert (not (= "" (str.++ sym5 sym6 ))))
(assert (str.contains (str.++ (str.replace_all sym7  "B"  "A" )(str.del sym5  1 1))"C" ))
(assert (str.contains (str.del (str.replace_all sym7  "A"  "B" ) 2 2)"B" ))
(assert (not (= "" (str.replace_all (str.++ sym5 sym6 ) "B"  "C" ))))
(assert (not (= (str.++ (str.del (str.++ sym4 sym5 ) 4 6)"C" )"BC" )))
(assert (str.contains (str.del (str.++ (str.replace_all sym5  "A"  "B" )"A" ) 2 3)"B" ))
(assert (not (= (str.del (str.del (str.++ sym7 "B" ) 4 4) 1 3)"AC" )))
(assert (str.contains (str.++ sym4 sym6 )"" ))
(assert (not (= "" (str.++ (str.replace_all (str.++ sym7 "C" ) "A"  "B" )(str.replace_all sym7  "B"  "A" )"B" ))))
(assert (str.contains (str.del (str.++ (str.replace_all sym7  "B"  "A" )(str.del sym5  1 1)) 6 6)"" ))
(assert (not (str.contains (str.++ (str.del (str.replace_all sym7  "B"  "A" ) 3 3)"A" )"CB" )))
(assert (not (= "" (str.del sym6  3 3))))
(assert (not (= sym4 "C" )))
(assert (not (= (str.del (str.del sym8  1 3) 0 1)"BC" )))
(assert (not (str.contains (str.del sym5  0 2)"BC" )))
(assert (not (= "" (str.replace_all (str.replace_all sym8  "B"  "C" ) "B"  "A" ))))
(assert (not (= (str.replace_all sym4  "A"  "C" )"CA" )))
(assert (not (= "" (str.++ (str.replace_all sym7  "B"  "A" )"B" ))))
(assert (str.contains (str.replace_all (str.++ sym7 "B" ) "C"  "B" )"B" ))
(assert (str.contains (str.replace_all sym5  "A"  "B" )"" ))
(assert (str.contains (str.++ (str.del (str.replace_all sym7  "B"  "A" ) 3 3)"B" )"C" ))
(assert (str.contains (str.del (str.replace_all sym7  "A"  "B" ) 3 3)"" ))
(assert (= (str.replace_all (str.del (str.replace_all sym5  "B"  "C" ) 0 3) "B"  "A" )"" ))
(assert (not (= "" (str.++ sym4 "C" ))))
(assert (not (= "" (str.del (str.++ sym4 sym5 ) 4 6))))
(assert (not (= "" (str.replace_all sym5  "B"  "C" ))))
(assert (not (= "" (str.++ sym4 sym5 ))))
(assert (not (= "" (str.del sym7  3 3))))
(assert (not (str.contains (str.del sym8  2 3)"C" )))
(assert (not (= (str.++ (str.replace_all sym4  "A"  "C" )"C" )"BA" )))
(assert (not (= (str.++ (str.++ sym7 "C" )"A" )"" )))
(assert (not (= (str.replace_all sym6  "C"  "A" )"" )))
(assert (not (= "" (str.++ (str.replace_all sym8  "B"  "C" )(str.replace_all sym5  "B"  "A" )))))
(assert (not (str.contains (str.replace_all (str.++ sym7 "C" ) "A"  "B" )"A" )))
(assert (str.contains (str.del sym8  1 3)"" ))
(assert (not (= sym6 "" )))
(assert (not (= (str.++ sym8 "B" )"A" )))
(assert (not (str.contains (str.del sym6  2 3)"CB" )))
(assert (str.contains (str.replace_all (str.del (str.replace_all sym7  "A"  "B" ) 3 3) "B"  "A" )"" ))
(assert (not (= (str.++ sym7 "C" )"BB" )))
(assert (not (= (str.replace_all sym4  "A"  "B" )"" )))
(assert (str.contains (str.del (str.++ sym7 "B" ) 4 4)"" ))
(assert (not (str.contains (str.replace_all (str.++ (str.replace_all sym8  "B"  "C" )(str.replace_all sym5  "B"  "A" )) "A"  "C" )"B" )))
(assert (not (= "" (str.++ (str.replace_all sym5  "A"  "B" )"A" ))))
(assert (not (= "" (str.del (str.replace_all (str.del sym6  3 3) "B"  "C" ) 1 2))))
(assert (not (= (str.del (str.++ (str.++ sym7 "C" )"A" ) 2 4)"A" )))
(assert (not (= "" sym8 )))
(assert (str.contains (str.replace_all sym7  "B"  "A" )"" ))
(assert (not (= (str.++ sym5 "B" )"A" )))
(assert (not (= "" (str.del (str.replace_all (str.del sym6  3 3) "B"  "C" ) 3 3))))
(assert (not (= "" sym5 )))
(assert (not (= "" (str.replace_all (str.replace_all (str.++ sym7 "C" ) "A"  "B" ) "C"  "B" ))))
(assert (not (= (str.del sym6  2 3)"AA" )))
(assert (not (= (str.del (str.replace_all (str.replace_all sym8  "B"  "C" ) "B"  "A" ) 1 2)"A" )))
(assert (not (str.contains (str.replace_all (str.del sym6  3 3) "B"  "C" )"AC" )))
(assert (not (= "" (str.++ (str.++ (str.replace_all sym8  "B"  "C" )"B" )"C" ))))
(assert (not (= (str.++ sym7 sym4 )"AC" )))
(assert (not (= (str.replace_all (str.del (str.del sym6  2 3) 1 2) "A"  "B" )"" )))
(assert (not (= "" (str.replace_all sym5  "B"  "A" ))))
(assert (not (= (str.replace_all (str.++ sym5 sym6 ) "B"  "C" )"CC" )))
(assert (not (= (str.del (str.++ sym4 sym6 ) 5 5)"" )))
(assert (not (= "" (str.replace_all (str.replace_all (str.replace_all sym5  "B"  "A" ) "B"  "A" ) "C"  "B" ))))
(assert (not (= "" (str.del sym6  1 3))))
(assert (not (= "" (str.replace_all (str.del (str.++ sym4 sym6 ) 5 5) "A"  "C" ))))
(assert (not (= (str.replace_all (str.++ (str.replace_all sym7  "B"  "A" )(str.del sym5  1 1)) "A"  "C" )"" )))
(assert (not (= "" (str.del sym5  1 1))))
(assert (not (= "" (str.del (str.del sym6  2 3) 1 2))))
(assert (str.contains sym7 "A" ))
(assert (str.contains (str.++ (str.++ sym7 "C" )(str.del sym8  2 3))"" ))
(assert (not (= "" (str.replace_all (str.replace_all (str.++ sym5 sym6 ) "B"  "C" ) "C"  "B" ))))
(assert (not (= "" (str.replace_all sym8  "B"  "C" ))))
(assert (not (= (str.replace_all sym7  "A"  "B" )"AC" )))
(assert (str.contains (str.++ (str.++ sym4 sym6 )"B" )"" ))
(assert (not (= (str.replace_all (str.del sym6  3 3) "A"  "B" )"AB" )))
(assert (not (= (str.++ (str.del (str.replace_all sym7  "B"  "A" ) 3 3)(str.replace_all (str.del sym6  3 3) "B"  "C" ))"" )))
(assert (not (str.contains (str.del (str.replace_all (str.++ sym5 sym6 ) "B"  "C" ) 5 6)"BB" )))
(assert (not (= (str.replace_all (str.del (str.replace_all sym5  "B"  "C" ) 0 3) "A"  "B" )"B" )))
(assert (not (str.contains (str.del (str.del (str.replace_all sym5  "B"  "C" ) 0 3) 0 0)"A" )))
(assert (str.contains (str.del (str.replace_all sym5  "B"  "C" ) 0 3)"" ))
(assert (not (= "" (str.del (str.replace_all sym7  "B"  "A" ) 3 3))))
(assert (not (= "" (str.++ (str.del (str.replace_all sym7  "A"  "B" ) 3 3)(str.del (str.++ sym7 "B" ) 4 4)))))
(assert (str.contains (str.++ sym8 "C" )"A" ))
(assert (not (= (str.replace_all (str.del sym7  3 3) "C"  "A" )"BB" )))
(assert (not (= "" (str.++ (str.del (str.del sym6  2 3) 1 2)"C" ))))
(assert (not (str.contains (str.++ (str.++ (str.++ sym7 "C" )"A" )(str.del (str.replace_all sym7  "A"  "B" ) 2 2))"BA" )))
(assert (not (= (str.replace_all (str.del sym6  1 3) "C"  "A" )"A" )))
(assert (not (= (str.del (str.replace_all (str.del sym6  3 3) "B"  "C" ) 1 2)"B" )))
(assert (not (= (str.del sym4  3 3)"" )))
(assert (not (= (str.replace_all (str.replace_all sym5  "B"  "A" ) "B"  "A" )"BC" )))
(assert (str.contains (str.replace_all sym7  "B"  "A" )"C" ))
(assert (str.contains (str.++ (str.replace_all (str.del sym6  1 3) "C"  "A" )(str.replace_all (str.del sym6  3 3) "A"  "B" ))"" ))
(assert (not (str.contains (str.++ sym7 "B" )"BC" )))
(assert (not (= (str.++ (str.replace_all sym8  "B"  "C" )"B" )"CB" )))
(assert (not (= "" (str.++ (str.replace_all sym5  "B"  "C" )sym4 sym5 ))))
(assert (not (= "" (str.del (str.del sym6  2 3) 2 2))))
(check-sat)
(get-model)
(exit)
