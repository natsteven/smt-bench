(set-logic QF_S)
(set-option :produce-models true)
(declare-fun r4 () String)
(declare-fun r5 () String)
(declare-fun r6 () String)
(declare-fun r7 () String)
(declare-fun r8 () String)

(assert (not (= "" (str.++ r4 r6 (str.++ r4 r6 )))))
(assert (not (= r8 "B" )))
(assert (not (= (str.++ "C" (str.++ "B" r5 ))"B" )))
(assert (not (= (str.++ r5 r7 )"A" )))
(assert (not (= "" (str.++ "C" r7 ))))
(assert (not (= "" (str.++ "C" r6 ))))
(assert (not (= (str.++ "B" (str.++ r8 r5 ))"" )))
(assert (str.contains (str.++ "B" r5 )"" ))
(assert (not (= (str.++ r6 r7 )"" )))
(assert (str.contains (str.++ r4 r6 )"CB" ))
(assert (not (= "" r4 )))
(assert (str.contains (str.++ "A" (str.++ "B" r5 ))"B" ))
(assert (not (= r6 "B" )))
(assert (not (= (str.++ r4 r6 (str.++ "C" r4 ))"C" )))
(assert (not (= "" (str.++ "C" (str.++ "C" r6 )))))
(assert (not (= "" (str.++ r4 r6 (str.++ "C" r6 )))))
(assert (str.contains (str.++ "C" r7 (str.++ "C" r6 ))"" ))
(assert (str.contains (str.++ "B" r4 )"" ))
(assert (not (str.contains r5 "A" )))
(assert (not (= "" (str.++ "C" r4 ))))
(assert (not (= "" (str.++ "B" (str.++ r8 r5 )))))
(assert (str.contains (str.++ "A" (str.++ "C" r7 ))"C" ))
(assert (not (= "" r7 )))
(assert (not (= (str.++ r4 r6 )"A" )))
(assert (not (= "" (str.++ r8 r5 ))))
(check-sat)
(get-model)
(exit)
