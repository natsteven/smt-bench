concat_isEmpty_equals_contains_l2_d2_bench.smt2: sat ,(   (define-fun sym6 () String     "C")   (define-fun sym4 () String     "B")   (define-fun sym7 () String     "A")   (define-fun sym5 () String     "B")   (define-fun sym8 () String     "A")   (define-fun Alphabet () RegLan     (re.* (re.union (re.union (str.to_re "A") (str.to_re "B")) (str.to_re "C")))) ) 
delete_concat_isEmpty_equals_contains_l3_d3_bench.smt2: (error "line 19 column 11: invalid assert command, term is not Boolean") ,sat (   (define-fun sym6 () String     "BCA")   (define-fun sym4 () String     "BC")   (define-fun sym7 () String     "A")   (define-fun sym5 () String     "ACC")   (define-fun sym8 () String     "CB")   (define-fun Alphabet () RegLan     (re.* (re.union (re.union (str.to_re "A") (str.to_re "B")) (str.to_re "C")))) ) 
delete_isEmpty_equals_contains_l2_d2_bench.smt2: (error "line 19 column 12: invalid assert command, term is not Boolean") ,(error "line 20 column 12: invalid assert command, term is not Boolean") (error "line 21 column 12: invalid assert command, term is not Boolean") sat (   (define-fun sym6 () String     "C")   (define-fun sym4 () String     "A")   (define-fun sym7 () String     "B")   (define-fun sym5 () String     "")   (define-fun sym8 () String     "C")   (define-fun Alphabet () RegLan     (re.* (re.union (re.union (str.to_re "A") (str.to_re "B")) (str.to_re "C")))) ) 
replace_concat_isEmpty_equals_contains_l3_d3_bench.smt2: unknown ,(error "line 83 column 10: model is not available") 
replace_delete_concat_isEmpty_equals_contains_l3_d3_bench.smt2: unknown ,(error "line 115 column 10: model is not available") 
replace_isEmpty_equals_contains_l2_d2_bench.smt2: unknown ,(error "line 43 column 10: model is not available") 
replace_toLowerCase_delete_substring12_concat_isEmpty_equals_contains_l3_d3_bench.smt2: unknown ,(error "line 185 column 10: model is not available") 
substring12_concat_isEmpty_equals_contains_l3_d2_bench.smt2: sat ,(   (define-fun sym6 () String     "CC")   (define-fun sym4 () String     "ACAC")   (define-fun sym7 () String     "ABA")   (define-fun sym5 () String     "")   (define-fun sym8 () String     "CB")   (define-fun Alphabet () RegLan     (re.* (re.union (re.union (str.to_re "A") (str.to_re "B")) (str.to_re "C")))) ) 
substring12_concat_isEmpty_equals_contains_l3_d3_bench.smt2: sat ,(   (define-fun sym6 () String     "BA")   (define-fun sym4 () String     "AABC")   (define-fun sym7 () String     "CCA")   (define-fun sym5 () String     "A")   (define-fun sym8 () String     "CA")   (define-fun Alphabet () RegLan     (re.* (re.union (re.union (str.to_re "A") (str.to_re "B")) (str.to_re "C")))) ) 
substring12_isEmpty_equals_contains_l2_d2_bench.smt2: (error "line 17 column 12: invalid assert command, term is not Boolean") ,(error "line 18 column 12: invalid assert command, term is not Boolean") (error "line 19 column 12: invalid assert command, term is not Boolean") sat (   (define-fun sym6 () String     "A")   (define-fun sym4 () String     "")   (define-fun sym7 () String     "AA")   (define-fun sym5 () String     "")   (define-fun sym8 () String     "B")   (define-fun Alphabet () RegLan     (re.* (re.union (re.union (str.to_re "A") (str.to_re "B")) (str.to_re "C")))) ) 
toLowerCase_concat_isEmpty_equals_contains_l3_d3_bench.smt2: sat ,(   (define-fun sym6 () String     "b")   (define-fun Alphabet () RegLan     (let ((a!1 (re.union (re.union (re.union (str.to_re "A") (str.to_re "B"))                                (str.to_re "a"))                      (str.to_re "b"))))   (re.* a!1)))   (define-fun sym5 () String     "aA")   (define-fun sym8 () String     "Ba")   (define-fun sym9 () String     "B")   (define-fun sym7 () String     "Bb") ) 
toLowerCase_isEmpty_equals_contains_l2_d2_bench.smt2: (error "line 27 column 12: invalid assert command, term is not Boolean") ,(error "line 28 column 12: invalid assert command, term is not Boolean") (error "line 29 column 12: invalid assert command, term is not Boolean") (error "line 30 column 12: invalid assert command, term is not Boolean") (error "line 31 column 12: invalid assert command, term is not Boolean") (error "line 32 column 12: invalid assert command, term is not Boolean") sat (   (define-fun sym9 () String     "C")   (define-fun Alphabet () RegLan     (let ((a!1 (re.union (re.union (re.union (str.to_re "A") (str.to_re "B"))                                (str.to_re "C"))                      (str.to_re "a"))))   (re.* (re.union (re.union a!1 (str.to_re "b")) (str.to_re "c")))))   (define-fun sym7 () String     "B")   (define-fun sym10 () String     "B")   (define-fun sym11 () String     "c")   (define-fun sym8 () String     "B") ) 
toLowerCase_substring12_concat_isEmpty_equals_contains_l3_d2_bench.smt2: sat ,(   (define-fun sym8 () String     "a")   (define-fun sym7 () String     "A")   (define-fun sym9 () String     "c")   (define-fun sym11 () String     "A")   (define-fun Alphabet () RegLan     (let ((a!1 (re.union (re.union (re.union (str.to_re "A") (str.to_re "B"))                                (str.to_re "C"))                      (str.to_re "a"))))   (re.* (re.union (re.union a!1 (str.to_re "b")) (str.to_re "c")))))   (define-fun sym10 () String     "bca") ) 
