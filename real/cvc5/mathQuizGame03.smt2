(set-logic ALL)
(set-option :produce-models true)
(define-fun-rec str.toLower ((x String)) String
  (ite (= x "")
      ""
      (let ((Head (str.at x 0)))
        (str.++ 
          (ite (and (<= 65 (str.to_code Head)) 
                     (<= (str.to_code Head) 90))
               (str.from_code (+ (str.to_code Head) 32))
               Head)
          (str.toLower (str.substr x 1 (- (str.len x) 1)))))))
(declare-fun sym252 () String)
(declare-fun sym122 () String)

(assert (= (str.toLower sym252 )"/quit" ))
(assert (not (= (str.toLower sym122 )"middle school" )))
(assert (= (str.toLower sym122 )"high school" ))
(assert (not (= (str.toLower sym252 )"y" )))
(assert (not (= (str.toLower sym252 )"n" )))
(assert (not (= (str.toLower sym252 )"/restart" )))
(assert (not (= (str.toLower sym122 )"elementary" )))
(check-sat)
(get-model)
(exit)
