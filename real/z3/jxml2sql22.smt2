(set-logic ALL)
(set-option :produce-models true)
(define-fun-rec str.toLower ((x String)) String
  (ite (= x "")
      ""
      (let ((Head (str.at x 0)))
        (str.++ 
          (ite (and (<= 65 (str.to_code Head)) 
                     (<= (str.to_code Head) 90))
               (str.from_code (+ (str.to_code Head) 32))
               Head)
          (str.toLower (str.substr x 1 (- (str.len x) 1)))))))
(declare-fun sym20 () String)
(declare-fun sym205 () String)
(declare-fun sym239 () String)
(declare-fun sym175 () String)
(declare-fun sym264 () String)
(declare-fun sym254 () String)
(declare-fun sym299 () String)
(declare-fun sym289 () String)
(declare-fun sym113 () String)
(declare-fun sym135 () String)
(declare-fun sym279 () String)
(declare-fun sym225 () String)
(declare-fun sym215 () String)
(declare-fun sym160 () String)
(declare-fun sym150 () String)
(declare-fun sym195 () String)
(declare-fun sym185 () String)

(assert (not (= (str.toLower sym175 )(str.toLower "name" ))))
(assert (= (str.toLower sym225 )(str.toLower "table" )))
(assert (not (= (str.toLower sym289 )(str.toLower "description" ))))
(assert (not (= (str.toLower sym20 )"sql" )))
(assert (not (= (str.toLower sym299 )(str.toLower "field" ))))
(assert (= (str.toLower sym20 )"html" ))
(assert (not (= (str.toLower sym254 )(str.toLower "name" ))))
(assert (= (str.toLower sym264 )(str.toLower "description" )))
(assert (not (= (str.toLower sym215 )(str.toLower "description" ))))
(assert (= (str.toLower sym113 )(str.toLower "database" )))
(assert (not (= (str.toLower sym150 )(str.toLower "name" ))))
(assert (not (= (str.toLower sym279 )(str.toLower "name" ))))
(assert (not (= (str.toLower sym195 )(str.toLower "table" ))))
(assert (= (str.toLower sym135 )(str.toLower "name" )))
(assert (= (str.toLower sym239 )(str.toLower "name" )))
(assert (= (str.toLower sym160 )(str.toLower "description" )))
(assert (not (= (str.toLower sym205 )(str.toLower "name" ))))
(assert (not (= (str.toLower sym185 )(str.toLower "description" ))))
(check-sat)
(get-model)
(exit)
