(set-logic QF_S)
(set-option :parse-transducers true)
(set-option :produce-models true)
(define-fun-rec toLower ((x String) (y String)) Bool
   (or (and (= x "") (= y ""))
       (and (not (= x "")) (not (= y ""))
           (= (char.code (str.head y))
               (ite (and (<= 65 (char.code (str.head x)))
                       (<= (char.code (str.head x)) 90))
                   (+ (char.code (str.head x)) 32)
                   (char.code (str.head x))))
           (toLower (str.tail x) (str.tail y))))
)
(declare-fun sym800 () String)
(declare-fun sym209 () String)
(declare-fun sym1899 () String)
(declare-fun sym2648 () String)
(declare-fun sym551 () String)
(declare-fun sym2117 () String)
(declare-fun sym1038 () String)
(declare-fun sym2333 () String)
(declare-fun sym1256 () String)
(declare-fun sym2551 () String)
(declare-fun sym1472 () String)
(declare-fun sym161 () String)
(declare-fun sym1690 () String)
(declare-fun L13  () String)
(declare-fun L15  () String)
(declare-fun L8  () String)
(declare-fun L20  () String)
(declare-fun L10  () String)
(declare-fun L6  () String)
(declare-fun L22  () String)
(declare-fun L3  () String)
(declare-fun L4  () String)
(declare-fun L1  () String)
(declare-fun L2  () String)
(declare-fun L0  () String)
(assert (toLower (str.substr sym2551  0 1) L0 ))
(assert (toLower (str.substr sym800  0 1) L2 ))
(assert (toLower (str.substr sym1256  0 1) L1 ))
(assert (toLower (str.substr sym551  0 1) L4 ))
(assert (toLower (str.substr sym1690  0 1) L3 ))
(assert (toLower (str.substr sym1472  0 1) L22 ))
(assert (toLower (str.substr sym2117  0 1) L6 ))
(assert (toLower (str.substr sym209  0 1) L10 ))
(assert (toLower (str.substr sym2333  0 1) L20 ))
(assert (toLower (str.substr sym1899  0 1) L8 ))
(assert (toLower (str.substr sym2648  0 1) L15 ))
(assert (toLower (str.substr sym1038  0 1) L13 ))

(assert (not (= L0 "k" )))
(assert (not (= L1 "q" )))
(assert (= "" sym161 ))
(assert (not (= "" sym2333 )))
(assert (not (= "" sym800 )))
(assert (not (= L2 "q" )))
(assert (not (= L3 "q" )))
(assert (not (= "n" "y" )))
(assert (= "y" "y" ))
(assert (= L4 "p" ))
(assert (not (= "" sym2117 )))
(assert (not (= L2 "p" )))
(assert (not (= L6 "q" )))
(assert (not (= L2 "k" )))
(assert (not (= "" "n" )))
(assert (not (= "" sym209 )))
(assert (= L8 "p" ))
(assert (not (= L6 "p" )))
(assert (= L10 "y" ))
(assert (= L2 "g" ))
(assert (not (= "" sym1472 )))
(assert (not (= "" sym1899 )))
(assert (not (= L0 "p" )))
(assert (= L13 "p" ))
(assert (not (= L1 "k" )))
(assert (not (= L15 "y" )))
(assert (= L1 "g" ))
(assert (not (= L6 "k" )))
(assert (= "" "" ))
(assert (= L0 "g" ))
(assert (not (= "" L15 )))
(assert (not (= "" sym2648 )))
(assert (not (= "" "y" )))
(assert (= L20 "p" ))
(assert (not (= L4 "q" )))
(assert (not (= L22 "q" )))
(assert (= L22 "p" ))
(assert (not (= "" "q" )))
(assert (not (= "" sym1256 )))
(assert (not (= "" sym551 )))
(assert (not (= "" sym1038 )))
(assert (= L6 "g" ))
(assert (not (= L3 "p" )))
(assert (not (= L13 "q" )))
(assert (not (= "" L10 )))
(assert (not (= L20 "q" )))
(assert (not (= "" sym2551 )))
(assert (not (= "" sym1690 )))
(assert (not (= "y" "n" )))
(assert (not (= L3 "k" )))
(assert (not (= "" "y" )))
(assert (= L3 "g" ))
(assert (not (= L8 "q" )))
(assert (not (= L0 "q" )))
(assert (not (= L1 "p" )))
(check-sat)
(get-model)
(exit)
