(set-logic QF_S)
(set-option :parse-transducers true)
(set-option :produce-models true)
(define-fun-rec toLower ((x String) (y String)) Bool
   (or (and (= x "") (= y ""))
       (and (not (= x "")) (not (= y ""))
           (= (char.code (str.head y))
               (ite (and (<= 65 (char.code (str.head x)))
                       (<= (char.code (str.head x)) 90))
                   (+ (char.code (str.head x)) 32)
                   (char.code (str.head x))))
           (toLower (str.tail x) (str.tail y))))
)
(declare-fun sym2170 () String)
(declare-fun sym209 () String)
(declare-fun sym1946 () String)
(declare-fun sym817 () String)
(declare-fun sym1528 () String)
(declare-fun sym3228 () String)
(declare-fun sym3327 () String)
(declare-fun sym551 () String)
(declare-fun sym2811 () String)
(declare-fun sym1304 () String)
(declare-fun sym3006 () String)
(declare-fun sym1731 () String)
(declare-fun sym2587 () String)
(declare-fun sym2365 () String)
(declare-fun sym1073 () String)
(declare-fun sym161 () String)
(declare-fun L27  () String)
(declare-fun L12  () String)
(declare-fun L13  () String)
(declare-fun L7  () String)
(declare-fun L8  () String)
(declare-fun L5  () String)
(declare-fun L10  () String)
(declare-fun L21  () String)
(declare-fun L32  () String)
(declare-fun L6  () String)
(declare-fun L22  () String)
(declare-fun L3  () String)
(declare-fun L1  () String)
(declare-fun L2  () String)
(declare-fun L0  () String)
(assert (toLower (str.substr sym1073  0 1) L0 ))
(assert (toLower (str.substr sym2811  0 1) L2 ))
(assert (toLower (str.substr sym3006  0 1) L1 ))
(assert (toLower (str.substr sym1946  0 1) L3 ))
(assert (toLower (str.substr sym551  0 1) L22 ))
(assert (toLower (str.substr sym2587  0 1) L6 ))
(assert (toLower (str.substr sym1304  0 1) L32 ))
(assert (toLower (str.substr sym1731  0 1) L21 ))
(assert (toLower (str.substr sym2365  0 1) L10 ))
(assert (toLower (str.substr sym817  0 1) L5 ))
(assert (toLower (str.substr sym209  0 1) L8 ))
(assert (toLower (str.substr sym3228  0 1) L7 ))
(assert (toLower (str.substr sym2170  0 1) L13 ))
(assert (toLower (str.substr sym3327  0 1) L12 ))
(assert (toLower (str.substr sym1528  0 1) L27 ))

(assert (not (= L0 "q" )))
(assert (not (= L1 "k" )))
(assert (not (= L2 "q" )))
(assert (not (= L3 "q" )))
(assert (not (= "" sym1731 )))
(assert (not (= L1 "p" )))
(assert (not (= "" sym1073 )))
(assert (not (= "" sym2365 )))
(assert (not (= L5 "p" )))
(assert (= L6 "p" ))
(assert (not (= "" sym817 )))
(assert (not (= "" sym2811 )))
(assert (not (= L7 "q" )))
(assert (= "y" "y" ))
(assert (not (= "" sym3327 )))
(assert (not (= "" L8 )))
(assert (= L8 "y" ))
(assert (not (= "" sym1304 )))
(assert (not (= L10 "p" )))
(assert (not (= "" sym551 )))
(assert (not (= "" sym2587 )))
(assert (not (= L5 "q" )))
(assert (not (= "" sym3006 )))
(assert (not (= "" L12 )))
(assert (not (= L13 "p" )))
(assert (= L5 "k" ))
(assert (not (= "" "y" )))
(assert (= L13 "k" ))
(assert (not (= L12 "y" )))
(assert (not (= L10 "k" )))
(assert (not (= L6 "q" )))
(assert (= L0 "g" ))
(assert (= L2 "k" ))
(assert (not (= L21 "q" )))
(assert (= L22 "p" ))
(assert (not (= L0 "p" )))
(assert (not (= "" sym1528 )))
(assert (not (= L21 "p" )))
(assert (= L10 "g" ))
(assert (not (= L13 "q" )))
(assert (not (= L27 "p" )))
(assert (not (= L0 "k" )))
(assert (not (= L2 "p" )))
(assert (not (= "y" "n" )))
(assert (= L3 "p" ))
(assert (not (= L27 "q" )))
(assert (not (= L32 "q" )))
(assert (not (= "" sym2170 )))
(assert (= "" sym161 ))
(assert (not (= "" sym1946 )))
(assert (= L32 "p" ))
(assert (= L27 "k" ))
(assert (= "" "" ))
(assert (not (= L22 "q" )))
(assert (not (= L21 "k" )))
(assert (not (= "" sym209 )))
(assert (not (= "" "q" )))
(assert (= L1 "g" ))
(assert (not (= "n" "y" )))
(assert (not (= "" sym3228 )))
(assert (not (= L1 "q" )))
(assert (not (= "" "n" )))
(assert (not (= "" "y" )))
(assert (= L21 "g" ))
(assert (= L7 "p" ))
(assert (not (= L10 "q" )))
(check-sat)
(get-model)
(exit)
