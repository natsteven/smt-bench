(set-logic QF_S)
(set-option :parse-transducers true)
(set-option :produce-models true)
(define-fun-rec toLower ((x String) (y String)) Bool
   (or (and (= x "") (= y ""))
       (and (not (= x "")) (not (= y ""))
           (= (char.code (str.head y))
               (ite (and (<= 65 (char.code (str.head x)))
                       (<= (char.code (str.head x)) 90))
                   (+ (char.code (str.head x)) 32)
                   (char.code (str.head x))))
           (toLower (str.tail x) (str.tail y))))
)
(declare-fun sym1907 () String)
(declare-fun sym209 () String)
(declare-fun sym817 () String)
(declare-fun sym551 () String)
(declare-fun sym1689 () String)
(declare-fun sym1035 () String)
(declare-fun sym2125 () String)
(declare-fun sym1253 () String)
(declare-fun sym2343 () String)
(declare-fun sym1471 () String)
(declare-fun sym2660 () String)
(declare-fun sym2561 () String)
(declare-fun sym161 () String)
(declare-fun L12  () String)
(declare-fun L9  () String)
(declare-fun L15  () String)
(declare-fun L8  () String)
(declare-fun L5  () String)
(declare-fun L10  () String)
(declare-fun L3  () String)
(declare-fun L4  () String)
(declare-fun L1  () String)
(declare-fun L2  () String)
(declare-fun L0  () String)
(declare-fun L17  () String)
(define-fun Alphabet () RegLan 
	(re.* (re.union (str.to_re "A") (str.to_re "B") (str.to_re "C") (str.to_re "D") (str.to_re "E") (str.to_re "F") (str.to_re "G") (str.to_re "H") (str.to_re "I") (str.to_re "J") (str.to_re "K") (str.to_re "L") (str.to_re "M") (str.to_re "N") (str.to_re "O") (str.to_re "P") (str.to_re "Q") (str.to_re "R") (str.to_re "S") (str.to_re "T") (str.to_re "U") (str.to_re "V") (str.to_re "W") (str.to_re "X") (str.to_re "Y") (str.to_re "Z") (str.to_re "a") (str.to_re "b") (str.to_re "c") (str.to_re "d") (str.to_re "e") (str.to_re "f") (str.to_re "g") (str.to_re "h") (str.to_re "i") (str.to_re "j") (str.to_re "k") (str.to_re "l") (str.to_re "m") (str.to_re "n") (str.to_re "o") (str.to_re "p") (str.to_re "q") (str.to_re "r") (str.to_re "s") (str.to_re "t") (str.to_re "u") (str.to_re "v") (str.to_re "w") (str.to_re "x") (str.to_re "y") (str.to_re "z") ))
)
(assert (toLower (str.substr sym817  0 1) L17 ))
(assert (toLower (str.substr sym2660  0 1) L0 ))
(assert (toLower (str.substr sym209  0 1) L2 ))
(assert (toLower (str.substr sym1035  0 1) L1 ))
(assert (toLower (str.substr sym2343  0 1) L4 ))
(assert (toLower (str.substr sym2561  0 1) L3 ))
(assert (toLower (str.substr sym1689  0 1) L10 ))
(assert (toLower (str.substr sym2125  0 1) L5 ))
(assert (toLower (str.substr sym1471  0 1) L8 ))
(assert (toLower (str.substr sym1907  0 1) L15 ))
(assert (toLower (str.substr sym551  0 1) L9 ))
(assert (toLower (str.substr sym1253  0 1) L12 ))

(assert (str.in_re sym161 Alphabet))
(assert (str.in_re sym2561 Alphabet))
(assert (str.in_re sym2660 Alphabet))
(assert (str.in_re sym1471 Alphabet))
(assert (str.in_re sym2343 Alphabet))
(assert (str.in_re sym1253 Alphabet))
(assert (str.in_re sym2125 Alphabet))
(assert (str.in_re sym1035 Alphabet))
(assert (str.in_re sym1689 Alphabet))
(assert (str.in_re sym551 Alphabet))
(assert (str.in_re sym817 Alphabet))
(assert (str.in_re sym209 Alphabet))
(assert (str.in_re sym1907 Alphabet))(assert (<= 1 (str.len sym1907 )))
(assert (<= 1 (str.len sym1035 )))
(assert (<= 1 (str.len sym1253 )))
(assert (<= 1 (str.len sym551 )))
(assert (<= 1 (str.len sym2561 )))
(assert (<= 1 (str.len sym817 )))
(assert (<= 1 (str.len sym1471 )))
(assert (<= 1 (str.len sym2343 )))
(assert (<= 1 (str.len sym2660 )))
(assert (<= 1 (str.len sym1689 )))
(assert (<= 1 (str.len sym2125 )))
(assert (<= 1 (str.len sym209 )))

(assert (not (= L0 "y" )))
(assert (= L1 "p" ))
(assert (= "y" "y" ))
(assert (not (= "" sym2561 )))
(assert (not (= "n" "y" )))
(assert (not (= "" "n" )))
(assert (= L2 "y" ))
(assert (not (= L3 "q" )))
(assert (not (= "y" "n" )))
(assert (not (= L4 "q" )))
(assert (not (= "" sym1035 )))
(assert (= L5 "p" ))
(assert (not (= "" sym2343 )))
(assert (= L4 "p" ))
(assert (not (= "" sym817 )))
(assert (not (= "" L2 )))
(assert (not (= "" sym209 )))
(assert (= L8 "p" ))
(assert (= L9 "p" ))
(assert (not (= "" sym1471 )))
(assert (not (= L10 "q" )))
(assert (not (= "" "y" )))
(assert (not (= "" sym1689 )))
(assert (not (= "" L0 )))
(assert (= L12 "p" ))
(assert (not (= L5 "q" )))
(assert (not (= L8 "q" )))
(assert (not (= "" sym1907 )))
(assert (not (= "" "y" )))
(assert (= "" "" ))
(assert (not (= L15 "q" )))
(assert (not (= "" sym551 )))
(assert (= L10 "p" ))
(assert (= L17 "p" ))
(assert (not (= L1 "q" )))
(assert (= "" sym161 ))
(assert (= L15 "p" ))
(assert (= L3 "p" ))
(assert (not (= "" sym1253 )))
(assert (not (= L9 "q" )))
(assert (not (= "" sym2660 )))
(assert (not (= "" "q" )))
(assert (not (= "" sym2125 )))
(assert (not (= L17 "q" )))
(assert (not (= L12 "q" )))
(check-sat)
(get-model)
(exit)
