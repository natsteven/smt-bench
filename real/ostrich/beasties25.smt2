(set-logic QF_S)
(set-option :parse-transducers true)
(set-option :produce-models true)
(define-fun-rec toLower ((x String) (y String)) Bool
   (or (and (= x "") (= y ""))
       (and (not (= x "")) (not (= y ""))
           (= (char.code (str.head y))
               (ite (and (<= 65 (char.code (str.head x)))
                       (<= (char.code (str.head x)) 90))
                   (+ (char.code (str.head x)) 32)
                   (char.code (str.head x))))
           (toLower (str.tail x) (str.tail y))))
)
(declare-fun sym811 () String)
(declare-fun sym209 () String)
(declare-fun sym4717 () String)
(declare-fun sym1679 () String)
(declare-fun sym2538 () String)
(declare-fun sym2953 () String)
(declare-fun sym551 () String)
(declare-fun sym2107 () String)
(declare-fun sym4206 () String)
(declare-fun sym1257 () String)
(declare-fun sym4623 () String)
(declare-fun sym3169 () String)
(declare-fun sym2751 () String)
(declare-fun sym4413 () String)
(declare-fun sym1036 () String)
(declare-fun sym2323 () String)
(declare-fun sym1894 () String)
(declare-fun sym3376 () String)
(declare-fun sym3793 () String)
(declare-fun sym3583 () String)
(declare-fun sym4000 () String)
(declare-fun sym1470 () String)
(declare-fun sym161 () String)
(declare-fun L27  () String)
(declare-fun L38  () String)
(declare-fun L17  () String)
(declare-fun L12  () String)
(declare-fun L23  () String)
(declare-fun L13  () String)
(declare-fun L35  () String)
(declare-fun L9  () String)
(declare-fun L7  () String)
(declare-fun L8  () String)
(declare-fun L53  () String)
(declare-fun L5  () String)
(declare-fun L10  () String)
(declare-fun L21  () String)
(declare-fun L6  () String)
(declare-fun L11  () String)
(declare-fun L3  () String)
(declare-fun L4  () String)
(declare-fun L71  () String)
(declare-fun L1  () String)
(declare-fun L2  () String)
(declare-fun L0  () String)
(assert (toLower (str.substr sym3793  0 1) L0 ))
(assert (toLower (str.substr sym3169  0 1) L2 ))
(assert (toLower (str.substr sym2953  0 1) L1 ))
(assert (toLower (str.substr sym4717  0 1) L71 ))
(assert (toLower (str.substr sym551  0 1) L4 ))
(assert (toLower (str.substr sym1679  0 1) L3 ))
(assert (toLower (str.substr sym2538  0 1) L11 ))
(assert (toLower (str.substr sym1036  0 1) L6 ))
(assert (toLower (str.substr sym1257  0 1) L21 ))
(assert (toLower (str.substr sym4000  0 1) L10 ))
(assert (toLower (str.substr sym811  0 1) L5 ))
(assert (toLower (str.substr sym3376  0 1) L53 ))
(assert (toLower (str.substr sym2751  0 1) L8 ))
(assert (toLower (str.substr sym1470  0 1) L7 ))
(assert (toLower (str.substr sym2323  0 1) L9 ))
(assert (toLower (str.substr sym209  0 1) L35 ))
(assert (toLower (str.substr sym4206  0 1) L13 ))
(assert (toLower (str.substr sym1894  0 1) L23 ))
(assert (toLower (str.substr sym2107  0 1) L12 ))
(assert (toLower (str.substr sym4623  0 1) L17 ))
(assert (toLower (str.substr sym4413  0 1) L38 ))
(assert (toLower (str.substr sym3583  0 1) L27 ))

(assert (not (= "y" "n" )))
(assert (not (= L0 "p" )))
(assert (not (= L1 "g" )))
(assert (not (= L2 "p" )))
(assert (= L3 "h" ))
(assert (= L4 "k" ))
(assert (not (= L5 "p" )))
(assert (not (= L6 "k" )))
(assert (not (= L7 "q" )))
(assert (not (= "" sym2323 )))
(assert (not (= L8 "q" )))
(assert (not (= "" sym4623 )))
(assert (not (= "" sym811 )))
(assert (not (= L9 "g" )))
(assert (not (= L10 "p" )))
(assert (not (= L11 "p" )))
(assert (not (= "" sym4206 )))
(assert (= L12 "g" ))
(assert (not (= "" sym2751 )))
(assert (= L13 "k" ))
(assert (not (= "" sym209 )))
(assert (not (= L12 "p" )))
(assert (not (= L8 "k" )))
(assert (not (= L9 "k" )))
(assert (= L17 "k" ))
(assert (not (= L9 "r" )))
(assert (not (= "" sym3583 )))
(assert (not (= L6 "l" )))
(assert (= L0 "g" ))
(assert (= L21 "k" ))
(assert (= L9 "h" ))
(assert (not (= L23 "p" )))
(assert (= L8 "g" ))
(assert (not (= L6 "p" )))
(assert (not (= L10 "r" )))
(assert (not (= L27 "p" )))
(assert (not (= L3 "g" )))
(assert (not (= L4 "q" )))
(assert (not (= L0 "q" )))
(assert (not (= L21 "q" )))
(assert (not (= "" sym4413 )))
(assert (not (= L5 "k" )))
(assert (not (= L3 "q" )))
(assert (not (= "" sym1257 )))
(assert (not (= L13 "q" )))
(assert (= L35 "y" ))
(assert (not (= "" "n" )))
(assert (not (= L12 "k" )))
(assert (= L2 "k" ))
(assert (not (= L38 "p" )))
(assert (not (= L6 "r" )))
(assert (not (= L1 "q" )))
(assert (not (= L38 "q" )))
(assert (not (= L5 "q" )))
(assert (not (= L6 "g" )))
(assert (not (= "" sym2107 )))
(assert (= "y" "y" ))
(assert (not (= L1 "p" )))
(assert (not (= L8 "p" )))
(assert (not (= L11 "q" )))
(assert (not (= "" sym551 )))
(assert (not (= L7 "p" )))
(assert (not (= L27 "k" )))
(assert (not (= "n" "y" )))
(assert (not (= L9 "q" )))
(assert (not (= "" sym4717 )))
(assert (not (= "" sym1470 )))
(assert (not (= L12 "q" )))
(assert (not (= "" L35 )))
(assert (not (= L38 "k" )))
(assert (= L53 "k" ))
(assert (not (= "" "y" )))
(assert (not (= L0 "k" )))
(assert (= L10 "l" ))
(assert (= L27 "g" ))
(assert (not (= L2 "q" )))
(assert (not (= L3 "k" )))
(assert (not (= L1 "r" )))
(assert (not (= L7 "k" )))
(assert (= L7 "g" ))
(assert (not (= "" "y" )))
(assert (= L38 "g" ))
(assert (= L1 "h" ))
(assert (not (= "" sym4000 )))
(assert (not (= L6 "q" )))
(assert (not (= L17 "q" )))
(assert (not (= L3 "r" )))
(assert (= "" "" ))
(assert (not (= L27 "q" )))
(assert (not (= L3 "p" )))
(assert (not (= "" "q" )))
(assert (not (= L9 "l" )))
(assert (not (= L17 "p" )))
(assert (not (= L71 "y" )))
(assert (not (= "" sym3376 )))
(assert (not (= L23 "q" )))
(assert (not (= "" sym1894 )))
(assert (not (= "" sym2953 )))
(assert (not (= "" sym1036 )))
(assert (not (= "" sym3169 )))
(assert (not (= L1 "l" )))
(assert (not (= L3 "l" )))
(assert (not (= L10 "q" )))
(assert (= L23 "k" ))
(assert (= L6 "h" ))
(assert (not (= L10 "g" )))
(assert (not (= "" L71 )))
(assert (not (= L13 "p" )))
(assert (not (= "" sym2538 )))
(assert (not (= L53 "q" )))
(assert (= L5 "g" ))
(assert (not (= L9 "p" )))
(assert (= "" sym161 ))
(assert (not (= L10 "k" )))
(assert (not (= "" sym1679 )))
(assert (not (= L53 "p" )))
(assert (= L11 "k" ))
(assert (not (= "" sym3793 )))
(assert (not (= L4 "p" )))
(assert (not (= L21 "p" )))
(assert (not (= L1 "k" )))
(check-sat)
(get-model)
(exit)
