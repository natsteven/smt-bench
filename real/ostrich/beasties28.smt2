(set-logic QF_S)
(set-option :parse-transducers true)
(set-option :produce-models true)
(define-fun-rec toLower ((x String) (y String)) Bool
   (or (and (= x "") (= y ""))
       (and (not (= x "")) (not (= y ""))
           (= (char.code (str.head y))
               (ite (and (<= 65 (char.code (str.head x)))
                       (<= (char.code (str.head x)) 90))
                   (+ (char.code (str.head x)) 32)
                   (char.code (str.head x))))
           (toLower (str.tail x) (str.tail y))))
)
(declare-fun sym2082 () String)
(assert (<= (str.len sym2082) 1))
(declare-fun sym811 () String)
(assert (<= (str.len sym811) 1))
(declare-fun sym209 () String)
(assert (<= (str.len sym209) 1))
(declare-fun sym2508 () String)
(assert (<= (str.len sym2508) 1))
(declare-fun sym2619 () String)
(assert (<= (str.len sym2619) 1))
(declare-fun sym1869 () String)
(assert (<= (str.len sym1869) 1))
(declare-fun sym1237 () String)
(assert (<= (str.len sym1237) 1))
(declare-fun sym551 () String)
(assert (<= (str.len sym551) 1))
(declare-fun sym1024 () String)
(assert (<= (str.len sym1024) 1))
(declare-fun sym1663 () String)
(assert (<= (str.len sym1663) 1))
(declare-fun sym1450 () String)
(assert (<= (str.len sym1450) 1))
(declare-fun sym2295 () String)
(assert (<= (str.len sym2295) 1))
(declare-fun sym161 () String)
(assert (<= (str.len sym161) 1))
(declare-fun L13  () String)
(declare-fun L9  () String)
(declare-fun L5  () String)
(declare-fun L10  () String)
(declare-fun L21  () String)
(declare-fun L6  () String)
(declare-fun L11  () String)
(declare-fun L3  () String)
(declare-fun L4  () String)
(declare-fun L1  () String)
(declare-fun L2  () String)
(declare-fun L0  () String)
(define-fun Alphabet () RegLan 
	(re.* (re.union (str.to_re "A") (str.to_re "B") (str.to_re "C") (str.to_re "D") (str.to_re "E") (str.to_re "F") (str.to_re "G") (str.to_re "H") (str.to_re "I") (str.to_re "J") (str.to_re "K") (str.to_re "L") (str.to_re "M") (str.to_re "N") (str.to_re "O") (str.to_re "P") (str.to_re "Q") (str.to_re "R") (str.to_re "S") (str.to_re "T") (str.to_re "U") (str.to_re "V") (str.to_re "W") (str.to_re "X") (str.to_re "Y") (str.to_re "Z") (str.to_re "a") (str.to_re "b") (str.to_re "c") (str.to_re "d") (str.to_re "e") (str.to_re "f") (str.to_re "g") (str.to_re "h") (str.to_re "i") (str.to_re "j") (str.to_re "k") (str.to_re "l") (str.to_re "m") (str.to_re "n") (str.to_re "o") (str.to_re "p") (str.to_re "q") (str.to_re "r") (str.to_re "s") (str.to_re "t") (str.to_re "u") (str.to_re "v") (str.to_re "w") (str.to_re "x") (str.to_re "y") (str.to_re "z") ))
)
(assert (toLower (str.substr sym1663  0 1) L0 ))
(assert (toLower (str.substr sym2295  0 1) L2 ))
(assert (toLower (str.substr sym2619  0 1) L1 ))
(assert (toLower (str.substr sym551  0 1) L4 ))
(assert (toLower (str.substr sym1237  0 1) L3 ))
(assert (toLower (str.substr sym1450  0 1) L11 ))
(assert (toLower (str.substr sym2508  0 1) L6 ))
(assert (toLower (str.substr sym1869  0 1) L21 ))
(assert (toLower (str.substr sym1024  0 1) L10 ))
(assert (toLower (str.substr sym209  0 1) L5 ))
(assert (toLower (str.substr sym811  0 1) L9 ))
(assert (toLower (str.substr sym2082  0 1) L13 ))

(assert (str.in_re sym161 Alphabet))
(assert (str.in_re sym2295 Alphabet))
(assert (str.in_re sym1450 Alphabet))
(assert (str.in_re sym1663 Alphabet))
(assert (str.in_re sym1024 Alphabet))
(assert (str.in_re sym551 Alphabet))
(assert (str.in_re sym1237 Alphabet))
(assert (str.in_re sym1869 Alphabet))
(assert (str.in_re sym2619 Alphabet))
(assert (str.in_re sym2508 Alphabet))
(assert (str.in_re sym209 Alphabet))
(assert (str.in_re sym811 Alphabet))
(assert (str.in_re sym2082 Alphabet))(assert (<= 1 (str.len sym1450 )))
(assert (<= 1 (str.len sym811 )))
(assert (<= 1 (str.len sym2619 )))
(assert (<= 1 (str.len sym2508 )))
(assert (<= 1 (str.len sym2295 )))
(assert (<= 1 (str.len sym1024 )))
(assert (<= 1 (str.len sym1869 )))
(assert (<= 1 (str.len sym551 )))
(assert (<= 1 (str.len sym1237 )))
(assert (<= 1 (str.len sym209 )))
(assert (<= 1 (str.len sym1663 )))
(assert (<= 1 (str.len sym2082 )))

(assert (not (= L0 "p" )))
(assert (not (= "" L1 )))
(assert (not (= "" "n" )))
(assert (= L2 "k" ))
(assert (= "" sym161 ))
(assert (not (= L3 "q" )))
(assert (not (= L4 "q" )))
(assert (not (= "" sym2619 )))
(assert (= L5 "y" ))
(assert (not (= L6 "q" )))
(assert (not (= L6 "p" )))
(assert (not (= "" sym811 )))
(assert (= L4 "k" ))
(assert (= L9 "k" ))
(assert (not (= "y" "n" )))
(assert (not (= L10 "p" )))
(assert (not (= "" sym2295 )))
(assert (not (= L11 "q" )))
(assert (= "" "" ))
(assert (not (= L2 "p" )))
(assert (= L13 "k" ))
(assert (not (= L9 "p" )))
(assert (not (= "" sym1024 )))
(assert (not (= "" sym1237 )))
(assert (not (= "" sym1450 )))
(assert (not (= L13 "p" )))
(assert (not (= "" L5 )))
(assert (not (= L4 "p" )))
(assert (not (= L3 "p" )))
(assert (= L3 "k" ))
(assert (not (= "" sym551 )))
(assert (= "y" "y" ))
(assert (= L6 "k" ))
(assert (= L21 "k" ))
(assert (not (= "" "y" )))
(assert (not (= L21 "p" )))
(assert (not (= "" "q" )))
(assert (not (= "" sym1869 )))
(assert (= L10 "k" ))
(assert (= L11 "k" ))
(assert (not (= L10 "q" )))
(assert (not (= L0 "q" )))
(assert (= L0 "k" ))
(assert (not (= "" sym1663 )))
(assert (not (= L21 "q" )))
(assert (not (= L1 "y" )))
(assert (not (= L13 "q" )))
(assert (not (= "" sym2508 )))
(assert (not (= L2 "q" )))
(assert (not (= L11 "p" )))
(assert (not (= "" "y" )))
(assert (not (= L9 "q" )))
(assert (not (= "n" "y" )))
(assert (not (= "" sym209 )))
(assert (not (= "" sym2082 )))
(check-sat)
(get-model)
(exit)
