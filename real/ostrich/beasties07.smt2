(set-logic QF_S)
(set-option :parse-transducers true)
(set-option :produce-models true)
(define-fun-rec toLower ((x String) (y String)) Bool
   (or (and (= x "") (= y ""))
       (and (not (= x "")) (not (= y ""))
           (= (char.code (str.head y))
               (ite (and (<= 65 (char.code (str.head x)))
                       (<= (char.code (str.head x)) 90))
                   (+ (char.code (str.head x)) 32)
                   (char.code (str.head x))))
           (toLower (str.tail x) (str.tail y))))
)
(declare-fun sym807 () String)
(declare-fun sym205 () String)
(declare-fun sym547 () String)
(declare-fun sym1659 () String)
(declare-fun sym2548 () String)
(declare-fun sym1446 () String)
(declare-fun sym2751 () String)
(declare-fun sym1233 () String)
(declare-fun sym1872 () String)
(declare-fun sym2301 () String)
(declare-fun sym1020 () String)
(declare-fun sym161 () String)
(declare-fun sym2095 () String)
(declare-fun L13  () String)
(declare-fun L9  () String)
(declare-fun L7  () String)
(declare-fun L21  () String)
(declare-fun L6  () String)
(declare-fun L11  () String)
(declare-fun L3  () String)
(declare-fun L1  () String)
(declare-fun L2  () String)
(declare-fun L27  () String)
(declare-fun L0  () String)
(declare-fun L18  () String)
(assert (toLower (str.substr sym2548  0 1) L18 ))
(assert (toLower (str.substr sym205  0 1) L0 ))
(assert (toLower (str.substr sym2095  0 1) L27 ))
(assert (toLower (str.substr sym2751  0 1) L2 ))
(assert (toLower (str.substr sym547  0 1) L1 ))
(assert (toLower (str.substr sym807  0 1) L3 ))
(assert (toLower (str.substr sym2301  0 1) L11 ))
(assert (toLower (str.substr sym1659  0 1) L6 ))
(assert (toLower (str.substr sym1446  0 1) L21 ))
(assert (toLower (str.substr sym1233  0 1) L7 ))
(assert (toLower (str.substr sym1872  0 1) L9 ))
(assert (toLower (str.substr sym1020  0 1) L13 ))

(assert (not (= "" L0 )))
(assert (not (= "" sym1872 )))
(assert (not (= "" sym2751 )))
(assert (not (= L1 "p" )))
(assert (not (= L2 "p" )))
(assert (not (= L3 "p" )))
(assert (not (= "y" "n" )))
(assert (= "" "" ))
(assert (= L2 "k" ))
(assert (= L3 "k" ))
(assert (not (= L6 "q" )))
(assert (= L7 "k" ))
(assert (not (= "" sym2095 )))
(assert (not (= L7 "p" )))
(assert (= "y" "y" ))
(assert (= L9 "h" ))
(assert (not (= L1 "q" )))
(assert (not (= L11 "q" )))
(assert (not (= L9 "q" )))
(assert (not (= "" sym547 )))
(assert (not (= L13 "q" )))
(assert (= L11 "k" ))
(assert (not (= L2 "q" )))
(assert (not (= "" sym807 )))
(assert (not (= "" sym2548 )))
(assert (not (= L13 "p" )))
(assert (not (= "" sym1020 )))
(assert (not (= L9 "k" )))
(assert (not (= L18 "q" )))
(assert (not (= L9 "g" )))
(assert (not (= "" sym1233 )))
(assert (not (= L9 "l" )))
(assert (not (= L21 "p" )))
(assert (not (= L18 "p" )))
(assert (not (= L6 "p" )))
(assert (not (= "" "q" )))
(assert (= L6 "k" ))
(assert (not (= L9 "r" )))
(assert (not (= "" sym1659 )))
(assert (= L0 "y" ))
(assert (not (= "" sym2301 )))
(assert (not (= L27 "q" )))
(assert (not (= L9 "p" )))
(assert (= L18 "k" ))
(assert (not (= "" sym205 )))
(assert (= L1 "k" ))
(assert (= L21 "k" ))
(assert (not (= L27 "p" )))
(assert (not (= "" sym161 )))
(assert (not (= L3 "q" )))
(assert (= L27 "k" ))
(assert (not (= L11 "p" )))
(assert (not (= L21 "q" )))
(assert (not (= "" "y" )))
(assert (not (= "" sym1446 )))
(assert (not (= "" "y" )))
(assert (= L13 "k" ))
(assert (not (= L7 "q" )))
(check-sat)
(get-model)
(exit)
