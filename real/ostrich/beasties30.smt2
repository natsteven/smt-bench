(set-logic QF_S)
(set-option :parse-transducers true)
(set-option :produce-models true)
(define-fun-rec toLower ((x String) (y String)) Bool
   (or (and (= x "") (= y ""))
       (and (not (= x "")) (not (= y ""))
           (= (char.code (str.head y))
               (ite (and (<= 65 (char.code (str.head x)))
                       (<= (char.code (str.head x)) 90))
                   (+ (char.code (str.head x)) 32)
                   (char.code (str.head x))))
           (toLower (str.tail x) (str.tail y))))
)
(declare-fun sym799 () String)
(declare-fun sym209 () String)
(declare-fun sym2528 () String)
(declare-fun sym2946 () String)
(declare-fun sym551 () String)
(declare-fun sym2744 () String)
(declare-fun sym1667 () String)
(declare-fun sym1235 () String)
(declare-fun sym1026 () String)
(declare-fun sym3259 () String)
(declare-fun sym1894 () String)
(declare-fun sym2312 () String)
(declare-fun sym1451 () String)
(declare-fun sym2110 () String)
(declare-fun sym161 () String)
(declare-fun sym3162 () String)
(declare-fun L19  () String)
(declare-fun L12  () String)
(declare-fun L23  () String)
(declare-fun L24  () String)
(declare-fun L14  () String)
(declare-fun L7  () String)
(declare-fun L30  () String)
(declare-fun L8  () String)
(declare-fun L5  () String)
(declare-fun L10  () String)
(declare-fun L6  () String)
(declare-fun L11  () String)
(declare-fun L4  () String)
(declare-fun L2  () String)
(declare-fun L0  () String)
(assert (toLower (str.substr sym1894  0 1) L0 ))
(assert (toLower (str.substr sym799  0 1) L2 ))
(assert (toLower (str.substr sym551  0 1) L4 ))
(assert (toLower (str.substr sym1451  0 1) L11 ))
(assert (toLower (str.substr sym1235  0 1) L6 ))
(assert (toLower (str.substr sym2528  0 1) L10 ))
(assert (toLower (str.substr sym3162  0 1) L5 ))
(assert (toLower (str.substr sym1026  0 1) L8 ))
(assert (toLower (str.substr sym2110  0 1) L30 ))
(assert (toLower (str.substr sym2744  0 1) L7 ))
(assert (toLower (str.substr sym2312  0 1) L14 ))
(assert (toLower (str.substr sym1667  0 1) L24 ))
(assert (toLower (str.substr sym3259  0 1) L23 ))
(assert (toLower (str.substr sym209  0 1) L12 ))
(assert (toLower (str.substr sym2946  0 1) L19 ))

(assert (not (= L0 "r" )))
(assert (not (= L0 "k" )))
(assert (not (= "" sym2528 )))
(assert (= L2 "g" ))
(assert (= "" sym161 ))
(assert (not (= L0 "p" )))
(assert (= L4 "g" ))
(assert (not (= "" sym1894 )))
(assert (not (= L5 "k" )))
(assert (not (= L6 "p" )))
(assert (not (= "n" "y" )))
(assert (not (= L7 "k" )))
(assert (not (= "" sym1667 )))
(assert (not (= "" sym209 )))
(assert (not (= L8 "p" )))
(assert (not (= L6 "k" )))
(assert (not (= "" sym799 )))
(assert (not (= "" "y" )))
(assert (not (= "" sym3162 )))
(assert (not (= L10 "p" )))
(assert (not (= L11 "q" )))
(assert (not (= "" L12 )))
(assert (= L12 "y" ))
(assert (not (= L14 "q" )))
(assert (not (= L14 "p" )))
(assert (not (= L11 "p" )))
(assert (= L0 "l" ))
(assert (not (= L14 "k" )))
(assert (not (= L19 "p" )))
(assert (not (= L4 "p" )))
(assert (not (= L2 "q" )))
(assert (not (= L19 "q" )))
(assert (not (= L23 "y" )))
(assert (not (= L24 "q" )))
(assert (not (= "" sym2946 )))
(assert (not (= L2 "p" )))
(assert (= L5 "g" ))
(assert (not (= "" L23 )))
(assert (not (= "" "q" )))
(assert (not (= L7 "q" )))
(assert (not (= "" sym1235 )))
(assert (not (= L2 "k" )))
(assert (not (= "" sym2110 )))
(assert (not (= "y" "n" )))
(assert (not (= "" sym1026 )))
(assert (not (= "" "y" )))
(assert (not (= L30 "p" )))
(assert (= L14 "g" ))
(assert (= L30 "g" ))
(assert (not (= L5 "p" )))
(assert (not (= L4 "q" )))
(assert (= L24 "g" ))
(assert (= "y" "y" ))
(assert (= L10 "g" ))
(assert (not (= L0 "g" )))
(assert (not (= L4 "k" )))
(assert (not (= L30 "q" )))
(assert (not (= L7 "p" )))
(assert (not (= "" sym2312 )))
(assert (= L11 "g" ))
(assert (not (= L19 "k" )))
(assert (not (= L8 "k" )))
(assert (not (= L6 "q" )))
(assert (not (= L0 "q" )))
(assert (not (= L10 "q" )))
(assert (not (= L24 "p" )))
(assert (not (= L24 "k" )))
(assert (not (= "" "n" )))
(assert (= L7 "g" ))
(assert (= L6 "g" ))
(assert (not (= L8 "q" )))
(assert (not (= L10 "k" )))
(assert (not (= L11 "k" )))
(assert (not (= "" sym1451 )))
(assert (not (= "" sym2744 )))
(assert (not (= "" sym551 )))
(assert (not (= L30 "k" )))
(assert (= L8 "g" ))
(assert (not (= "" sym3259 )))
(assert (= L19 "g" ))
(assert (= "" "" ))
(assert (not (= L5 "q" )))
(check-sat)
(get-model)
(exit)
