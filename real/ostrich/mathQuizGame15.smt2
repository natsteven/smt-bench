(set-logic QF_S)
(set-option :parse-transducers true)
(set-option :produce-models true)
(define-fun-rec toLower ((x String) (y String)) Bool
   (or (and (= x "") (= y ""))
       (and (not (= x "")) (not (= y ""))
           (= (char.code (str.head y))
               (ite (and (<= 65 (char.code (str.head x)))
                       (<= (char.code (str.head x)) 90))
                   (+ (char.code (str.head x)) 32)
                   (char.code (str.head x))))
           (toLower (str.tail x) (str.tail y))))
)
(declare-fun sym395 () String)
(declare-fun sym242 () String)
(declare-fun sym122 () String)
(declare-fun sym851 () String)
(declare-fun sym623 () String)
(declare-fun sym965 () String)
(declare-fun sym737 () String)
(declare-fun sym509 () String)
(declare-fun L7  () String)
(declare-fun L8  () String)
(declare-fun L64  () String)
(declare-fun L5  () String)
(declare-fun L3  () String)
(declare-fun L1  () String)
(declare-fun L2  () String)
(declare-fun L0  () String)
(assert (toLower sym623  L0 ))
(assert (toLower sym395  L2 ))
(assert (toLower sym851  L1 ))
(assert (toLower sym965  L3 ))
(assert (toLower sym242  L5 ))
(assert (toLower sym122  L64 ))
(assert (toLower sym737  L8 ))
(assert (toLower sym509  L7 ))

(assert (not (str.contains L0 "/setsize" )))
(assert (not (= L1 "/clear" )))
(assert (not (str.contains L2 "/setfont" )))
(assert (not (= L3 "/restart" )))
(assert (not (= L2 "n" )))
(assert (not (= L5 "/help" )))
(assert (not (= L5 "y" )))
(assert (not (= L7 "/help" )))
(assert (not (= L8 "y" )))
(assert (not (str.contains L7 "/setsize" )))
(assert (not (str.contains L2 "/say" )))
(assert (not (= L5 "/clear" )))
(assert (not (= L1 "n" )))
(assert (not (= L8 "/quit" )))
(assert (not (= L0 "/help" )))
(assert (not (= L2 "/quit" )))
(assert (not (= L8 "/?" )))
(assert (not (str.contains L7 "/say" )))
(assert (= L3 "/quit" ))
(assert (not (str.contains L2 "/setsize" )))
(assert (not (= L0 "/?" )))
(assert (not (= L5 "/?" )))
(assert (not (= L1 "y" )))
(assert (not (str.contains L5 "/setfont" )))
(assert (not (str.contains L8 "/say" )))
(assert (not (= L1 "/restart" )))
(assert (not (= L7 "/clear" )))
(assert (not (= L8 "n" )))
(assert (not (str.contains L5 "/setsize" )))
(assert (not (= L2 "/help" )))
(assert (not (= L5 "n" )))
(assert (not (= L3 "y" )))
(assert (not (= L8 "/clear" )))
(assert (not (= L1 "/quit" )))
(assert (not (str.contains L8 "/setfont" )))
(assert (not (= L0 "y" )))
(assert (not (= L2 "/?" )))
(assert (not (str.contains L0 "/setfont" )))
(assert (not (= L3 "n" )))
(assert (not (= L1 "/?" )))
(assert (not (= L8 "/restart" )))
(assert (not (str.contains L1 "/say" )))
(assert (not (= L8 "/help" )))
(assert (not (str.contains L7 "/setfont" )))
(assert (not (str.contains L1 "/setsize" )))
(assert (not (= L7 "/quit" )))
(assert (not (= L7 "y" )))
(assert (not (str.contains L5 "/say" )))
(assert (not (= L0 "/clear" )))
(assert (not (str.contains L8 "/setsize" )))
(assert (not (= L0 "/quit" )))
(assert (not (str.contains L0 "/say" )))
(assert (not (= L2 "y" )))
(assert (not (= L2 "/clear" )))
(assert (not (= L7 "n" )))
(assert (not (= L7 "/restart" )))
(assert (not (str.contains L1 "/setfont" )))
(assert (not (= L0 "n" )))
(assert (not (= L1 "/help" )))
(assert (not (= L5 "/quit" )))
(assert (not (= L0 "/restart" )))
(assert (not (= L7 "/?" )))
(assert (not (= L2 "/restart" )))
(assert (not (= L5 "/restart" )))
(assert (= L64 "elementary" ))
(check-sat)
(get-model)
(exit)
