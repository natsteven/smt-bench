(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Joel Day, Thorsten Ehlers, Mitja Kulczynski, Federico Mora, Florin Manea, Dirk Nowotka, Danny Poulsen, Zhengyang Lu
Application: Test WOORPJE
Target solver: WOORPJE
Publications: Day, J. D., Ehlers, T., Kulczynski, M., Manea, F., Nowotka, D., & Poulsen, D. B. (2019). On solving word equations using SAT. In RP 2019
Description: Consisting of a system of 100 small random word equations with at most 6 letters, 10 variables and length 60.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun B () String)
(declare-fun A () String)
(declare-fun C () String)
(assert (= (str.++  "cb" B "b" B C "c")  (str.++  "cb" B "be" B "a" A "bac") ))
(assert (= (str.++  "c" B "ccdda" B "cbcdaecbcac")  (str.++  "c" B "ccddaecbcda" B "cbcac") ))
(assert (= (str.++  "cdbbdbdaeacbbaebece" "")  (str.++  "cdbbdbda" B "acbbaeb" B "ce") ))
(assert (= (str.++  "adbcdcbcddccaaadba" B)  (str.++  "adbcdcbcddccaaadba" B) ))
(assert (= (str.++  "bcbebbabbcbbcbebaeb" "")  (str.++  "bcb" B "bbabbcbbcbebaeb") ))
(assert (= (str.++  "dbcabbe" B "abac" B "babecc")  (str.++  "dbcabbeeabacebab" B "cc") ))
(assert (= (str.++  "dddadddeaa" B "cecbdcba")  (str.++  "dddaddd" B "aa" B "c" B "cbdcba") ))
(assert (= (str.++  "cbacc" B "bbbcaa" B "ddbcac")  (str.++  "cbaccebbbcaaeddbcac" "") ))
(assert (= (str.++  B "adeaccbbdda" B B "aabdc")  (str.++  B "adeaccbbdda" B "eaabdc") ))
(assert (= (str.++  "e" B B "abbcda" B B "a" B "dcaaee")  (str.++  B B "eabbcdae" B "aedcaa" B B) ))
(assert (= (str.++  "cdcbbebbeaabcadbaab" "")  (str.++  "cdcbb" B "bb" B "aabcadbaab") ))
(assert (= (str.++  "dbdbcdbccdadedeb" B "ac")  (str.++  "dbdbcdbccdad" B "deb" B "ac") ))
(assert (= (str.++  B "ddab" B "cbb" B "caeadb" B "aa")  (str.++  B "ddabecbbecaeadbeaa" "") ))
(assert (= (str.++  "aaddddeddbdcdbdbacb" "")  (str.++  "aadddd" B "ddbdcdbdbacb") ))
(assert (= (str.++  B "bcbdcebcac" B "daadcd" B)  (str.++  B "bcbdcebcac" B "daadcde") ))
(assert (= (str.++  "eabb" B "adcddaadbdbcd" B)  (str.++  B "abbeadcddaadbdbcd" B) ))
(assert (= (str.++  B "bdeaaa" B "cacdae" B B "bdc")  (str.++  "ebd" B "aaa" B "cacdaeeebdc") ))
(assert (= (str.++  "bccde" B "caabbbadbacec")  (str.++  "bccdeecaabbbadbacec" "") ))
(assert (= (str.++  B "bcbbbbacaceeaebabb" "")  (str.++  "ebcbbbbacac" B B "a" B "babb") ))
(assert (= (str.++  B "eccbbaae" B "ddbbbdaba")  (str.++  B "eccbbaa" B "eddbbbdaba") ))
(assert (= (str.++  "dbba" B "aacab" B "bddeacb" B)  (str.++  "dbba" B "aacabebdd" B "acb" B) ))
(assert (= (str.++  B "ebddcccca" B "cbdbcdae")  (str.++  "eebddcccca" B "cbdbcdae") ))
(assert (= (str.++  B "dcc" B "baacaadeadeced")  (str.++  "edcc" B "baacaad" B "adec" B "d") ))
(assert (= (str.++  "ccdbcdbd" B "d" B "eaddecec")  (str.++  "ccdbcdbd" B "deeaddec" B "c") ))
(assert (= (str.++  "ccadaba" B "bcbdaac" B "ae" B)  (str.++  "ccadaba" B "bcbdaaceae" B) ))
(assert (= (str.++  "cbaaaabaaaaceedaddb" "")  (str.++  "cbaaaabaaaac" B B "daddb") ))
(assert (= (str.++  "eadacdacc" B "bc" B B "edd" B "c")  (str.++  "eadacdaccebc" B B B "ddec") ))
(assert (= (str.++  "bbaababdeabaaaadabc" "")  (str.++  "bbaababd" B "abaaaadabc") ))
(assert (= (str.++  "ddadabced" B "dcbbdadcb")  (str.++  "ddadabc" B "dedcbbdadcb") ))
(assert (= (str.++  "c" B "bcdb" B "edc" B "edeedccd")  (str.++  "cebcdb" B "edce" B "deedccd") ))
(assert (= (str.++  "b" B "a" B "abaed" B "accedaacb")  (str.++  "bea" B "aba" B "d" B "acc" B "daacb") ))
(assert (= (str.++  B "bcbcdbdacaad" B "a" B "aea")  (str.++  B "bcbcdbdacaad" B "aea" B "a") ))
(assert (= (str.++  "bdbbd" B "cdebadddedcbd")  (str.++  "bdbbdecd" B "badddedcbd") ))
(assert (= (str.++  "cabdccdd" B "baeabaddcd")  (str.++  "cabdccddeba" B "abaddcd") ))
(assert (= (str.++  "dcdbeadbcba" B "ebecdcb")  (str.++  "dcdbeadbcbae" B "becdcb") ))
(assert (= (str.++  "ab" B "cbadacdedcabdcdd")  (str.++  "abecbadacd" B "dcabdcdd") ))
(assert (= (str.++  B "ddddecbdab" B "cacdbaa")  (str.++  B "dddd" B "cbdab" B "cacdbaa") ))
(assert (= (str.++  "ecdb" B "ccdbd" B "dcca" B "edc")  (str.++  B "cdbeccdbdedccae" B "dc") ))
(assert (= (str.++  "bcddb" B "edbadaecaedad")  (str.++  "bcddb" B B "dbada" B "ca" B "dad") ))
(assert (= (str.++  B "dacdcacbbceddeceda" "")  (str.++  "edacdcacbbcedd" B "ceda") ))
(assert (= (str.++  "dcdc" B B "cddbcd" B "deadce")  (str.++  "dcdc" B "ecddbcd" B "deadce") ))
(assert (= (str.++  "eddbd" B "bdcceba" B "ecda" B)  (str.++  "eddbd" B "bdcc" B "bae" B "cda" B) ))
(assert (= (str.++  B "d" B "dccada" B "aac" B "baeda")  (str.++  "ededccada" B "aacebaeda") ))
(assert (= (str.++  B "ccdcdedbbab" B "a" B "cacc")  (str.++  "eccdcd" B "dbbabeaecacc") ))
(assert (= (str.++  "cc" B "edd" B "cdddaedba" B "ee")  (str.++  "cce" B "dd" B "cddda" B "dba" B "ee") ))
(assert (= (str.++  "ce" B "abaabeaadebddbcb")  (str.++  "ceeabaabeaad" B "bddbcb") ))
(assert (= (str.++  "cdcca" B "dddd" B "bd" B "dc" B "db")  (str.++  "cdccaeddddebd" B "dc" B "db") ))
(assert (= (str.++  "baab" B "cddbdaabc" B "cdab")  (str.++  "baab" B "cddbdaabcecdab") ))
(assert (= (str.++  B "dcc" B "ccaeceeaea" B "dca")  (str.++  B "dccecca" B "ceeaea" B "dca") ))
(assert (= (str.++  "acdcbdbbccb" B "dbabed" B)  (str.++  "acdcbdbbccb" B "dbabed" B) ))
(assert (= (str.++  "abbbbebed" B "dcaaabbcb")  (str.++  "abbbbeb" B "d" B "dcaaabbcb") ))
(assert (= (str.++  "cdaadec" B "baddab" B "becc")  (str.++  "cdaadec" B "baddabeb" B "cc") ))
(assert (= (str.++  "dcacddadadcb" B "bdd" B "bc")  (str.++  "dcacddadadcb" B "bdd" B "bc") ))
(assert (= (str.++  "bacddaacdd" B "bbbcd" B "eb")  (str.++  "bacddaacdd" B "bbbcde" B "b") ))
(assert (= (str.++  "abaebc" B "c" B "cbabacba" B "c")  (str.++  "aba" B "bcececbabacba" B "c") ))
(assert (= (str.++  "ddeadccbdbdeaddbdea" "")  (str.++  "dd" B "adccbdbdeaddbd" B "a") ))
(assert (= (str.++  "bbcbcbbcdddacdcc" B "ac")  (str.++  "bbcbcbbcdddacdcc" B "ac") ))
(assert (= (str.++  "daabedd" B "cecedadaeba")  (str.++  "daab" B "ddececedada" B "ba") ))
(assert (= (str.++  "ecbcdabaadedcebbb" B "a")  (str.++  "ecbcdabaadedcebbbea" "") ))
(assert (= (str.++  "bcbbdabcabcccadbaec" "")  (str.++  "bcbbdabcabcccadba" B "c") ))
(assert (= (str.++  "bcacdebacbbbddebbaa" "")  (str.++  "bcacd" B "bacbbbdd" B "bbaa") ))
(assert (= (str.++  "acddcccebadbcbe" B "cad")  (str.++  "acddcccebadbcb" B "ecad") ))
(assert (= (str.++  "dbbdbd" B "cdcdcbcbaeab")  (str.++  "dbbdbdecdcdcbcbaeab" "") ))
(assert (= (str.++  "dc" B "ac" B "d" B "b" B "aebede" B "cb")  (str.++  "dceac" B "debeaeb" B "deecb") ))
(assert (= (str.++  "cacbabdcbaca" B "d" B "cada")  (str.++  "cacbabdcbacaed" B "cada") ))
(assert (= (str.++  "d" B "dcdedeabddb" B "ddcc" B)  (str.++  "d" B "dcded" B "abddb" B "ddcc" B) ))
(assert (= (str.++  "aadaddcbbeaadabdcda" "")  (str.++  "aadaddcbb" B "aadabdcda") ))
(assert (= (str.++  "e" B "eabdbddb" B "acaeaead")  (str.++  B "e" B "abdbddbeaca" B "a" B "ad") ))
(assert (= (str.++  B "caeddbdcabcdcadb" B "b")  (str.++  B "caeddbdcabcdcadbeb" "") ))
(assert (= (str.++  B "eabbceccbc" B "baadbae")  (str.++  B B "abbceccbc" B "baadba" B) ))
(assert (= (str.++  "dbc" B "be" B "bebabacdcbcd")  (str.++  "dbceb" B "eb" B "babacdcbcd") ))
(assert (= (str.++  "edbcebccaecdabddaba" "")  (str.++  B "dbc" B "bcca" B "cdabddaba") ))
(assert (= (str.++  "eaabcddcdcaddccbbac" "")  (str.++  B "aabcddcdcaddccbbac" "") ))
(assert (= (str.++  "cebdeccdcddc" B "aa" B "ada")  (str.++  "cebdeccdcddceaaeada" "") ))
(assert (= (str.++  "aeabebaac" B "ddbcca" B "bd")  (str.++  "aeabebaaceddbcca" B "bd") ))
(assert (= (str.++  "decc" B "d" B "ecaccadbacbe")  (str.++  "d" B "cc" B "d" B "ecaccadbacbe") ))
(assert (= (str.++  "bb" B "abacde" B "eddbbcaea")  (str.++  "bb" B "abacd" B B B "ddbbca" B "a") ))
(assert (= (str.++  B "ccbc" B "ddd" B "ada" B "a" B "d" B "d")  (str.++  "eccbc" B "ddd" B "adaea" B "d" B "d") ))
(assert (= (str.++  "bddbeccbabcebbbccab" "")  (str.++  "bddbeccbabc" B "bbbccab") ))
(assert (= (str.++  "daaedaebbb" B "ccdaa" B "aa")  (str.++  "daa" B "daebbbeccdaa" B "aa") ))
(assert (= (str.++  "bddcacbcdbd" B "aeddebe")  (str.++  "bddcacbcdbdeaedd" B "be") ))
(assert (= (str.++  "ebadeb" B "bbcd" B "ebcaca" B)  (str.++  B "bad" B "bebbcde" B "bcacae") ))
(assert (= (str.++  "dc" B "ddedbcdeeebaacac")  (str.++  "dc" B "ddedbcdeeebaacac") ))
(assert (= (str.++  "cdadaabdb" B "ce" B "bdbbbd")  (str.++  "cdadaabdb" B "ce" B "bdbbbd") ))
(assert (= (str.++  "aa" B "cae" B "cbdaacbebaec")  (str.++  "aa" B "ca" B B "cbdaacb" B "ba" B "c") ))
(assert (= (str.++  B "ebaaacbeadaebcccae" "")  (str.++  "eebaaacb" B "ada" B "bcccae") ))
(assert (= (str.++  B "ddcaadd" B "cbbbecbeac")  (str.++  B "ddcaaddecbbb" B "cb" B "ac") ))
(assert (= (str.++  "cdcca" B "adcdadd" B "abcda")  (str.++  "cdccaeadcdadd" B "abcda") ))
(assert (= (str.++  "d" B "aaebaeccaaababc" B "e")  (str.++  "d" B "aaebaeccaaababce" B) ))
(assert (= (str.++  "bcaeaacddceddebaeba" "")  (str.++  "bcaeaacddc" B "dd" B "baeba") ))
(assert (= (str.++  "a" B "d" B "daccdabdaabacbc")  (str.++  "aed" B "daccdabdaabacbc") ))
(assert (= (str.++  B "cc" B "ddeceeabe" B "ebcab")  (str.++  B "cc" B "ddec" B "eab" B B "ebcab") ))
(assert (= (str.++  "edadaaacbabaeaa" B B "ea")  (str.++  B "dadaaacbaba" B "aa" B B B "a") ))
(assert (= (str.++  "ca" B "bcbbaadbebabbacb")  (str.++  "ca" B "bcbbaadbebabbacb") ))
(assert (= (str.++  "ebacddcbaccedebbeab" "")  (str.++  B "bacddcbacc" B "debb" B "ab") ))
(assert (= (str.++  B "abdabecc" B "cbbbcdab" B)  (str.++  "eabdab" B "cc" B "cbbbcdabe") ))
(assert (= (str.++  B "ce" B B "de" B "ddbcabceabb")  (str.++  "ecee" B "deeddbcabceabb") ))
(assert (= (str.++  "beeabacdb" B "abbbdd" B "ca")  (str.++  "beeabacdb" B "abbbddeca") ))
(assert (= (str.++  "ddade" B "bcaaecddaeacc")  (str.++  "ddadeebcaa" B "cddaeacc") ))
(assert (= (str.++  "ceceaadadccedadcbba" "")  (str.++  "c" B "ceaadadccedadcbba") ))
(assert (= (str.++  "aabdbcaadd" B B "debbd" B "d")  (str.++  "aabdbcaadd" B B "debbded") ))
(assert (= (str.++  "aeacbebbdba" B "eacb" B "b" B)  (str.++  "aeacbebbdbae" B "acbeb" B) ))
(assert (= (str.++  B "bca" B "dcabbccacbe" B "be")  (str.++  "ebca" B "dcabbccacbe" B "b" B) ))
(assert (= (str.++  "cdcdacdd" B "aacdbbccac")  (str.++  "cdcdacddeaacdbbccac" "") ))
(assert (= (str.++  "bdacce" B "eeb" B "adcbcaec")  (str.++  "bdacc" B B "e" B "beadcbcaec") ))
(assert (= (str.++  "bcddeccc" B "dcdbddaaa" B)  (str.++  "bcddeccc" B "dcdbddaaae") ))
(assert (= (str.++  "daaac" B "ddbaedbbc" B "cba")  (str.++  "daaaceddba" B "dbbcecba") ))
(assert (= (str.++  "eccacdd" B B "cabaacebaa")  (str.++  B "ccacdd" B "ecabaac" B "baa") ))
(assert (= (str.++  "ae" B "ddcbda" B "dabcdbbbd")  (str.++  "a" B B "ddcbda" B "dabcdbbbd") ))
(assert (= (str.++  "ccc" B B "bc" B "cdbabdadabd")  (str.++  "ccce" B "bcecdbabdadabd") ))
(assert (= (str.++  B B "eeabdad" B "b" B "edebbab")  (str.++  "e" B B B "abdad" B "beed" B "bbab") ))
(assert (= (str.++  "aedc" B "ccdcb" B "eaedadbb")  (str.++  "aedc" B "ccdcbeea" B "dadbb") ))
(assert (= (str.++  "aebccddbbcca" B "accbdd")  (str.++  "aebccddbbccaeaccbdd" "") ))
(assert (= (str.++  "edeadc" B "cdadbddbaacc")  (str.++  "ed" B "adcecdadbddbaacc") ))
(assert (= (str.++  "c" B "dbccdabccca" B "beaee")  (str.++  "cedbccdabccca" B "bea" B "e") ))
(assert (= (str.++  "cccbdecbcade" B "abbbda")  (str.++  "cccbd" B "cbcad" B "eabbbda") ))
(assert (= (str.++  "beabcbdbd" B "dccddb" B "bd")  (str.++  "beabcbdbdedccddb" B "bd") ))
(assert (= (str.++  "bdceaaeaceabbea" B "cdd")  (str.++  "bdc" B "aa" B "ac" B "abbeaecdd") ))
(assert (= (str.++  B B "ac" B "bededbddcbbada")  (str.++  B B "aceb" B "dedbddcbbada") ))
(assert (= (str.++  "bca" B "abdcaccdbbacd" B "c")  (str.++  "bca" B "abdcaccdbbacdec") ))
(assert (= (str.++  "bbaaebceddeeb" B "ebdba")  (str.++  "bbaa" B "bc" B "ddeeb" B "ebdba") ))
(assert (= (str.++  "a" B "debc" B "bdccd" B "eccabb")  (str.++  "a" B "debc" B "bdccd" B "eccabb") ))
(assert (= (str.++  "b" B B "beacce" B "cbd" B "adc" B B)  (str.++  "b" B B "beacc" B "ecbdeadcee") ))
(assert (= (str.++  "beaad" B "cadbcacbb" B "ecd")  (str.++  "beaad" B "cadbcacbb" B "ecd") ))
(assert (= (str.++  "ae" B B "bacbdedb" B B "bbbcd")  (str.++  "a" B "e" B "bacbdedb" B "ebbbcd") ))
(assert (= (str.++  "a" B "baacabdbaabbda" B "ee")  (str.++  "a" B "baacabdbaabbdaee" B) ))
(assert (= (str.++  "eac" B "a" B "daabeaaebacbb")  (str.++  B "aceaedaabeaaebacbb" "") ))
(assert (= (str.++  "cbbeeecdcddabaacaaa" "")  (str.++  "cbbee" B "cdcddabaacaaa") ))
(assert (= (str.++  "daaecdae" B "cceacedcba")  (str.++  "daaecdae" B "cceacedcba") ))
(assert (= (str.++  "bbaa" B "bdaebbeaddcacd")  (str.++  "bbaa" B "bdaebb" B "addcacd") ))
(assert (= (str.++  "ccbdb" B "bcbbbbeacbabc")  (str.++  "ccbdb" B "bcbbbb" B "acbabc") ))
(assert (= (str.++  "dea" B "aebbcbbcacdcadb")  (str.++  "d" B "a" B "a" B "bbcbbcacdcadb") ))
(assert (= (str.++  "abcd" B "edbcdadbbccbdd")  (str.++  "abcde" B "dbcdadbbccbdd") ))
(check-sat)

(exit)
