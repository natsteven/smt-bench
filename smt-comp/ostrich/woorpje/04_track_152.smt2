(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Joel Day, Thorsten Ehlers, Mitja Kulczynski, Federico Mora, Florin Manea, Dirk Nowotka, Danny Poulsen, Zhengyang Lu
Application: Test WOORPJE
Target solver: WOORPJE
Publications: Day, J. D., Ehlers, T., Kulczynski, M., Manea, F., Nowotka, D., & Poulsen, D. B. (2019). On solving word equations using SAT. In RP 2019
Description: Consisting of a system of 100 small random word equations with at most 6 letters, 10 variables and length 60.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun B () String)
(declare-fun F () String)
(declare-fun E () String)
(declare-fun A () String)
(assert (= (str.++  "dcbdddac" E "eded")  (str.++  "d" A "aeabeded") ))
(assert (= (str.++  "ceacbdadab" B "bbd")  (str.++  "ceacbdadab" B "bbd") ))
(assert (= (str.++  "adaacc" B "cacdceb")  (str.++  "adaacc" B "cacdceb") ))
(assert (= (str.++  "bb" A "de" F "eca" F)  (str.++  "bba" F "cccdbea" F F "e" F "ecad") ))
(assert (= (str.++  "c" F "bbbbacaadaac" F "aaaa")  (str.++  "cdbbbbacaa" F "aac" F "aaaa") ))
(assert (= (str.++  "ceccbbeeceec" F "baa" F "ee")  (str.++  "ceccbbeeceecdbaadee" "") ))
(assert (= (str.++  "bedbdc" B "aaeedbdccc" F)  (str.++  "bedb" F "ceaaaee" F "b" F "cccd") ))
(assert (= (str.++  "ecea" F "d" F "eb" F F "cde" B "ead")  (str.++  "ecea" F "ddeb" F "dc" F "e" B B "d") ))
(assert (= (str.++  "beccaecceeadbccc" F "eb")  (str.++  "beccaecceeadbcccdeb" "") ))
(assert (= (str.++  "a" F "dbeccbcabaeece" F "d" F)  (str.++  "ad" F "beccbcabaeece" F "d" F) ))
(assert (= (str.++  "aaaeddb" F "bbcbc" F "bbdd" F)  (str.++  "aaaed" F "b" F "bbcbcdbbd" F F) ))
(assert (= (str.++  "e" F "dcb" F "cbabebeddbbae")  (str.++  "e" F "dcbdcbabebed" F "bbae") ))
(assert (= (str.++  "bdadecaac" F "edbed" F "aed")  (str.++  "bdadecaacde" F "be" F F "ae" F) ))
(assert (= (str.++  "bc" B "ceaaeaae" B "a" F "ca" F)  (str.++  "bceaceaa" B "aeeaa" F "ca" F) ))
(assert (= (str.++  "ccbbecbae" F "adb" F "dcac" F)  (str.++  "ccbbecbaeda" F "bddcac" F) ))
(assert (= (str.++  "daceace" B "aadcab" F "cea")  (str.++  "daceaceeaaadcabdc" B) ))
(assert (= (str.++  "b" F "abc" F "bbdbbeeda" B "eb")  (str.++  "bdabc" F "bbdbbee" F "a" B "eb") ))
(assert (= (str.++  "dababcbdeeaeece" F "edd")  (str.++  F "ababcb" F "eeaeece" F "e" F "d") ))
(assert (= (str.++  "bdccbbadd" F "dbaaaecde")  (str.++  "bdccbba" F "dd" F "baaaec" F "e") ))
(assert (= (str.++  "ebadebecbeecc" F F "dc" F "d")  (str.++  "eba" F "ebecbeeccd" F F "cdd") ))
(assert (= (str.++  "aadbcc" F B "acecaee" F "be")  (str.++  "aadbcc" F "eaacecaee" F "be") ))
(assert (= (str.++  "ddccd" B "ebba" F "aeaaccc")  (str.++  F "dcc" F B "ebba" F "aeaaccc") ))
(assert (= (str.++  "ababaa" F "abac" B "da" F "ccd")  (str.++  "ababaadabac" B F "adcc" F) ))
(assert (= (str.++  "c" F "bbcccbcb" F "c" F "accecb")  (str.++  "c" F "bbcccbcbdc" F "accecb") ))
(assert (= (str.++  "dcbb" F "aaee" F "aabce" B "ab")  (str.++  "dcbbdaaee" F "aabceeaab") ))
(assert (= (str.++  "dced" F "dbaedbbdaccda" F)  (str.++  F "ce" F "ddbaedbbdacc" F "a" F) ))
(assert (= (str.++  "bc" F "eeeecbececabc" F "ee")  (str.++  "bc" F "eeeecbececabc" F "ee") ))
(assert (= (str.++  "d" F "ccddcaaeebaadbbcd")  (str.++  "ddccd" F "caaeebaadbbcd") ))
(assert (= (str.++  "ace" F F "ebbdbcbcbbaede")  (str.++  "ace" F "debbdbcbcbbae" F "e") ))
(assert (= (str.++  F "aeecbbcebadcb" F "a" F "ee")  (str.++  F "aeecbbcebadcbda" F "ee") ))
(assert (= (str.++  "ecaadcdba" F "aaacbbdac")  (str.++  "ecaa" F "cdbadaaacbb" F "ac") ))
(assert (= (str.++  "beecadecacce" B "aceda")  (str.++  "beeca" F "ecacceeaace" F "a") ))
(assert (= (str.++  "caadaecacaeedbeadad" "")  (str.++  "caadaecacaee" F "beadad") ))
(assert (= (str.++  "eac" B "ccd" B "ccdbbedee")  (str.++  B "ceacc" F B "cc" F "bbe" F "ee") ))
(assert (= (str.++  "ebceacebcbbcabec" B "d")  (str.++  "ebceacebcbbcabec" B "d") ))
(assert (= (str.++  "ebee" F "e" F "ecc" F "ecabadcb")  (str.++  "ebeededecc" F "ecaba" F "cb") ))
(assert (= (str.++  "aeda" F "d" F "b" F "acbbaebbbc")  (str.++  "ae" F "adddb" F "acbbaebbbc") ))
(assert (= (str.++  "aacebc" F F "da" B "bb" F "dab" F)  (str.++  "aacebc" F "d" F "a" B "bbddab" F) ))
(assert (= (str.++  "eed" F "dcbecabeeaebcda")  (str.++  "ee" F "d" F "cbecabe" B "ebcda") ))
(assert (= (str.++  "caca" F "be" F "abaabc" F "eeab")  (str.++  "cacadbe" F "abaabcde" B "b") ))
(assert (= (str.++  "d" F F "ccbcce" F "acce" F "ccca")  (str.++  F "d" F "ccbccedacce" F "ccca") ))
(assert (= (str.++  "b" F "abaabdbbeecba" F "ece")  (str.++  "b" F "abaabdbbeecbadece") ))
(assert (= (str.++  "eeeec" F "ceebbcbbc" F "e" F "a")  (str.++  "eeeec" F "ceebbcbbc" F "e" F "a") ))
(assert (= (str.++  "bbbbabbabdc" F "cacdb" B)  (str.++  "bbbbabbab" F "c" F "cacdb" B) ))
(assert (= (str.++  "abceced" F "be" F "cabbaddc")  (str.++  "abcece" F "dbedcabba" F F "c") ))
(assert (= (str.++  "accabcccece" F "bbcebbd")  (str.++  "accabcccece" F "bbcebbd") ))
(assert (= (str.++  "eaa" F "eaabaaabceebbea")  (str.++  "eaa" F B "abaaabceebbea") ))
(assert (= (str.++  "beabbeee" F "caecddceac")  (str.++  "beabbeee" F "caec" F "dc" B "c") ))
(assert (= (str.++  "ca" F F "beeaacdbdbeeccc")  (str.++  "cad" F "be" B "acdb" F "beeccc") ))
(assert (= (str.++  "aebabcede" F "ade" F "b" F "aed")  (str.++  "aebabcededadedbdae" F) ))
(assert (= (str.++  "ddceda" B F "cdeecedbbb")  (str.++  "d" F "ce" F "a" B "dcdeece" F "bbb") ))
(assert (= (str.++  "cbbaaebdcadcbba" F "cee")  (str.++  "cbbaaeb" F "ca" F "cbbadcee") ))
(assert (= (str.++  "eaedebadbad" F "ecebe" F "a")  (str.++  "eaedebadbaddecebe" F "a") ))
(assert (= (str.++  F "daadecdbdbc" B "c" F "cdc")  (str.++  "ddaa" F "ec" F "bdbc" B "cdcdc") ))
(assert (= (str.++  "bebebe" F "aebcacecddbd")  (str.++  "bebebe" F "aebcacec" F "db" F) ))
(assert (= (str.++  "eaeddadaacbeacacbce" "")  (str.++  B "eddadaacb" B "cacbce") ))
(assert (= (str.++  "cbcacb" B "ddccbe" F "ceeb")  (str.++  "cbcacb" B "d" F "ccbe" F "ceeb") ))
(assert (= (str.++  "e" F "aaebcaaaa" F "cbabade")  (str.++  "edaaebcaaaa" F "cbaba" F "e") ))
(assert (= (str.++  "dabdcce" F "bccdbedcee" F)  (str.++  F "ab" F "cce" F "bccdbe" F "cee" F) ))
(assert (= (str.++  "ec" B "cceccabbbc" F "cadb")  (str.++  "eceacceccabbbc" F "ca" F "b") ))
(assert (= (str.++  "baaabec" B "aeba" F "c" F "ebe")  (str.++  "baaabeceaaebadc" F "ebe") ))
(assert (= (str.++  "aaec" B "eaaaaaeccecac")  (str.++  "aaec" B B "aaaaeccecac") ))
(assert (= (str.++  "bcbabdaeeeda" F "edbbcb")  (str.++  "bcbab" F "aeee" F "a" F "edbbcb") ))
(assert (= (str.++  B "acacacaecacceeeaa" "")  (str.++  "eaacacacaecaccee" B "a") ))
(assert (= (str.++  B "aaceaddbdaa" F F "cdda")  (str.++  "eaaacea" F F "b" F "aad" F "c" F "da") ))
(assert (= (str.++  "daaaededa" F "bccc" F "caac")  (str.++  "daaaede" F "adbccc" F "caac") ))
(assert (= (str.++  "b" F "cacadcbaecc" F "baeea")  (str.++  "b" F "cacadcbaecc" F "baeea") ))
(assert (= (str.++  "babeebbcbcee" F "db" F "bcc")  (str.++  "babeebbcbceed" F "b" F "bcc") ))
(assert (= (str.++  "aee" F B "bb" F "aeebdddcc" F)  (str.++  "aee" F B "bbdaeebdd" F "ccd") ))
(assert (= (str.++  "ccbeecaeeebee" B "bcdb")  (str.++  "ccbeecaeeebee" B "bcdb") ))
(assert (= (str.++  "edcb" F "ecb" F "aacea" F "edbe")  (str.++  "edcb" F "ecbdaacea" F "edbe") ))
(assert (= (str.++  "aaebc" B "ecbb" F "beddeee")  (str.++  "aaebceaecbbdbeddeee" "") ))
(assert (= (str.++  "b" F "ccabdbeaccececdec")  (str.++  "bdccab" F "beaccecec" F "ec") ))
(assert (= (str.++  "ebd" F "cdeaababa" F "abceb")  (str.++  "eb" F "dcdeaababadabceb") ))
(assert (= (str.++  "cbdecacaccbbcbabced" "")  (str.++  "cbdecacaccbbcbabce" F) ))
(check-sat)

(exit)
