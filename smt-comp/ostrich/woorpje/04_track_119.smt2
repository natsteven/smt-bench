(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Joel Day, Thorsten Ehlers, Mitja Kulczynski, Federico Mora, Florin Manea, Dirk Nowotka, Danny Poulsen, Zhengyang Lu
Application: Test WOORPJE
Target solver: WOORPJE
Publications: Day, J. D., Ehlers, T., Kulczynski, M., Manea, F., Nowotka, D., & Poulsen, D. B. (2019). On solving word equations using SAT. In RP 2019
Description: Consisting of a system of 100 small random word equations with at most 6 letters, 10 variables and length 60.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun B () String)
(declare-fun E () String)
(declare-fun G () String)
(declare-fun F () String)
(declare-fun A () String)
(declare-fun C () String)
(declare-fun D () String)
(assert (= (str.++  C B D)  (str.++  E E B "aaaaaaaaaaaaaaaaaaa") ))
(assert (= (str.++  A D D)  (str.++  G "aaaaaaaaaaaaaaaaaaaaa" E "aaaaa") ))
(assert (= (str.++  C "aaaaaaaaa" A "aaaaaaaa")  (str.++  G "aaaaaaaaaaaaaaaaaaaaa" E "aaaaa") ))
(assert (= (str.++  A A "aaaaaaaa")  (str.++  G E "aaaaaaaaaaaaaaaaaaaaaaaaaa") ))
(assert (= (str.++  E E "aa" A "aaaaaaaa")  (str.++  "aaaaaaaaaaaaaaaaaaaaa" E "aaaaaaaaaaaaaaaaaaaaa" E "aaaaaaaaaaaa") ))
(assert (= (str.++  B "aaaaaaaaa" A "aaaaaaaa")  (str.++  "aaaaaaaaaaaaaaaaaaaaa" E E E "aaaaaaaaaaaa") ))
(assert (= (str.++  "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" A "aaaaaaaa")  (str.++  G E E "aaaaa") ))
(assert (= (str.++  A E "aaaaa" D)  (str.++  G E E "aaaaa") ))
(assert (= (str.++  A A "aaaaaaaa")  (str.++  "aaaaaaaaaaaaaaaaaaaaa" E A "aaaaaaaaaa") ))
(assert (= (str.++  E E "aaaaaaaaaa" D "aaaaaaaaaaaaaaaaaa")  (str.++  E B "aaaaaaa" E "aaaaaaaaaaaa") ))
(assert (= (str.++  B "aaaaaaaaa" A "aaaaaaaa")  (str.++  E C B "aaaaa") ))
(assert (= (str.++  C E "aaaaa" D "aaaaaaaaa")  (str.++  G "aaaaaaaaaaaaaaaaaaaaa" E "aaaaa") ))
(assert (= (str.++  "aaaaaaaaaaaaaaaaaaaaa" E "aa" A "aaaaaaaa")  (str.++  "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa" E "aaaaaaaaaaaa") ))
(assert (= (str.++  B "aaaaaaaaa" A "aaaaaaaa")  (str.++  G "aaaaaaaaaaaaaaaaaaaaa" E "aaaaa") ))
(assert (= (str.++  B B D)  (str.++  G "aaaaaaaaaaaaaaaaaaaaa" E "aaaaa") ))
(assert (= (str.++  A A "aaaaaaaa")  (str.++  G C "aaaaaaaaaaaa") ))
(assert (= (str.++  B B "aaaaaaaaaaaaaaaaaaaaaaaaaa")  (str.++  E "aaaaaaaaaaaaaaaaaaaaa" E E "aaaaaaaaaaaa") ))
(assert (= (str.++  A A "aaaaaaaa")  (str.++  G "aaaaaaaaaaaaaaaaaaaaa" E "aaaaa") ))
(assert (= (str.++  B "aaaaaaaaa" A "aaaaaaaa")  (str.++  G "aaaaaaaaaaaaaaaaaaaaa" E "aaaaa") ))
(assert (= (str.++  D "aaaaaaaaa" B E "aaaaa")  (str.++  G E E "aaaaa") ))
(assert (= (str.++  A D D)  (str.++  A "aaaaaaaaaaaaaaaaaaa" E "aaaaaaaaaaaa") ))
(assert (= (str.++  A A "aaaaaaaa")  (str.++  B "aaaaaaa" E E "aaaaaaaaaaaa") ))
(assert (= (str.++  A A "aaaaaaaa")  (str.++  "aaaaaaaaaaaaaaaaaaaaa" E B "aaaaaaaaaaaaaaaaaaa") ))
(assert (= (str.++  A B "aaaaaaaaaaaaaaaaa")  (str.++  E E "aaaaaaaaaaaaaaaaaaaaa" E "aaaaaaaaaaaa") ))
(assert (= (str.++  C "aaaaaaaaa" A "aaaaaaaa")  (str.++  F "aaaaaaaaaaaaaaaaaaaaaa" "") ))
(assert (= (str.++  A B "aaaaaaaaaaaaaaaaa")  (str.++  G E "aaaaaaaaaaaaaaaaaaaaaaaaaa") ))
(check-sat)

(exit)
