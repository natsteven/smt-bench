(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Joel Day, Thorsten Ehlers, Mitja Kulczynski, Federico Mora, Florin Manea, Dirk Nowotka, Danny Poulsen, Zhengyang Lu
Application: Test WOORPJE
Target solver: WOORPJE
Publications: Day, J. D., Ehlers, T., Kulczynski, M., Manea, F., Nowotka, D., & Poulsen, D. B. (2019). On solving word equations using SAT. In RP 2019
Description: Consisting of a system of 100 small random word equations with at most 6 letters, 10 variables and length 60.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun E () String)
(declare-fun A () String)
(declare-fun C () String)
(assert (= (str.++  "ccd" C E "aa")  (str.++  "ccd" C "baccc" C "dbaa") ))
(assert (= (str.++  "baccabbbca" C "d" C "c")  (str.++  "baccabbbca" C C C "c") ))
(assert (= (str.++  "cc" C "cbbabacda" C "a")  (str.++  "ccdcbbabacdada" "") ))
(assert (= (str.++  "bcdabb" C "badcc" C C)  (str.++  "bc" C "abb" C "badccd" C) ))
(assert (= (str.++  "bacbbaabadbcbc" "")  (str.++  "bacbbaaba" C "bcbc") ))
(assert (= (str.++  "bbbccba" C C "baddc")  (str.++  "bbbccbad" C "ba" C "dc") ))
(assert (= (str.++  "bacbbaba" C "bbcdb")  (str.++  "bacbbaba" C "bbcdb") ))
(assert (= (str.++  "daccc" C "cbabbba" C)  (str.++  C "accc" C "cbabbba" C) ))
(assert (= (str.++  "d" C "caaabbc" C "cbcc")  (str.++  C "dcaaabbcdcbcc" "") ))
(assert (= (str.++  "c" C "cdbac" C "aaaabc")  (str.++  "c" C "c" C "bac" C "aaaabc") ))
(assert (= (str.++  "a" C "cabaaaacbaa" C)  (str.++  "a" C "cabaaaacbaad") ))
(assert (= (str.++  C "bc" C "caacccb" C "cb")  (str.++  "dbcdcaacccbdcb" "") ))
(assert (= (str.++  "c" C "c" C "cdcb" C "dab" C "b")  (str.++  "cdc" C "c" C "cb" C C "ab" C "b") ))
(assert (= (str.++  "ccbaa" C "cba" C "cbca")  (str.++  "ccbaadcba" C "cbca") ))
(assert (= (str.++  "abbc" C "ccdbaabc" C)  (str.++  "abbcdcc" C "baabc" C) ))
(assert (= (str.++  "acccd" C "a" C "caca" C "c")  (str.++  "acccd" C "adcaca" C "c") ))
(assert (= (str.++  "bcdabcbb" C "abdbb")  (str.++  "bcdabcbbdab" C "bb") ))
(assert (= (str.++  C "c" C "caacdcdcbbb")  (str.++  "dcdcaac" C "cdcbbb") ))
(assert (= (str.++  "cac" C C C "bcb" C "ccbb")  (str.++  "cacdddbcb" C "ccbb") ))
(assert (= (str.++  "aa" C "dcbccbbcccd")  (str.++  "aaddcbccbbccc" C) ))
(assert (= (str.++  "cbdb" C "a" C "c" C "cdbab")  (str.++  "cbdb" C "adc" C "c" C "bab") ))
(assert (= (str.++  "ccddcabbbabc" C "a")  (str.++  "cc" C C "cabbbabc" C "a") ))
(assert (= (str.++  "aaaaba" C "ab" C "bada")  (str.++  "aaaaba" C "abdbada") ))
(assert (= (str.++  "aa" C "cdabbdbabdc")  (str.++  "aa" C "cdabbdbab" C "c") ))
(assert (= (str.++  "bd" C "baddadbabb" C)  (str.++  "b" C C "badda" C "babb" C) ))
(assert (= (str.++  "cababbcdaaadbb" "")  (str.++  "cababbcdaaa" C "bb") ))
(assert (= (str.++  C "bcac" C "a" C C "cac" C "b")  (str.++  "dbcacdad" C "cac" C "b") ))
(assert (= (str.++  "abbbba" C "cbbdbb" C)  (str.++  "abbbbadcbb" C "bbd") ))
(assert (= (str.++  C "aaabccacadab" C)  (str.++  "daaabccacadab" C) ))
(assert (= (str.++  "abcc" C "aabaaaaac")  (str.++  "abcc" C "aabaaaaac") ))
(assert (= (str.++  "dc" C "ab" C "caadcbba")  (str.++  "dcdab" C "caadcbba") ))
(assert (= (str.++  "cd" C "aa" C C C "cbb" C "aa")  (str.++  "cddaad" C C "cbb" C "aa") ))
(assert (= (str.++  "adcb" C "bc" C "b" C C "bda")  (str.++  "adcbdbcdb" C C "bda") ))
(assert (= (str.++  "abc" C "bbabcbcdba")  (str.++  "abcdbbabcbc" C "ba") ))
(assert (= (str.++  "cbca" C "bbbbba" C "aa")  (str.++  "cbcadbbbbbadaa" "") ))
(assert (= (str.++  C C C "dcbabdaabcc")  (str.++  C C "d" C "cbab" C "aabcc") ))
(assert (= (str.++  "bdbbacada" C "bccc")  (str.++  "bdbbacada" C "bccc") ))
(assert (= (str.++  C "add" C "ccac" C "daca")  (str.++  "dadddccacd" C "aca") ))
(assert (= (str.++  "bbccbaabcdacbb" "")  (str.++  "bbccbaabc" C "acbb") ))
(assert (= (str.++  "cdc" C "cdad" C "bacdc")  (str.++  "cdcdcdaddbac" C "c") ))
(assert (= (str.++  "daac" C "adbab" C "b" C "a")  (str.++  "daacdadbabdbda" "") ))
(assert (= (str.++  "cdba" C "cddbabbac")  (str.++  "cdba" C "c" C C "babbac") ))
(assert (= (str.++  "bcdacaaaa" C "cbbd")  (str.++  "bc" C "acaaaa" C "cbb" C) ))
(assert (= (str.++  "a" C "dcadabad" C C "bb")  (str.++  "ad" C "cadaba" C C "dbb") ))
(assert (= (str.++  "bcddaabbc" C "ca" C "c")  (str.++  "bc" C "daabbc" C "cadc") ))
(assert (= (str.++  "ccabbcbdbaadad" "")  (str.++  "ccabbcb" C "baada" C) ))
(assert (= (str.++  "b" C C C "daacadacda")  (str.++  "b" C C "ddaacadac" C "a") ))
(assert (= (str.++  "bddaadaca" C "b" C "da")  (str.++  "bddaadacadb" C "da") ))
(assert (= (str.++  "d" C "a" C C "aaacbaaac")  (str.++  C "da" C "daaacbaaac") ))
(assert (= (str.++  "baab" C "bacdbcc" C "b")  (str.++  "baab" C "bac" C "bccdb") ))
(assert (= (str.++  "b" C "dcbcaaacb" C "aa")  (str.++  "b" C "dcbcaaacb" C "aa") ))
(assert (= (str.++  "aadaabcbcbbdac" "")  (str.++  "aadaabcbcbb" C "ac") ))
(assert (= (str.++  "ccacaacbdbcdbd" "")  (str.++  "ccacaacbdbc" C "bd") ))
(assert (= (str.++  "bccbcbbaba" C C "da")  (str.++  "bccbcbbaba" C C "da") ))
(assert (= (str.++  "d" C "dcdaccac" C "acb")  (str.++  C "ddc" C "accac" C "acb") ))
(assert (= (str.++  "cbadaadccccaab" "")  (str.++  "cba" C "aa" C "ccccaab") ))
(assert (= (str.++  "adadaba" C "bcacaa")  (str.++  "a" C "adabadbcacaa") ))
(assert (= (str.++  "a" C "dbcaca" C "cbbcd")  (str.++  "a" C C "bcacadcbbc" C) ))
(assert (= (str.++  "add" C "cbaaabccac")  (str.++  "a" C "ddcbaaabccac") ))
(assert (= (str.++  "a" C "dbbccbbdadaa")  (str.++  "addbbccbbda" C "aa") ))
(assert (= (str.++  C "acbbacbbacada" "")  (str.++  C "acbbacbbaca" C "a") ))
(assert (= (str.++  "dabbdbddcbbbcb" "")  (str.++  "dabb" C "b" C C "cbbbcb") ))
(assert (= (str.++  "aabacdaabaccc" C)  (str.++  "aabacdaabaccc" C) ))
(assert (= (str.++  "accbba" C "cdcacbc")  (str.++  "accbba" C "c" C "cacbc") ))
(assert (= (str.++  "aaddbbdc" C "aa" C "bb")  (str.++  "aa" C "dbbdcdaa" C "bb") ))
(assert (= (str.++  "b" C "bdaaabbabc" C "c")  (str.++  "b" C "bdaaabbabc" C "c") ))
(assert (= (str.++  "bcbcb" C "c" C "cbaaac")  (str.++  "bcbcbdc" C "cbaaac") ))
(assert (= (str.++  "db" C "aab" C "bcbaca" C)  (str.++  "db" C "aab" C "bcbaca" C) ))
(assert (= (str.++  "caccc" C "babaad" C C)  (str.++  "cacccdbabaa" C "dd") ))
(assert (= (str.++  "d" C C C "a" C "bbbabbca")  (str.++  "ddddadbbbabbca" "") ))
(assert (= (str.++  "bad" C "ccdcabadcc")  (str.++  "ba" C C "cc" C "cabadcc") ))
(assert (= (str.++  "baccadca" C "ddcab")  (str.++  "bacca" C "ca" C "ddcab") ))
(assert (= (str.++  "cbdbcbcabaadab" "")  (str.++  "cb" C "bcbcabaadab") ))
(assert (= (str.++  "babcbaadabbdcb" "")  (str.++  "babcbaa" C "abbdcb") ))
(assert (= (str.++  "abcc" C "cbb" C C "cba" C)  (str.++  "abcc" C "cbb" C C "cbad") ))
(assert (= (str.++  "bcdaabbddacbaa" "")  (str.++  "bcdaabb" C C "acbaa") ))
(assert (= (str.++  "badcb" C "dababa" C "a")  (str.++  "badcbd" C "ababada") ))
(assert (= (str.++  "adcadc" C "ddacbaa")  (str.++  "a" C "ca" C "c" C C C "acbaa") ))
(assert (= (str.++  "d" C "abbabcccbbca")  (str.++  "ddabbabcccbbca" "") ))
(assert (= (str.++  C "bcacaaaacabaa" "")  (str.++  "dbcacaaaacabaa" "") ))
(assert (= (str.++  "acbcdacc" C "c" C "a" C "a")  (str.++  "acbcdaccdc" C "a" C "a") ))
(assert (= (str.++  "acccdb" C "caaac" C "a")  (str.++  "accc" C "b" C "caaac" C "a") ))
(assert (= (str.++  C "aba" C "bbd" C "dddac")  (str.++  C "aba" C "bbdddddac") ))
(assert (= (str.++  "bbb" C "cac" C "cc" C "dac")  (str.++  "bbb" C "cacdccd" C "ac") ))
(assert (= (str.++  "bcadcadaaaabbd" "")  (str.++  "bcadcadaaaabb" C) ))
(assert (= (str.++  "abaacbb" C "b" C "bbda")  (str.++  "abaacbbdb" C "bbda") ))
(assert (= (str.++  "caacdbadbabc" C C)  (str.++  "caac" C "ba" C "babc" C C) ))
(assert (= (str.++  "aaababcdb" C "bcd" C)  (str.++  "aaababc" C "b" C "bc" C "d") ))
(assert (= (str.++  "bbbcac" C "dbbbabb")  (str.++  "bbbcacddbbbabb" "") ))
(assert (= (str.++  "b" C "dcccbc" C "accc" C)  (str.++  "b" C "dcccbc" C "accc" C) ))
(assert (= (str.++  "abcdacbbddcddb" "")  (str.++  "abcdacbbd" C "c" C C "b") ))
(assert (= (str.++  "bc" C C "badcad" C "cb" C)  (str.++  "b" A "ba" C "ca" C C "cb" C) ))
(assert (= (str.++  "ccbada" C "ab" C "bbab")  (str.++  "ccbada" C "abdbbab") ))
(assert (= (str.++  "dcdbaaababbbbc" "")  (str.++  C "cdbaaababbbbc" "") ))
(assert (= (str.++  "ddbaaabbacabaa" "")  (str.++  C C "baaabbacabaa") ))
(assert (= (str.++  C "bbdbccadaaadb" "")  (str.++  "dbb" C "bccadaaadb") ))
(assert (= (str.++  "a" C "caaacdaa" C "cbd")  (str.++  "a" C "caaacdaa" C "cb" C) ))
(assert (= (str.++  "cdacbbacd" C "bbbb")  (str.++  "cdacbbacd" C "bbbb") ))
(assert (= (str.++  "bbccbbbacbaba" C)  (str.++  "bbccbbbacbaba" C) ))
(assert (= (str.++  "ba" C "ddbccddaacb")  (str.++  "bad" C C "bccddaacb") ))
(assert (= (str.++  "aad" C "bbbaccbbca")  (str.++  "aad" C "bbbaccbbca") ))
(assert (= (str.++  "cabbccabac" C "bbc")  (str.++  "cabbccabacdbbc" "") ))
(assert (= (str.++  "cbccabbc" C "bcbda")  (str.++  "cbccabbcdbcb" C "a") ))
(assert (= (str.++  "cacccbd" C "ccccbc")  (str.++  "cacccb" C C "ccccbc") ))
(assert (= (str.++  "bbdcdcabdabc" C "b")  (str.++  "bbdcdcab" C "abc" C "b") ))
(assert (= (str.++  "caccdbc" C "daccac")  (str.++  "cacc" C "bc" C "daccac") ))
(assert (= (str.++  "dcdbcdcbbdc" C "dc")  (str.++  C "cdbc" C "cbbdc" C "dc") ))
(assert (= (str.++  A "dacabcdbcac" "")  (str.++  "cd" C "dacabcdbcac") ))
(assert (= (str.++  C "daa" C "ab" C "aaabbb")  (str.++  C "daadabdaaabbb" "") ))
(assert (= (str.++  "bdaad" C "bcccccbc")  (str.++  "b" C "aaddbcccccbc") ))
(assert (= (str.++  "ccdabbabdbbcad" "")  (str.++  "ccdabbabdbbca" C) ))
(check-sat)

(exit)
