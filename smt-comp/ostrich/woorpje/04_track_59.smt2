(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Joel Day, Thorsten Ehlers, Mitja Kulczynski, Federico Mora, Florin Manea, Dirk Nowotka, Danny Poulsen, Zhengyang Lu
Application: Test WOORPJE
Target solver: WOORPJE
Publications: Day, J. D., Ehlers, T., Kulczynski, M., Manea, F., Nowotka, D., & Poulsen, D. B. (2019). On solving word equations using SAT. In RP 2019
Description: Consisting of a system of 100 small random word equations with at most 6 letters, 10 variables and length 60.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun B () String)
(declare-fun G () String)
(declare-fun F () String)
(declare-fun E () String)
(declare-fun C () String)
(declare-fun D () String)
(assert (= (str.++  "a" D "bcce" B "acfabcdf")  (str.++  "addcdfcdcd" G "cdcaafacfabcdf") ))
(assert (= (str.++  "ba" F "fdebdaefcbfeacbdecb")  (str.++  "baebdadb" E "decb") ))
(assert (= (str.++  "ccddacdbcdcdbabdfdddffebafaeedccf" "")  (str.++  "ccddacdbcdcdba" C "ddffebafaeedccf") ))
(assert (= (str.++  "bcedcadebebbdcbcef" C "bbcffaccebb")  (str.++  "bcedcadebebbdcbcef" C "bbcffaccebb") ))
(assert (= (str.++  "aa" C "beddbcfbbfdfaabbeeccdfadbbb")  (str.++  "aa" C "beddbcfbbfdfaabbeeccdfadbbb") ))
(assert (= (str.++  "afeaffaaeaffbecfcddfebdf" C "dabaf")  (str.++  "afeaffaaeaffbecfcddfebdf" C "dabaf") ))
(assert (= (str.++  "ddaabccdaac" C "afdacafcbfefaafafd")  (str.++  "ddaabccdaac" C "afdacafcbfefaafafd") ))
(assert (= (str.++  "bbdbbefbbeeebdabbaceacaae" C "ebed")  (str.++  "bbdbbefbbeeebdabbaceacaaebdfdebed" "") ))
(assert (= (str.++  "bcacdadffbecdeaddadbdfbe" B "ddfcb")  (str.++  "bcacdadffbecdeaddadbdfbeebdaddfcb" "") ))
(assert (= (str.++  "defbfdacacaafafcbcdeadc" B "ccedcf")  (str.++  "defbfdacacaafafcbcdeadcebdaccedcf" "") ))
(assert (= (str.++  "acceafcadfbfbadaf" B "cccdcaadabdb")  (str.++  "acceafcadfbfbadafebdacccdcaadabdb" "") ))
(assert (= (str.++  "bdabdcdfeadafbdfdcdbbfddbafcefabe" "")  (str.++  "bdabdcdfeadaf" C "cdbbfddbafcefabe") ))
(assert (= (str.++  "fbfdfbaeb" B "dbaaebfdbaedfbbfcbff")  (str.++  "fbfdfbaebebdadbaaebfdbaedfbbfcbff" "") ))
(assert (= (str.++  "ddebafaedfbaedaaedabcbafab" C "adc")  (str.++  "ddebafaedfbaedaaedabcbafabbdfdadc" "") ))
(assert (= (str.++  "beccfeafbfbbceacaacaccabbea" C "bf")  (str.++  "beccfeafbfbbceacaacaccabbeabdfdbf" "") ))
(assert (= (str.++  B "dafcebbdebaebcbdbecebfeeaddbc" "")  (str.++  B "dafcebbdebaebcbdbecebfeeaddbc" "") ))
(assert (= (str.++  "afddbeeefaaecbbbabdebfdbdfddeeddf" "")  (str.++  "afddbeeefaaecbbbabdebfd" C "deeddf") ))
(assert (= (str.++  "e" B "abefbafaafacadbfecdbecefeeae")  (str.++  "eebdaabefbafaafacadbfecdbecefeeae" "") ))
(assert (= (str.++  "aeebdafaffbfbbdbfbccaacbbbfffebee" "")  (str.++  "ae" B "faffbfbbdbfbccaacbbbfffebee") ))
(assert (= (str.++  "aedefabedadfaffaab" C "adcbabfefae")  (str.++  "aedefabedadfaffaabbdfdadcbabfefae" "") ))
(assert (= (str.++  "e" B "dbdacdebefbbcbdedeffacffbbab")  (str.++  "e" B "dbdacdebefbbcbdedeffacffbbab") ))
(assert (= (str.++  "babeaeadfdcdadcaeacbcd" B "eccaacf")  (str.++  "babeaeadfdcdadcaeacbcd" B "eccaacf") ))
(assert (= (str.++  C "ececdffecabeafeeddfdbffabcdec" "")  (str.++  C "ececdffecabeafeeddfdbffabcdec" "") ))
(assert (= (str.++  "bfbadbefabafcec" C "bacecaaffacaeb")  (str.++  "bfbadbefabafcec" C "bacecaaffacaeb") ))
(assert (= (str.++  "cbcfaffecfffbeacbfdacbbbfeddc" B)  (str.++  "cbcfaffecfffbeacbfdacbbbfeddcebda" "") ))
(assert (= (str.++  "decbcfbecbeaafedfdbcaa" C "eabacfc")  (str.++  "decbcfbecbeaafedfdbcaa" C "eabacfc") ))
(assert (= (str.++  "bafdaedfaefefafdaecdeabeaeb" C "cf")  (str.++  "bafdaedfaefefafdaecdeabeaeb" C "cf") ))
(check-sat)

(exit)
