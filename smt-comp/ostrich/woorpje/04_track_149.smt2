(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Joel Day, Thorsten Ehlers, Mitja Kulczynski, Federico Mora, Florin Manea, Dirk Nowotka, Danny Poulsen, Zhengyang Lu
Application: Test WOORPJE
Target solver: WOORPJE
Publications: Day, J. D., Ehlers, T., Kulczynski, M., Manea, F., Nowotka, D., & Poulsen, D. B. (2019). On solving word equations using SAT. In RP 2019
Description: Consisting of a system of 100 small random word equations with at most 6 letters, 10 variables and length 60.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun B () String)
(declare-fun E () String)
(assert (= (str.++  "dbd" B "dabb")  (str.++  "d" E) ))
(assert (= (str.++  "beccbade" "")  (str.++  "beccb" B "de") ))
(assert (= (str.++  "ebb" B "cbe" B)  (str.++  "ebbacbea" "") ))
(assert (= (str.++  "edbb" B "bd" B)  (str.++  "edbb" B "bd" B) ))
(assert (= (str.++  "c" B "daaae" B)  (str.++  "c" B "d" B B B "ea") ))
(assert (= (str.++  "dee" B "ebeb")  (str.++  "deeaebeb" "") ))
(assert (= (str.++  "eeede" B B "a")  (str.++  "eeedeaa" B) ))
(assert (= (str.++  B "cdbcdda" "")  (str.++  B "cdbcdd" B) ))
(assert (= (str.++  "b" B "abeb" B "e")  (str.++  "b" B "abeb" B "e") ))
(assert (= (str.++  "bcbc" B "cbe")  (str.++  "bcbc" B "cbe") ))
(assert (= (str.++  "edcba" B "ab")  (str.++  "edcb" B B B "b") ))
(assert (= (str.++  "bceeacbc" "")  (str.++  "bcee" B "cbc") ))
(assert (= (str.++  "eaa" B "ddab")  (str.++  "e" B "aaddab") ))
(assert (= (str.++  "cba" B "bcbb")  (str.++  "cb" B B "bcbb") ))
(assert (= (str.++  "dcda" B "ccd")  (str.++  "dcd" B B "ccd") ))
(assert (= (str.++  "edbed" B "ac")  (str.++  "edbeda" B "c") ))
(assert (= (str.++  "bb" B "eed" B B)  (str.++  "bb" B "eed" B B) ))
(assert (= (str.++  "eeea" B "bce")  (str.++  "eeea" B "bce") ))
(assert (= (str.++  "ccabe" B "cc")  (str.++  "ccabe" B "cc") ))
(assert (= (str.++  "ccedccb" B)  (str.++  "ccedccba" "") ))
(assert (= (str.++  B "eaabedb" "")  (str.++  B "eaabedb" "") ))
(assert (= (str.++  "bcccdcc" B)  (str.++  "bcccdcc" B) ))
(assert (= (str.++  "bee" B "bcc" B)  (str.++  "beeabcc" B) ))
(assert (= (str.++  "beabbedd" "")  (str.++  "be" B "bbedd") ))
(assert (= (str.++  "baeeecdc" "")  (str.++  "b" B "eeecdc") ))
(assert (= (str.++  "dcd" B "ecbd")  (str.++  "dcdaecbd" "") ))
(assert (= (str.++  B "ccdebae" "")  (str.++  B "ccdeb" B "e") ))
(assert (= (str.++  "ccbbeec" B)  (str.++  "ccbbeeca" "") ))
(assert (= (str.++  "dacea" B "cb")  (str.++  "d" B "ce" B "acb") ))
(assert (= (str.++  "ccabaedd" "")  (str.++  "cc" B "b" B "edd") ))
(assert (= (str.++  "acccbcee" "")  (str.++  B "cccbcee" "") ))
(check-sat)

(exit)
