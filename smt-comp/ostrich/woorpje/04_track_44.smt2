(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Joel Day, Thorsten Ehlers, Mitja Kulczynski, Federico Mora, Florin Manea, Dirk Nowotka, Danny Poulsen, Zhengyang Lu
Application: Test WOORPJE
Target solver: WOORPJE
Publications: Day, J. D., Ehlers, T., Kulczynski, M., Manea, F., Nowotka, D., & Poulsen, D. B. (2019). On solving word equations using SAT. In RP 2019
Description: Consisting of a system of 100 small random word equations with at most 6 letters, 10 variables and length 60.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun B () String)
(declare-fun A () String)
(assert (= (str.++  "abcadabdccdacddd" B "cdeeebeabbbcedccabbcdcddaa")  (str.++  "abcadabdccdacddd" B "cdeeebeabbbcedccabbcdcddaa") ))
(assert (= (str.++  "cadcdabebaaedadabaaabcdccdbbadb" A)  (str.++  "cadcdabebaaedadabaaabcdccdbbad" B "bebbcccdaebdbbbbbaccad") ))
(assert (= (str.++  "aabaadcbbaebeebeabdbdbaabcdbceeb" A "cdabbebdcddeaeabdbcecbcacdeea")  (str.++  "aabaadcbbaeb" B "ebdcddeaeabdbcecbcacdeea") ))
(assert (= (str.++  "eeecbdacaee" A "bebedddcabcdbcabdecdeeaedceaedbbcacaabeedcededecbb")  (str.++  "eeecbdacaeeadebbebedddcabcdbcabdecdeeaedceaedbbcacaabeedcededecbb" "") ))
(assert (= (str.++  "decbebaaecdcbeabecb" A "aeddecaccebeaeaadceabdedbcbbcebaddcabceaee")  (str.++  "decbebaaecdcbeabecbadebaeddecaccebeaeaadceabdedbcbbcebaddcabceaee" "") ))
(assert (= (str.++  "cbeeaaebbbccbaeeadadbcecdaacaaedbebccdbedeecdcddeacdaacebade" A "c")  (str.++  "cbeeaaebbbccbaeeadadbcecdaacaaedbebccdbedeecdcddeacdaacebadeadebc" "") ))
(assert (= (str.++  "daadabbaccadbcaacbcadcbeecddbeccbcbaacbeaeadebacadddbacdebeebdacc" "")  (str.++  "daadabbaccadbcaacbcadcbeecddbeccbcbaacbeae" A "acadddbacdebeebdacc") ))
(assert (= (str.++  "dadecdcbacebebdbcbdddddeecbeecdd" A "cccecbdbbdaadcebeacccddbcaaad")  (str.++  "dadecdcbacebebdbcbdddddeecbeecdd" A "cccecbdbbdaadcebeacccddbcaaad") ))
(assert (= (str.++  "abbaebbddbddcbbcdbebcdaebdbdbaccdbabdaddededebdceeae" A "ccbdadbbc")  (str.++  "abbaebbddbddcbbcdbebcdaebdbdbaccdbabdaddededebdceeae" A "ccbdadbbc") ))
(assert (= (str.++  A "eadbdbbaaceaceddaeaeabccbcccbbdeaaecdcebdbaceaabadcadbbecdabc" "")  (str.++  A "eadbdbbaaceaceddaeaeabccbcccbbdeaaecdcebdbaceaabadcadbbecdabc" "") ))
(assert (= (str.++  "aabdaedcbbcaebdbaccccccbaccecdabccbbcdc" A "edcaceddceeaeacbebbbab")  (str.++  "aabdaedcbbcaebdbaccccccbaccecdabccbbcdc" A "edcaceddceeaeacbebbbab") ))
(assert (= (str.++  "dedacadbaceecebeabbceabcecedebcbdddbbbed" A "dadadbedcebadaaaceeaa")  (str.++  "dedacadbaceecebeabbceabcecedebcbdddbbbed" A "dadadbedcebadaaaceeaa") ))
(assert (= (str.++  "eabcbeeaeb" A "cbaaecdcceaadacdaeaacacaeadeeeebaccecccbbdcbcdddeac")  (str.++  "eabcbeeaeb" A "cbaaecdcceaadacdaeaacacaeadeeeebaccecccbbdcbcdddeac") ))
(assert (= (str.++  "acdedcbacdbcecdbeacebbabcda" A "deacdabedebeadbbdacebeecdcbdccbaab")  (str.++  "acdedcbacdbcecdbeacebbabcda" A "deacdabedebeadbbdacebeecdcbdccbaab") ))
(assert (= (str.++  "dbabcbeadcae" A "ddeaecbbcbebbdbcaddbbdadcaadbbdebcabbbbaaeceacbbe")  (str.++  "dbabcbeadcae" A "ddeaecbbcbebbdbcaddbbdadcaadbbdebcabbbbaaeceacbbe") ))
(assert (= (str.++  "caddceebceedbedbeccbeeabacedddccdedacccbeeadadebdeececbcdcecbbeae" "")  (str.++  "caddceebceedbedbeccbeeabacedddccdedacccbeead" A "deececbcdcecbbeae") ))
(assert (= (str.++  "dcacbcaeeacebbecbaeebbdeabddbb" A "cdddbcdebdcdeecabadccabacdaebdb")  (str.++  "dcacbcaeeacebbecbaeebbdeabddbbadebcdddbcdebdcdeecabadccabacdaebdb" "") ))
(assert (= (str.++  "aabaadeaabeecdabadedaaaaabeeaabdeecaebeaedee" A "deeebeeeeeddbebcc")  (str.++  "aabaadeaabeecdabadedaaaaabeeaabdeecaebeaedeeadebdeeebeeeeeddbebcc" "") ))
(assert (= (str.++  "abdbbbabbbcbbecedecedbeabebaddceeacdeedebea" A "aeaedddbaeebeeabab")  (str.++  "abdbbbabbbcbbecedecedbeabebaddceeacdeedebeaadebaeaedddbaeebeeabab" "") ))
(assert (= (str.++  "eecaccebebeabcecdaedaeadaaecabaccaeacddabec" A "badaeedbcbeeebedbe")  (str.++  "eecaccebebeabcecdaedaeadaaecabaccaeacddabecadebbadaeedbcbeeebedbe" "") ))
(assert (= (str.++  "bdbcedbebde" A "caabdeebcd" A "badcaeedeecbecdbedbceddacaabbcdecedd")  (str.++  "bdbcedbebde" A "caabdeebcd" A "badcaeedeecbecdbedbceddacaabbcdecedd") ))
(assert (= (str.++  "eeaeeeeebbedebbacbceceddbcaaeedbacebbdcecaacdd" A "debccbeceddcaab")  (str.++  "eeaeeeeebbedebbacbceceddbcaaeedbacebbdcecaacddadebdebccbeceddcaab" "") ))
(check-sat)

(exit)
