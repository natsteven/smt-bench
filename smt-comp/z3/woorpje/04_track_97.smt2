(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Joel Day, Thorsten Ehlers, Mitja Kulczynski, Federico Mora, Florin Manea, Dirk Nowotka, Danny Poulsen, Zhengyang Lu
Application: Test WOORPJE
Target solver: WOORPJE
Publications: Day, J. D., Ehlers, T., Kulczynski, M., Manea, F., Nowotka, D., & Poulsen, D. B. (2019). On solving word equations using SAT. In RP 2019
Description: Consisting of a system of 100 small random word equations with at most 6 letters, 10 variables and length 60.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun B () String)
(declare-fun F () String)
(declare-fun E () String)
(declare-fun D () String)
(assert (= (str.++  "bc" F "cb")  (str.++  "bcb" D "cb") ))
(assert (= (str.++  "a" D "db" D "c")  (str.++  D D "d" B) ))
(assert (= (str.++  "cabcad" "")  (str.++  "c" D "bcad") ))
(assert (= (str.++  "dbdc" F)  (str.++  "dbdc" F) ))
(assert (= (str.++  "bdaabd" "")  (str.++  "bd" D "abd") ))
(assert (= (str.++  "cdacaa" "")  (str.++  "cd" D "c" D D) ))
(assert (= (str.++  "bca" F "b")  (str.++  "bcabab" "") ))
(assert (= (str.++  "dc" D "bc" D)  (str.++  "dc" D "bc" D) ))
(assert (= (str.++  "b" D "dcbd")  (str.++  F "dcbd" "") ))
(assert (= (str.++  "d" D "dccb")  (str.++  "d" D "dccb") ))
(assert (= (str.++  "dac" D "cb")  (str.++  "d" D "c" E) ))
(assert (= (str.++  "dcca" D "d")  (str.++  "dcc" D "ad") ))
(assert (= (str.++  "dbbc" D "a")  (str.++  "dbbc" D "a") ))
(assert (= (str.++  "bc" F F)  (str.++  "bc" F "ba") ))
(assert (= (str.++  D D "dbbc")  (str.++  "a" D "dbbc") ))
(assert (= (str.++  D "b" D "bbc")  (str.++  D F "bbc") ))
(assert (= (str.++  "bcd" F "d")  (str.++  "bcdb" D "d") ))
(assert (= (str.++  "adca" D "b")  (str.++  "adc" D D "b") ))
(assert (= (str.++  "dcbdad" "")  (str.++  "dcbd" D "d") ))
(assert (= (str.++  D "ccdbd" "")  (str.++  D "ccdbd" "") ))
(assert (= (str.++  D D "dbcd")  (str.++  D "adbcd" "") ))
(assert (= (str.++  D "ccbbb" "")  (str.++  D "ccbbb" "") ))
(assert (= (str.++  "adc" F "b")  (str.++  D "dcb" D "b") ))
(assert (= (str.++  "dd" F "ab")  (str.++  "dd" F D "b") ))
(assert (= (str.++  "c" D "dddc")  (str.++  "cadddc" "") ))
(assert (= (str.++  "bb" F "aa")  (str.++  "bb" F "aa") ))
(assert (= (str.++  "c" D "bbdb")  (str.++  "cabbdb" "") ))
(assert (= (str.++  D "cdb" D "d")  (str.++  "acd" F "d") ))
(assert (= (str.++  "bddd" D "a")  (str.++  "bddd" D D) ))
(assert (= (str.++  "babdd" D)  (str.++  F "bdd" D) ))
(assert (= (str.++  "dd" F D "d")  (str.++  "ddba" D "d") ))
(assert (= (str.++  "d" D D "db" D)  (str.++  "d" D D "dba") ))
(assert (= (str.++  "cddcda" "")  (str.++  "cddcd" D) ))
(assert (= (str.++  "ad" D D "cc")  (str.++  "ada" D "cc") ))
(assert (= (str.++  "bdcdac" "")  (str.++  "bdcd" D "c") ))
(assert (= (str.++  "caaccb" "")  (str.++  "c" D "accb") ))
(assert (= (str.++  F "bbc" D)  (str.++  "babbc" D) ))
(assert (= (str.++  "cdb" F "d")  (str.++  "cdb" F "d") ))
(assert (= (str.++  "bdccca" "")  (str.++  "bdccc" D) ))
(assert (= (str.++  "bbdbb" D)  (str.++  "bbdbba" "") ))
(assert (= (str.++  "bc" D "bcc")  (str.++  "bcabcc" "") ))
(assert (= (str.++  D "bdbd" D)  (str.++  "abdbd" D) ))
(assert (= (str.++  D "bcd" D "c")  (str.++  D "bcd" D "c") ))
(assert (= (str.++  "ac" D "ac" D)  (str.++  "ac" D D "ca") ))
(assert (= (str.++  "d" D "dbbd")  (str.++  "dadbbd" "") ))
(assert (= (str.++  "cdbbd" D)  (str.++  "cdbbda" "") ))
(assert (= (str.++  "daddbb" "")  (str.++  "d" D "ddbb") ))
(assert (= (str.++  "c" D "dbbd")  (str.++  "c" D "dbbd") ))
(assert (= (str.++  D "bbbcb" "")  (str.++  D "bbbcb" "") ))
(assert (= (str.++  "bbaacc" "")  (str.++  "b" F "acc") ))
(assert (= (str.++  "ca" F D "a")  (str.++  "c" D F D D) ))
(assert (= (str.++  "abdbda" "")  (str.++  D "bdbd" D) ))
(assert (= (str.++  "cb" F "bd")  (str.++  "cbbabd" "") ))
(assert (= (str.++  "bc" D "bdb")  (str.++  "bc" D "bdb") ))
(assert (= (str.++  "bbbcda" "")  (str.++  "bbbcd" D) ))
(assert (= (str.++  "bd" F "bb")  (str.++  "bd" F "bb") ))
(assert (= (str.++  D D "bbdc")  (str.++  D "abbdc" "") ))
(assert (= (str.++  D "dacbb" "")  (str.++  D "d" D "cbb") ))
(assert (= (str.++  "dd" D "cd" D)  (str.++  "ddacd" D) ))
(check-sat)

(exit)
