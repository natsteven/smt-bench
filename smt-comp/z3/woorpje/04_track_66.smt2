(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Joel Day, Thorsten Ehlers, Mitja Kulczynski, Federico Mora, Florin Manea, Dirk Nowotka, Danny Poulsen, Zhengyang Lu
Application: Test WOORPJE
Target solver: WOORPJE
Publications: Day, J. D., Ehlers, T., Kulczynski, M., Manea, F., Nowotka, D., & Poulsen, D. B. (2019). On solving word equations using SAT. In RP 2019
Description: Consisting of a system of 100 small random word equations with at most 6 letters, 10 variables and length 60.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun B () String)
(declare-fun A () String)
(declare-fun C () String)
(assert (= (str.++  B "aaaaaa" C "aaaaaa" B B "a")  (str.++  "aaa" B "aaaaaa" B "aaa" B "aaa" B B "a") ))
(assert (= (str.++  C B "aaa" B C B "a")  (str.++  "aaa" B "aaa" B "aaaaaa" B B B B "a") ))
(assert (= (str.++  "aaa" B "aaa" C A)  (str.++  "aaaaaa" B "aaa" B "aaa" B B B B "a") ))
(assert (= (str.++  C C C B "a")  (str.++  "aaaaaa" B C "aaa" B B "aaaa") ))
(assert (= (str.++  A A "aaaaa")  (str.++  B B "aaa" B B "aaaaaaaaa" B "aaaa") ))
(assert (= (str.++  A B "aa" C B "a")  (str.++  B B "aaa" B "aaa" B C "aaaa") ))
(assert (= (str.++  B B "aaa" C "aaaaaaaaaaaaa")  (str.++  B "aaaaaaaaa" B B B "aaaaaaaaaa") ))
(assert (= (str.++  C C C "aaaa")  (str.++  "aaa" B "aaa" B A "aaaaaa") ))
(assert (= (str.++  C A B B "aaa")  (str.++  B B "aaa" B B B C "aaaa") ))
(assert (= (str.++  C "aaa" B "aaa" C B "a")  (str.++  "aaa" B "aaa" B "aaaaaa" B B "aaa" B "a") ))
(assert (= (str.++  "aaaaaaaaa" C C "aaaa")  (str.++  B B B "aaa" B B "aaa" B "aaa" B "a") ))
(assert (= (str.++  A B "aa" C "aaaa")  (str.++  B B "aaaaaa" B B "aaaaaa" B "aaaa") ))
(assert (= (str.++  C C "aaaaaa" B B "a")  (str.++  B B B B B "aaaaaa" B B B "a") ))
(assert (= (str.++  C C A)  (str.++  "aaa" B B "aaaaaa" B "aaaaaa" B "aaaa") ))
(assert (= (str.++  C A B B "aaa")  (str.++  "aaa" B B "aaaaaa" B "aaa" B B B "a") ))
(assert (= (str.++  B B "aaa" C A)  (str.++  B C B B B "aaaaaaaaaa") ))
(assert (= (str.++  "aaa" B B C "aaaaaaaaaaaaa")  (str.++  B B "aaaaaa" B "aaaaaa" B B "aaaa") ))
(assert (= (str.++  C C B "aaa" B B "a")  (str.++  B B B B B "aaa" B B "aaa" B "a") ))
(assert (= (str.++  "aaa" B B C C B "a")  (str.++  "aaa" B "aaa" B B B "aaa" B "aaa" B "a") ))
(assert (= (str.++  C C C B "a")  (str.++  B B "aaaaaaaaa" B B "aaaaaa" B "a") ))
(assert (= (str.++  "aaa" B "aaaaaa" B "aaa" B "aaa" B B "a")  (str.++  C B B C "aaaaaaa") ))
(assert (= (str.++  C C A)  (str.++  B "aaa" B "aaa" B B "aaa" B "aaa" B "a") ))
(assert (= (str.++  B B "aaa" C B B B "aaaa")  (str.++  B B "aaa" B "aaaaaaaaaaaaaaa" B "a") ))
(assert (= (str.++  B "aaa" B C C "aaaa")  (str.++  C B B "aaaaaa" B "aaaaaaa") ))
(assert (= (str.++  B "aaa" B "aaaaaa" B B B B B "a")  (str.++  B "aaaaaa" B B "aaaaaa" B B B "a") ))
(assert (= (str.++  B B B C A)  (str.++  "aaaaaa" B B B B B "aaaaaa" B "a") ))
(assert (= (str.++  C B "aaaaaa" C "aaaa")  (str.++  B C "aaa" B B B "aaa" B "a") ))
(assert (= (str.++  C B "aaa" B B "aaaaaa" B "a")  (str.++  "aaa" B "aaa" B B "aaa" B B "aaa" B "a") ))
(assert (= (str.++  "aaaaaa" B C C B "a")  (str.++  B B B "aaa" B B "aaa" B B B "a") ))
(assert (= (str.++  C B B "aaaaaa" B "aaaaaaa")  (str.++  B "aaa" B B "aaa" B B "aaa" B "aaaa") ))
(assert (= (str.++  C A B B B)  (str.++  B "aaa" B B B B "aaa" B "aaa" B "a") ))
(assert (= (str.++  C C A)  (str.++  "aaaaaa" B "aaa" B B "aaa" B "aaaaaaa") ))
(assert (= (str.++  "aaa" B B C B "aaa" B "aaaa")  (str.++  B "aaa" B B "aaa" B "aaaaaaaaa" B "a") ))
(assert (= (str.++  "aaa" B "aaa" C C "aaaa")  (str.++  B "aaa" B A "aa" B "aaaa") ))
(assert (= (str.++  "aaa" B B C A)  (str.++  B "aaaaaaaaaaaa" B B "aaa" B "aaaa") ))
(assert (= (str.++  "aaaaaaaaa" C A)  (str.++  B B B B B B C B "a") ))
(assert (= (str.++  B "aaa" B B B B C B "a")  (str.++  "aaaaaaaaa" C "aaa" B "aaa" B "a") ))
(assert (= (str.++  B B B C B B B "aaaa")  (str.++  C B "aaa" B B C "a") ))
(assert (= (str.++  C B "aaaaaa" C "aaaa")  (str.++  B B B B B "aaa" B B B B "a") ))
(assert (= (str.++  B "aaaaaa" C C B "a")  (str.++  "aaa" B B B B "aaaaaaaaa" B "aaaa") ))
(assert (= (str.++  "aaaaaaaaa" C C B "a")  (str.++  B B C B B "aaaaaa" B "a") ))
(assert (= (str.++  B "aaaaaa" C C B "a")  (str.++  "aaaaaa" B B "aaa" B "aaaaaa" B "aaaa") ))
(assert (= (str.++  "aaa" B B C C B "a")  (str.++  B "aaa" B A "aa" B "aaaa") ))
(check-sat)

(exit)
