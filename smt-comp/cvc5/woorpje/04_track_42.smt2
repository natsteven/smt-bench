(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Joel Day, Thorsten Ehlers, Mitja Kulczynski, Federico Mora, Florin Manea, Dirk Nowotka, Danny Poulsen, Zhengyang Lu
Application: Test WOORPJE
Target solver: WOORPJE
Publications: Day, J. D., Ehlers, T., Kulczynski, M., Manea, F., Nowotka, D., & Poulsen, D. B. (2019). On solving word equations using SAT. In RP 2019
Description: Consisting of a system of 100 small random word equations with at most 6 letters, 10 variables and length 60.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun I () String)
(declare-fun H () String)
(declare-fun E () String)
(declare-fun C () String)
(assert (= (str.++  "abb" I "babcf")  (str.++  "ab" H) ))
(assert (= (str.++  "bba" I "aebbc")  (str.++  "bba" I "aebbc") ))
(assert (= (str.++  "bd" C "ceab")  (str.++  "bdbabceab" "") ))
(assert (= (str.++  "b" I "eacfdbf")  (str.++  "be" I "acfdbf") ))
(assert (= (str.++  "d" I "befdeca")  (str.++  "d" I "b" I "fd" I "ca") ))
(assert (= (str.++  "cebfaacdb" "")  (str.++  "c" I "bfaacdb") ))
(assert (= (str.++  "faefdfced" "")  (str.++  "fa" I "fdfc" I "d") ))
(assert (= (str.++  "bfc" I "fcccf")  (str.++  "bfcefcccf" "") ))
(assert (= (str.++  I "fddcbdb" I)  (str.++  "efddcbdb" I) ))
(assert (= (str.++  "fa" I "dfcba" I)  (str.++  "faedfcba" I) ))
(assert (= (str.++  "fecfceddd" "")  (str.++  "f" I "cfceddd") ))
(assert (= (str.++  "ade" I "c" I "dce")  (str.++  "ad" I "ecedce") ))
(assert (= (str.++  "cdee" I "cf" I "b")  (str.++  "cd" I "eecfeb") ))
(assert (= (str.++  "aa" I "aa" I "dfd")  (str.++  "aaeaaedfd" "") ))
(assert (= (str.++  "dcb" I "afaef")  (str.++  "dcb" I "afa" I "f") ))
(assert (= (str.++  "acedda" I "ab")  (str.++  "ac" I "dda" I "ab") ))
(assert (= (str.++  "cbcc" I "dffa")  (str.++  "cbccedffa" "") ))
(assert (= (str.++  "d" I "fffafed")  (str.++  "defffaf" I "d") ))
(assert (= (str.++  "bbfeebffa" "")  (str.++  "bbf" I I "bffa") ))
(assert (= (str.++  "bfabeaacc" "")  (str.++  "bfab" I "aacc") ))
(assert (= (str.++  "dcbacab" I I)  (str.++  "dcbacab" I "e") ))
(assert (= (str.++  "ecbf" I "dffb")  (str.++  I "cbfedffb" "") ))
(assert (= (str.++  "fcffecdcb" "")  (str.++  "fcff" I "cdcb") ))
(assert (= (str.++  "fcada" I "fda")  (str.++  "fcadaefda" "") ))
(assert (= (str.++  "dca" I "ddccc")  (str.++  "dcaeddccc" "") ))
(assert (= (str.++  "fafecab" I "b")  (str.++  "faf" I "cabeb") ))
(assert (= (str.++  I "ddfb" I "bfc")  (str.++  I "ddfb" I "bfc") ))
(assert (= (str.++  "acacacdde" "")  (str.++  "acacacdd" I) ))
(assert (= (str.++  "edecebddd" "")  (str.++  I "d" I "c" I "bddd") ))
(assert (= (str.++  I "dcddacad" "")  (str.++  I "dcddacad" "") ))
(assert (= (str.++  "f" I I "bcdaac")  (str.++  "feebcdaac" "") ))
(assert (= (str.++  "afdacb" I "af")  (str.++  "afdacbeaf" "") ))
(assert (= (str.++  "accf" I "cdaa")  (str.++  "accfecdaa" "") ))
(assert (= (str.++  "c" I "eedecec")  (str.++  "ceeed" I "c" I "c") ))
(assert (= (str.++  I I "fdda" I "ee")  (str.++  I I "fdda" I I "e") ))
(assert (= (str.++  "da" I "febfa" I)  (str.++  "daefebfae" "") ))
(assert (= (str.++  "dddffcd" I "d")  (str.++  "dddffcded" "") ))
(assert (= (str.++  "febcb" I "edd")  (str.++  "febcbeedd" "") ))
(assert (= (str.++  "c" I "ac" I "bebb")  (str.++  "c" I "ac" I "bebb") ))
(assert (= (str.++  I "cdfbcfbf" "")  (str.++  I "cdfbcfbf" "") ))
(assert (= (str.++  "bfaecdffc" "")  (str.++  "bfa" I "cdffc") ))
(assert (= (str.++  "ac" I "caaaee")  (str.++  "acecaaae" I) ))
(assert (= (str.++  I "ad" I "dfaab")  (str.++  "ead" I "dfaab") ))
(assert (= (str.++  I "bfccccfc" "")  (str.++  I "bfccccfc" "") ))
(assert (= (str.++  "ed" I "db" I "dbc")  (str.++  "ed" I "dbedbc") ))
(assert (= (str.++  "beddadfae" "")  (str.++  "b" I "ddadfae") ))
(assert (= (str.++  "fbdaad" I "cf")  (str.++  "fbdaadecf" "") ))
(assert (= (str.++  "cbf" I "bfd" I "e")  (str.++  "cbf" I "bfd" I "e") ))
(assert (= (str.++  "dff" I "fb" I "aa")  (str.++  "dff" I "fb" I "aa") ))
(assert (= (str.++  "fbcdf" I "eba")  (str.++  "fbcdf" I E) ))
(assert (= (str.++  "aacecaf" I "a")  (str.++  "aac" I "cafea") ))
(assert (= (str.++  "bceaafbfc" "")  (str.++  "bc" I "aafbfc") ))
(assert (= (str.++  I "aabaaceb" "")  (str.++  I "aabaaceb" "") ))
(assert (= (str.++  "defbbbcea" "")  (str.++  "d" I "fbbbc" I "a") ))
(assert (= (str.++  "afdfcfbe" I)  (str.++  "afdfcfb" I "e") ))
(assert (= (str.++  I I "dfafafa")  (str.++  I "edfafafa" "") ))
(assert (= (str.++  "c" I "dbebb" I "f")  (str.++  "c" I "db" I "bbef") ))
(assert (= (str.++  "efadbcacc" "")  (str.++  I "fadbcacc" "") ))
(assert (= (str.++  "bdaadcf" I "e")  (str.++  "bdaadcf" I "e") ))
(assert (= (str.++  "dcafddad" I)  (str.++  "dcafddad" I) ))
(assert (= (str.++  "adadc" I "faf")  (str.++  "adadcefaf" "") ))
(assert (= (str.++  "fdccfc" I "cf")  (str.++  "fdccfc" I "cf") ))
(assert (= (str.++  "bcca" I "efad")  (str.++  "bccaeefad" "") ))
(assert (= (str.++  "faab" I "cdba")  (str.++  "faabecdba" "") ))
(assert (= (str.++  I "dfcfaedf" "")  (str.++  "edfcfa" I "df") ))
(assert (= (str.++  "feebbccd" I)  (str.++  "fe" I "bbccd" I) ))
(assert (= (str.++  "ffedddddd" "")  (str.++  "ff" I "dddddd") ))
(assert (= (str.++  "aa" C "bfdc")  (str.++  "aababbfdc" "") ))
(assert (= (str.++  "bcddddbde" "")  (str.++  "bcddddbd" I) ))
(assert (= (str.++  "dcfffb" I "ca")  (str.++  "dcfffbeca" "") ))
(assert (= (str.++  "dcbabde" I "f")  (str.++  "dc" C "d" I "ef") ))
(assert (= (str.++  "ba" I "fcaacd")  (str.++  "ba" I "fcaacd") ))
(assert (= (str.++  "d" I "aefe" I "af")  (str.++  "deaef" I "eaf") ))
(assert (= (str.++  "afa" I "baaab")  (str.++  "afa" E "aab") ))
(assert (= (str.++  "cceaaddaf" "")  (str.++  "cc" I "aaddaf") ))
(assert (= (str.++  I "faaafcfd" "")  (str.++  I "faaafcfd" "") ))
(assert (= (str.++  "afeddbbd" I)  (str.++  "af" I "ddbbde") ))
(assert (= (str.++  "eeecdafff" "")  (str.++  I I "ecdafff") ))
(assert (= (str.++  "ec" I "fcfa" I "a")  (str.++  I "c" I "fcfaea") ))
(assert (= (str.++  "cec" I "fbbea")  (str.++  "cec" I "fbbea") ))
(assert (= (str.++  "dbbd" I "ddaf")  (str.++  "dbbd" I "ddaf") ))
(assert (= (str.++  "adfcfeeac" "")  (str.++  "adfcf" I "eac") ))
(assert (= (str.++  "acdd" I "ffca")  (str.++  "acdd" I "ffca") ))
(assert (= (str.++  "d" I "fdddcbe")  (str.++  "defdddcbe" "") ))
(assert (= (str.++  "bb" I "bd" I "dfd")  (str.++  "bbebd" I "dfd") ))
(assert (= (str.++  I "aabfeac" I)  (str.++  "eaabf" I "ac" I) ))
(assert (= (str.++  "beaccbacc" "")  (str.++  "b" I "accbacc") ))
(assert (= (str.++  I "fafeefbb" "")  (str.++  "efaf" I "efbb") ))
(assert (= (str.++  "febaefafe" "")  (str.++  "f" I "ba" I "fafe") ))
(assert (= (str.++  "b" I "afdfadc")  (str.++  "b" I "afdfadc") ))
(assert (= (str.++  I "cacfbace" "")  (str.++  I "cacfbace" "") ))
(assert (= (str.++  I "ccabcf" I "a")  (str.++  "eccabcf" I "a") ))
(assert (= (str.++  "ed" I "fcfdab")  (str.++  I "defcfdab" "") ))
(assert (= (str.++  "cdcebdebb" "")  (str.++  "cdcebd" I "bb") ))
(assert (= (str.++  "eacbddafe" "")  (str.++  I "acbddaf" I) ))
(assert (= (str.++  I I "cbaafb" I)  (str.++  I I "cbaafb" I) ))
(assert (= (str.++  "ceaaabbbc" "")  (str.++  "c" I "aaabbbc") ))
(assert (= (str.++  "cfb" I "acbab")  (str.++  "cfb" I "acbab") ))
(assert (= (str.++  "deeddaebc" "")  (str.++  "de" I "ddaebc") ))
(assert (= (str.++  "cbebff" I "bd")  (str.++  "cbebff" I "bd") ))
(assert (= (str.++  "ffbcebf" I "e")  (str.++  "ffbcebf" I "e") ))
(assert (= (str.++  "bdba" I "fece")  (str.++  "bdbaef" I "ce") ))
(assert (= (str.++  "fa" I "aacffb")  (str.++  "faeaacffb" "") ))
(assert (= (str.++  "bad" I "b" I "ffd")  (str.++  "badebeffd" "") ))
(assert (= (str.++  "ffccfeaba" "")  (str.++  "ffccf" I "aba") ))
(assert (= (str.++  "eabbaccaf" "")  (str.++  I "abbaccaf" "") ))
(assert (= (str.++  "ffdcdd" I "dc")  (str.++  "ffdcddedc" "") ))
(assert (= (str.++  "cfdedecdb" "")  (str.++  "cfded" I "cdb") ))
(assert (= (str.++  E "bdafcd" "")  (str.++  I C "dafcd") ))
(assert (= (str.++  I "dbfbacba" "")  (str.++  I "dbfbacba" "") ))
(assert (= (str.++  "bdaf" I "bdbd")  (str.++  "bdafebdbd" "") ))
(assert (= (str.++  "fbcfb" I "eab")  (str.++  "fbcfbe" I "ab") ))
(assert (= (str.++  "ecbcb" I "cfa")  (str.++  I "cbcb" I "cfa") ))
(assert (= (str.++  "dd" I "ffafba")  (str.++  "dd" I "ffafba") ))
(assert (= (str.++  "edfb" I "cfb" I)  (str.++  "edfb" I "cfbe") ))
(assert (= (str.++  I "fcbebdd" I)  (str.++  "efcb" I "bdde") ))
(assert (= (str.++  "dcfa" I I "acc")  (str.++  "dcfa" I "eacc") ))
(assert (= (str.++  "fcaefabce" "")  (str.++  "fca" I "fabce") ))
(assert (= (str.++  "aacefcdbc" "")  (str.++  "aac" I "fcdbc") ))
(assert (= (str.++  "aad" I "caefb")  (str.++  "aadecaefb" "") ))
(assert (= (str.++  "efabbfb" I "c")  (str.++  I "fabbfbec" "") ))
(assert (= (str.++  "fedda" I I "aa")  (str.++  "f" I "dda" I "eaa") ))
(assert (= (str.++  "bafbd" I "fdc")  (str.++  "bafbdefdc" "") ))
(assert (= (str.++  I "efcddaf" I)  (str.++  "e" I "fcddafe") ))
(assert (= (str.++  "daf" I "acadc")  (str.++  "dafeacadc" "") ))
(assert (= (str.++  "f" I "bfdbb" I "e")  (str.++  "f" I "bfdbb" I "e") ))
(assert (= (str.++  "ccd" I "bdeec")  (str.++  "ccd" I "bdeec") ))
(assert (= (str.++  "bcdae" I "fff")  (str.++  "bcdaeefff" "") ))
(assert (= (str.++  "cc" I "dbfdac")  (str.++  "cc" I "dbfdac") ))
(assert (= (str.++  I I "cdc" C "d")  (str.++  I I "cdc" C "d") ))
(assert (= (str.++  "fdefaafdc" "")  (str.++  "fd" I "faafdc") ))
(assert (= (str.++  "dad" I "faaca")  (str.++  "dad" I "faaca") ))
(assert (= (str.++  "fddfeedcb" "")  (str.++  "fddf" I I "dcb") ))
(check-sat)

(exit)
