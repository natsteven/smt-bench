(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Joel Day, Thorsten Ehlers, Mitja Kulczynski, Federico Mora, Florin Manea, Dirk Nowotka, Danny Poulsen, Zhengyang Lu
Application: Test WOORPJE
Target solver: WOORPJE
Publications: Day, J. D., Ehlers, T., Kulczynski, M., Manea, F., Nowotka, D., & Poulsen, D. B. (2019). On solving word equations using SAT. In RP 2019
Description: Consisting of a system of 100 small random word equations with at most 6 letters, 10 variables and length 60.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun A () String)
(assert (= (str.++  "accbdcb" A "caacece")  (str.++  "accbdcb" A "caacece") ))
(assert (= (str.++  "bcbdbeadadbacaedec" "")  (str.++  "bcbdbeadadb" A "dec") ))
(assert (= (str.++  "abcaeedcc" A "dabad")  (str.++  "abcaeedcc" A "dabad") ))
(assert (= (str.++  "aaeeedbcdecbacaeea" "")  (str.++  "aaeeedbcdecb" A "ea") ))
(assert (= (str.++  "ecacdcbcd" A "bbeae")  (str.++  "ecacdcbcdacaebbeae" "") ))
(assert (= (str.++  "acdabacaebaebcebcc" "")  (str.++  "acdab" A "baebcebcc") ))
(assert (= (str.++  "deebbcdbbeadaacaea" "")  (str.++  "deebbcdbbeada" A "a") ))
(assert (= (str.++  "ccbceccc" A "bbaeda")  (str.++  "ccbceccc" A "bbaeda") ))
(assert (= (str.++  "cdceeacaecbbddbeac" "")  (str.++  "cdcee" A "cbbddbeac") ))
(assert (= (str.++  "ecebdcdecdde" A "cc")  (str.++  "ecebdcdecdde" A "cc") ))
(assert (= (str.++  "aeacaeeaadaedcceaa" "")  (str.++  "ae" A "eaadaedcceaa") ))
(assert (= (str.++  "ccca" A "aacbbeeecc")  (str.++  "cccaacaeaacbbeeecc" "") ))
(assert (= (str.++  "beeacaedecbdbecbaa" "")  (str.++  "bee" A "decbdbecbaa") ))
(assert (= (str.++  A "dbccedbabebeaa" "")  (str.++  "acaedbccedbabebeaa" "") ))
(assert (= (str.++  "cdeabedcbcc" A "eac")  (str.++  "cdeabedcbccacaeeac" "") ))
(assert (= (str.++  "bed" A "dadeaebebbb")  (str.++  "bedacaedadeaebebbb" "") ))
(assert (= (str.++  "eeadedacbacaeeeedc" "")  (str.++  "eeadedacb" A "eeedc") ))
(assert (= (str.++  "eacbab" A "caebdaae")  (str.++  "eacbab" A "caebdaae") ))
(assert (= (str.++  "c" A "cecdaabdccccd")  (str.++  "c" A "cecdaabdccccd") ))
(assert (= (str.++  "acaedeebddecadacba" "")  (str.++  A "deebddecadacba" "") ))
(assert (= (str.++  "acbedbba" A "aaecab")  (str.++  "acbedbba" A "aaecab") ))
(assert (= (str.++  "b" A "eaaadabaebeec")  (str.++  "bacaeeaaadabaebeec" "") ))
(assert (= (str.++  "aceabd" A "dbedbacc")  (str.++  "aceabdacaedbedbacc" "") ))
(assert (= (str.++  "ac" A "daadeccdbdbc")  (str.++  "ac" A "daadeccdbdbc") ))
(assert (= (str.++  "bcdecde" A A A "a" A "eabaaa")  (str.++  "bcdecde" A A "ca" A "eabaaa") ))
(assert (= (str.++  "bba" A "cbc" A "abebedaeda")  (str.++  "bba" A "cb" A A "abebedaeda") ))
(assert (= (str.++  A "add" A "adaeaaadbb" A A A)  (str.++  A "add" A "adaeaaadbbcc" A) ))
(assert (= (str.++  A "cecabdaadaccbaaab" "")  (str.++  "c" A "e" A "abdaadac" A "baaab") ))
(assert (= (str.++  A "bbdbeacbbbba" A "aecd")  (str.++  "cbbdbeacbbbbacaecd" "") ))
(assert (= (str.++  "decbbcebcdeabaacac" "")  (str.++  "de" A "bbceb" A "deabaacac") ))
(assert (= (str.++  "ddda" A "daecaddeadeae")  (str.++  "dddacdaecaddeadeae" "") ))
(assert (= (str.++  "edd" A "bda" A "bcdce" A "b" A "de")  (str.++  "edd" A "bdacbcdce" A "bcde") ))
(assert (= (str.++  "daae" A "dd" A A "de" A "ddabe" A)  (str.++  "daaecddc" A "de" A "ddabec") ))
(assert (= (str.++  "beedbaabcaee" A "de" A "ea")  (str.++  "beedbaab" A "aeecdecea") ))
(assert (= (str.++  "cca" A "bdecabcadcdbcd")  (str.++  "c" A "a" A "bdecabcadcdb" A "d") ))
(assert (= (str.++  "edbeeaeacaaa" A "abede")  (str.++  "edbeeaea" A "aaa" A "abede") ))
(assert (= (str.++  "acdbaceee" A "eadeeada")  (str.++  "acdba" A "eeeceadeeada") ))
(assert (= (str.++  "a" A "dbad" A "badcbaaabee")  (str.++  "a" A "dbad" A "bad" A "baaabee") ))
(assert (= (str.++  "babaacaeb" A "bec" A "d" A A "c")  (str.++  "babaacaeb" A "be" A A "d" A "cc") ))
(assert (= (str.++  "bdedbbadaeb" A "bbaabd")  (str.++  "bdedbbadaebcbbaabd" "") ))
(assert (= (str.++  "abedeb" A "cabedeebbbb")  (str.++  "abedeb" A "cabedeebbbb") ))
(assert (= (str.++  "ea" A "ddccca" A "caabccee")  (str.++  "ea" A "dd" A A A "accaab" A A "ee") ))
(assert (= (str.++  "acdbdcbd" A "bc" A "bcbbae")  (str.++  "a" A "dbdcbdcbc" A "b" A "bbae") ))
(assert (= (str.++  "deddbadbbbdba" A "ebab")  (str.++  "deddbadbbbdba" A "ebab") ))
(assert (= (str.++  "ebba" A A "edad" A "eddacba")  (str.++  "ebba" A "cedad" A "eddacba") ))
(assert (= (str.++  "e" A "ce" A "dbedb" A "abceaba")  (str.++  "e" A "ce" A "dbedbcabceaba") ))
(assert (= (str.++  "aaace" A "bdcd" A "e" A "dcced")  (str.++  "aaa" A "e" A "bdcd" A "ecd" A "ced") ))
(assert (= (str.++  "bda" A "dbdeadbcedec" A A)  (str.++  "bda" A "dbdeadbcede" A A A) ))
(assert (= (str.++  "ac" A "ebeaabbcacedaad")  (str.++  "accebeaabb" A "acedaad") ))
(assert (= (str.++  "beb" A "abeccbebabebee")  (str.++  "bebcabec" A "bebabebee") ))
(assert (= (str.++  "ed" A "baceddaebdaaaed")  (str.++  "edcba" A "eddaebdaaaed") ))
(assert (= (str.++  "d" A "a" A "dbcdaecdaadbdb")  (str.++  "dcacdb" A "dae" A "daadbdb") ))
(assert (= (str.++  "daab" A "dcbeeabda" A "cdb")  (str.++  "daabcd" A "beeabda" A A "db") ))
(assert (= (str.++  "ebdbe" A "cbbdabbabde" A)  (str.++  "ebdbe" A A "bbdabbabde" A) ))
(assert (= (str.++  "cad" A "eadbeeecea" A "ed" A)  (str.++  A "adceadbeee" A "eaced" A) ))
(assert (= (str.++  A "eeeeb" A "aeddcdbdaaa")  (str.++  A "eeeebcaedd" A "dbdaaa") ))
(assert (= (str.++  "eab" A "ccbedaba" A "baeba")  (str.++  "eabcccbedabacbaeba" "") ))
(assert (= (str.++  "ba" A "dad" A "ebab" A "aeecca")  (str.++  "bacdad" A "ebab" A "aeec" A "a") ))
(assert (= (str.++  "a" A A "bdadedbdeb" A "adbd")  (str.++  "accbdadedbdeb" A "adbd") ))
(assert (= (str.++  "de" A "aeacad" A "daeeb" A "bd")  (str.++  "decaeacadcdaeeb" A "bd") ))
(assert (= (str.++  A "edaecde" A "dbedaadcd")  (str.++  "cedaecde" A "dbedaad" A "d") ))
(assert (= (str.++  "d" A "c" A "ee" A A "eeabbadcac")  (str.++  "dccceecceeabbad" A "a" A) ))
(assert (= (str.++  "bbbdeecedadbadbea" A)  (str.++  "bbbdeecedadbadbea" A) ))
(assert (= (str.++  A A "abdaabddecbecadd")  (str.++  "c" A "abdaabdde" A "be" A "add") ))
(assert (= (str.++  "acedeedd" A "a" A "bbabb" A "b")  (str.++  "a" A "edeeddcacbbabbcb") ))
(assert (= (str.++  "b" A "a" A "bc" A "a" A "abd" A "ddbbb")  (str.++  "bca" A "b" A "ca" A "abdcddbbb") ))
(assert (= (str.++  "ebbeaccb" A "adaadabbb")  (str.++  "ebbeac" A "b" A "adaadabbb") ))
(assert (= (str.++  "e" A "ba" A "bdadaec" A "cdbdd")  (str.++  "ecbacbdadaecc" A "dbdd") ))
(assert (= (str.++  "a" A "dbbe" A "adaedaddad" A)  (str.++  "acdbbe" A "adaedaddad" A) ))
(assert (= (str.++  A "e" A A "be" A "baaad" A "d" A "ea" A)  (str.++  A "e" A "cbecbaaadcdceac") ))
(assert (= (str.++  "baadedcbd" A "bd" A "beaaa")  (str.++  "baaded" A "bdcbd" A "beaaa") ))
(assert (= (str.++  "baaa" A "b" A "bcaaaae" A A "ce")  (str.++  "baaa" A "bcb" A "aaaae" A "cce") ))
(assert (= (str.++  A "aedeedadaecccceaa" "")  (str.++  "caedeedadaec" A "c" A "eaa") ))
(assert (= (str.++  "abd" A "d" A "db" A "acbebcaed")  (str.++  "abd" A "d" A "dbca" A "beb" A "aed") ))
(assert (= (str.++  "adde" A "aeaddebbebeeb")  (str.++  "adde" A "aeaddebbebeeb") ))
(assert (= (str.++  "edbddc" A "beaaeace" A "be")  (str.++  "edbdd" A A "beaaeace" A "be") ))
(assert (= (str.++  "caac" A A "a" A "ca" A "dbdbdba")  (str.++  "caac" A "ca" A A "a" A "dbdbdba") ))
(assert (= (str.++  "bdeaaad" A "b" A "eaedcceb")  (str.++  "bdeaaad" A "bceaed" A "ceb") ))
(assert (= (str.++  "a" A "dbab" A A "dbeeadaadb")  (str.++  "a" A "dbab" A "cdbeeadaadb") ))
(assert (= (str.++  "ac" A "bd" A "a" A "eaddcd" A "bed")  (str.++  "ac" A "bdcaceadd" A "dcbed") ))
(assert (= (str.++  "dae" A A "deeedcedbd" A "db")  (str.++  "daeccdeeedcedbd" A "db") ))
(assert (= (str.++  "bd" A "ebddaabaddcab" A "e")  (str.++  "bdcebddaabadd" A "ab" A "e") ))
(assert (= (str.++  "d" A "cdbbbbdbceecbbea")  (str.++  "dccdbbbbdb" A "eecbbea") ))
(assert (= (str.++  A A "daaeadbbcedbebe" A)  (str.++  A "cdaaeadbb" A "edbebec") ))
(assert (= (str.++  "cbbcca" A "ccdbaabeebc")  (str.++  "cbb" A A "acc" A "dbaabeebc") ))
(assert (= (str.++  A "abbcaadc" A "bebbdaab")  (str.++  "cabbcaadc" A "bebbdaab") ))
(assert (= (str.++  "eeecbcba" A "aabadbdbb")  (str.++  "eeecb" A "bacaabadbdbb") ))
(assert (= (str.++  "dbacd" A "deabbebabecd")  (str.++  "dbacd" A "deabbebabe" A "d") ))
(assert (= (str.++  "eaaeeebbdbebaeac" A "a")  (str.++  "eaaeeebbdbebaea" A A "a") ))
(assert (= (str.++  "bcd" A "dadee" A "eebdddae")  (str.++  "b" A "dcdadee" A "eebdddae") ))
(assert (= (str.++  "da" A A "bbdebcdbacb" A "ba")  (str.++  "da" A "cbbdeb" A "dba" A "bcba") ))
(assert (= (str.++  A "dbce" A "bdeeebdebede")  (str.++  A "db" A "e" A "bdeeebdebede") ))
(assert (= (str.++  "eada" A "deedebec" A "ebbb")  (str.++  "eadacdeedebe" A A "ebbb") ))
(assert (= (str.++  "ebacaabd" A "cb" A "ceeeab")  (str.++  "ebacaabdccb" A "ceeeab") ))
(assert (= (str.++  "acbeaabbcdedbedaec" "")  (str.++  "acbeaabbcdedbedae" A) ))
(assert (= (str.++  "ec" A "ee" A A "a" A "a" A "adbae" A "d")  (str.++  "ec" A "eecca" A "a" A "adbae" A "d") ))
(assert (= (str.++  "eeadaaab" A "ad" A "c" A "d" A "ab")  (str.++  "eeadaaabcadcccd" A "ab") ))
(assert (= (str.++  "abcbae" A "eadedbda" A "eb")  (str.++  "abcbae" A "eadedbda" A "eb") ))
(assert (= (str.++  "ceeddeadaabbcbaada" "")  (str.++  A "eeddeadaabb" A "baada") ))
(assert (= (str.++  "ebe" A "cabbdb" A "bbcddb" A)  (str.++  "ebec" A "abbdbcbb" A "ddb" A) ))
(assert (= (str.++  A A "dbdaceaacaaaa" A A "c")  (str.++  "ccdbdaceaacaaaa" A "cc") ))
(assert (= (str.++  "eeabaedee" A "bcbe" A "b" A "c")  (str.++  "eeabaedeecbcbecb" A A) ))
(assert (= (str.++  "ddcbcdeadbeddcd" A A "b")  (str.++  "ddcb" A "deadbedd" A "dc" A "b") ))
(assert (= (str.++  "e" A "da" A "cbaeeeadbbbea")  (str.++  "ecda" A A "baeeeadbbbea") ))
(assert (= (str.++  "dacbecdcdcd" A "baaacd")  (str.++  "da" A "becdcdcd" A "baaa" A "d") ))
(assert (= (str.++  "eea" A "daceabaaddbedb")  (str.++  "eeacdaceabaaddbedb" "") ))
(assert (= (str.++  "eebeddeba" A "dcdceabe")  (str.++  "eebeddebacdcdceabe" "") ))
(assert (= (str.++  "bdebe" A "dbbdbecedece")  (str.++  "bdebe" A "dbbdbe" A "ede" A "e") ))
(assert (= (str.++  "eb" A "ebae" A "edeeb" A A "d" A "e")  (str.++  "eb" A "ebae" A "edeebc" A "dce") ))
(assert (= (str.++  "ceadeabdabbedb" A A "a" A)  (str.++  "ceadeabdabbedb" A A "ac") ))
(assert (= (str.++  "bad" A "aebaddebceedeb")  (str.++  "badcaebaddebceedeb" "") ))
(assert (= (str.++  "cbdc" A "bcad" A "dadeb" A "ed")  (str.++  "cbd" A "cb" A "adcdadebced") ))
(assert (= (str.++  "aaabbdbcba" A "bedc" A "ea")  (str.++  "aaabbdb" A "bacbedc" A "ea") ))
(assert (= (str.++  "dcdcbdaecdbdeeeaeb" "")  (str.++  "d" A "d" A "bdaecdbdeeeaeb") ))
(assert (= (str.++  "dd" A "aeacebabbabedca")  (str.++  "ddcaea" A "ebabbabedca") ))
(assert (= (str.++  "eccd" A A "bede" A A "bababa")  (str.++  "eccdccbede" A A "bababa") ))
(assert (= (str.++  "bbad" A "b" A A A "cbeb" A "cece")  (str.++  "bbad" A "bc" A A "cbebcce" A "e") ))
(assert (= (str.++  "ddbddbeaaedebb" A A "bb")  (str.++  "ddbddbeaaedebbccbb" "") ))
(assert (= (str.++  "eeaba" A "baee" A "edac" A "ae")  (str.++  "eeaba" A "baeeceda" A "cae") ))
(assert (= (str.++  "daddba" A A A "a" A "ebdaeea")  (str.++  "daddbacccacebdaeea" "") ))
(assert (= (str.++  "dcdaddbdeaedebdabc" "")  (str.++  "d" A "daddbdeaedebdab" A) ))
(assert (= (str.++  "baeed" A A "badeabdaeba")  (str.++  "baeed" A A "badeabdaeba") ))
(assert (= (str.++  "addeeb" A "a" A A "eecbacbd")  (str.++  "addeebcac" A "eecba" A "bd") ))
(assert (= (str.++  "b" A A "ad" A "babdbbcbae" A "c")  (str.++  "bc" A "adcbabdbbcbae" A A) ))
(assert (= (str.++  "aaadd" A A "beaeededba" A)  (str.++  "aaaddccbeaeededbac" "") ))
(assert (= (str.++  "e" A "daed" A "addaacaba" A "a")  (str.++  "e" A "daed" A "addaa" A "abaca") ))
(assert (= (str.++  "cbdaeedb" A A "ea" A "daebe")  (str.++  "cbdaeedbc" A "eacdaebe") ))
(assert (= (str.++  "e" A "eccaabbddad" A "cbaa")  (str.++  "ece" A "caabbddad" A "cbaa") ))
(assert (= (str.++  "dccaeaaabaae" A "baeaa")  (str.++  "dc" A "aeaaabaae" A "baeaa") ))
(assert (= (str.++  A "abacab" A "addaeddaae")  (str.++  A "abacab" A "addaeddaae") ))
(assert (= (str.++  "ea" A "ebabcddae" A "b" A "e" A "e")  (str.++  "ea" A "ebabcddae" A "b" A "e" A "e") ))
(assert (= (str.++  "dab" A "bbbaa" A "aecaddbb")  (str.++  "dabcbbbaacae" A "addbb") ))
(assert (= (str.++  "ebdaaaaa" A A "ddeaceaa")  (str.++  "ebdaaaaaccddea" A "eaa") ))
(assert (= (str.++  "ebbbaceec" A "cbadeaaa")  (str.++  "ebbbacee" A A "cbadeaaa") ))
(assert (= (str.++  "deceb" A "aabde" A "dbeada")  (str.++  "de" A "eb" A "aabdecdbeada") ))
(assert (= (str.++  "c" A "de" A "ededa" A "aead" A "b" A)  (str.++  "c" A "decededa" A "aead" A "bc") ))
(assert (= (str.++  "a" A "dbadaeca" A "cabe" A "ce")  (str.++  "acdbadaeca" A A "abe" A "ce") ))
(assert (= (str.++  "abcab" A "daddebaedded")  (str.++  "abcab" A "daddebaedded") ))
(assert (= (str.++  "dddcae" A "dccbaadba" A A)  (str.++  "dddcaecdccbaadba" A A) ))
(assert (= (str.++  "dd" A A "beaedbdddaaeed")  (str.++  "dd" A "cbeaedbdddaaeed") ))
(assert (= (str.++  "bebbeded" A "adaeebcab")  (str.++  "bebbeded" A "adaeeb" A "ab") ))
(assert (= (str.++  "daebbcac" A "edcbdbaeb")  (str.++  "daebb" A "a" A A "ed" A "bdbaeb") ))
(check-sat)

(exit)
