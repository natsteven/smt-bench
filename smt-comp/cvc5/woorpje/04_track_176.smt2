(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Joel Day, Thorsten Ehlers, Mitja Kulczynski, Federico Mora, Florin Manea, Dirk Nowotka, Danny Poulsen, Zhengyang Lu
Application: Test WOORPJE
Target solver: WOORPJE
Publications: Day, J. D., Ehlers, T., Kulczynski, M., Manea, F., Nowotka, D., & Poulsen, D. B. (2019). On solving word equations using SAT. In RP 2019
Description: Consisting of a system of 100 small random word equations with at most 6 letters, 10 variables and length 60.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun B () String)
(declare-fun A () String)
(declare-fun C () String)
(declare-fun D () String)
(assert (= (str.++  "edbceeb" C "aeaeabc" A "dbaeddaadcaaeeecedddecaaee")  (str.++  "edbceebbceadebebacaeaeabcaa" D "cedddecaaee") ))
(assert (= (str.++  "aabdcd" C "adbbabbddecedbbacbd" C "eceebcae" D "dddedce" C "e")  (str.++  "aabdcd" C "a" B C "cdbeccbbd" C "ddb" C "bbbcbbeabede" C "dedddedce" C "e") ))
(assert (= (str.++  "ddcaddaeaebeb" C "baaadabbaadaaedbcbaacdbaeea" C "aacddacdebbee" C "dedddaa" C C "cdbabadcdedee")  (str.++  "ddcaddaeaebebcbaaadabbaadaaedbcbaa" C "dbaeeacaacddacdebbee" C "dedddaac" C "cdbabadcdedee") ))
(assert (= (str.++  "ae" C "d" C "ebebdaaedbbebbdc" C "ddaabdaacabb" C "b" C "ddaeab" C "deaebeebeeebabaabba" C "abaded" C "dedabde")  (str.++  "aecd" C "ebebdaaedbbebbdccddaabdaa" C "abb" C "b" C "ddaeabcdeaebeebeeebabaabbacabaded" C "dedabde") ))
(assert (= (str.++  "edebd" C "acecbbeeb" C "dddbbecaaaec" C C "daedce" C "addaedebaeeeddeabeaba" C "acdaddacaaaddb" C "eede")  (str.++  "edebdca" C "ecbbeeb" C "dddbbecaaae" C "ccdaedcecaddaedebaeeeddeabeaba" C "a" C "daddacaaaddb" C "eede") ))
(assert (= (str.++  "beeddadd" C "badb" C "daa" C "bdae" C "ae" C C "bd" C "bbadcde" C C "cbaadadcbbaaaedeaabdbadedbeddbbebdbaceb")  (str.++  "beeddaddcbadb" C "daacbdae" C "ae" C "cbd" C "bbadcde" C C C "baadad" C "bbaaaedeaabdbadedbeddbbebdba" C "eb") ))
(assert (= (str.++  "c" C "d" C "ebedc" C "deebbaaaddebbaccbdb" C "b" C "b" C "bcbeebbbe" C "aeecabaccbcbcb" C "de" C "bbaa" C "daaaedcaedc")  (str.++  C "cdcebed" C "cdeebbaaaddebbac" C "bdb" C "bcb" C "bcbeebbbecaee" C "aba" C "cbcbcb" C "decbbaacdaaaedcaed" C) ))
(assert (= (str.++  C "ebddecee" C "aadadbeaeadbebedacd" C "bbeccdab" C "ddbaea" C "dbbeaeeeaaabdaeeebadeade" C "aca" C "dee")  (str.++  C "ebddeceecaadadbeaeadbebedacd" C "bbe" C "cdab" C "ddbaeacdbbeaeeeaaabdaeeebadeadecacacdee") ))
(assert (= (str.++  C "dbacdbdcdbebcde" C "aaccedeaadbdeebbeebdabdaebcdabeeecbdedabe" C "a" C "dd" C "dbdaeaaaecaeea")  (str.++  C "dba" C "dbdcdbeb" C "de" C "aaccedeaadbdeebbeebdabdaeb" C "dabeee" C "bdedabe" C "a" C "ddcdbdaeaaae" C "aeea") ))
(assert (= (str.++  "daaadaea" C "daccbebbeabaceabaddbe" C "b" C "baeddacccc" C "cdeb" C "eddbbdddb" C "eb" C "dd" C "ad" C "adecad" C C "b" C)  (str.++  "daaadaeacdac" C "bebbeaba" C "eabaddbecbcbaeddacc" C "cccdebceddbbdddbcebcddcadcade" C "adc" C "b" C) ))
(assert (= (str.++  C "a" C "adebab" C "acedcadeddeababaecdcadaaabce" C "dead" C "bbd" C C "bdbbdbbcdcbdeaebeceaaabaabeae")  (str.++  "cacadebabca" C "edcadeddeababae" C "dcadaaab" C "e" C "deadcbbdccbdbbdbb" C "dcbdeaebe" C "eaaabaabeae") ))
(assert (= (str.++  "abbeccae" C "aedba" C C "aecbdbde" C "eadceeeae" C "ead" C "b" C "cc" C "bcdbbdaeadbcba" C "bebdeb" C "beccaddeaeae")  (str.++  "abbec" C "ae" C "aedbac" C "aecbdbdeceadceeeae" C "ead" C "bcc" C "cb" C "dbbdaeadbcba" C "bebdebcbe" C "caddeaeae") ))
(assert (= (str.++  "deadd" C "daddeabd" C "deeceadddeead" C C "cacadaedadeeecbd" C "dbca" C "edabdbcebabcdcaedeea" C "dcdda")  (str.++  "deadd" C "daddeabd" C "deeceadddeeadc" C C "a" C "adaedadeeecbd" C "db" C "a" C "edabdbcebabcd" C "aedeea" C "dcdda") ))
(assert (= (str.++  "bdbade" C "cdedbaadcca" C "e" C "bae" C "dda" C "ceabceeecd" C "dadeaabdadbbab" C "edbeebeedcb" C "eed" C "eaabad" C)  (str.++  "bdbade" C C "dedbaadccace" C "bae" C "dda" C C "eabceee" C "d" C "dadeaabdadbbab" C "edbeebeedcb" C "eed" C "eaabad" C) ))
(assert (= (str.++  "baadbad" C "bbecdcabad" C "eabdacc" C "ccabebddbea" C "be" C "bababee" C "c" C "cebabbaacadaba" C "bb" C "ddebbaad")  (str.++  "baadbad" C "bbe" C "dcabadceabda" C "ccccabebddbea" C "be" C "bababee" C "cccebabbaacadabacbb" C "ddebbaad") ))
(assert (= (str.++  "abca" C "bacabadababded" C "bbadaaed" C "dccaaebdbd" C "cdbbaceddedceeec" C C "beb" C "beadded" C "aaeb" C "bd" C)  (str.++  "ab" C "acba" C "abadababdedcbbadaaed" C "d" C C "aaebdbd" C C "dbba" C "edded" C "eeec" C C "beb" C "beadded" C "aaebcbd" C) ))
(assert (= (str.++  "adeedbbdacdeaaacdecebddbeedcabadebadee" C "ebca" C "aeccbbddaac" C "bbeeaaca" C "caba" C "bdbbdabd")  (str.++  "adeedbbdacdeaaacde" C "ebddbeed" C "abadebadee" C "ebca" C "aec" C "bbddaa" C "cbbeeaa" C "accaba" C "bdbbdabd") ))
(assert (= (str.++  "bbaee" C "bbadbeaababdddebdbedd" C "dcaabebd" C "beaebbb" C "debeedbadbebcebbcabbac" C "ea" C "a" C C C "bae")  (str.++  "bbaeecbbadbeaababdddebdbedd" C "dcaabebd" C "beaebbbcdebeedbadbebcebb" C "abba" C C "ea" C "ac" C C "bae") ))
(assert (= (str.++  C "dabbebedbdbda" C "deaabaacddeeedabade" C "baadee" C "eaebbecabbdaaddbb" C C C "dddee" C "caddcdbeee")  (str.++  C "dabbebedbdbda" C "deaabaacddeeedabade" C "baadeeceaebbecabbdaaddbbcccdddeeccadd" C "dbeee") ))
(assert (= (str.++  "d" C "e" C "baebbadeaeadaaabdddce" C "bdaaaaeaabdbdaabba" C C "dadbbad" C "ddebacaaddbdbb" C "badade" C "ec")  (str.++  "dce" C "baebbadeaeadaaabddd" C "ecbdaaaaeaabdbdaabba" C C "dadbbad" C "ddebacaaddbdbb" C "badade" C "e" C) ))
(assert (= (str.++  "dbaaadedeebeeddadbeaabe" C "dbaecbddaecd" C "dbdcdaaeaaceeadabdd" C "dc" C C "deebe" C "ce" C "e" C "bbb" C "d" C)  (str.++  "dbaaadedeebeeddadbeaabe" C "dbae" C "bddae" C "dcdbdcdaaeaa" C "eeadabddcdc" C "cdeebec" C "ece" C "bbb" C "dc") ))
(assert (= (str.++  "dbaeddab" C "adbbbbecaeddbb" C "ebdcdbdaaaedbebedeb" C "ed" C "aebbcdc" C "baabdbbbbcbbaadedaeaaac")  (str.++  "dbaeddab" C "adbbbbecaeddbbcebd" C "dbdaaaedbebedebcedcaebbcdccbaabdbbbbcbbaadedaeaaa" C) ))
(assert (= (str.++  C "dadd" C "ddbebbdddacacbdcaeeabbcdebdb" C "be" C "ddcdbabbaeeeaeabaaeb" C "eceedeedbc" C "eadac" C "b" C)  (str.++  "cdadd" C "ddbebbddda" C "a" C "bdcaeeabb" C "debdb" C "becddcdbabbaeeeaeabaaeb" C "eceedeedb" C "ceadaccbc") ))
(assert (= (str.++  "bcadacdaeddbcbedadbbdebebdbd" C "eb" C C "d" C "d" C "dbdeceadaddedeeda" C "edebbcbeeadcd" C "aceecaaea")  (str.++  "bcadacdaeddb" C "bedadbbdebebdbd" C "ebccdcd" C "dbdeceadaddedeedacedebb" C "beeadcd" C "aceecaaea") ))
(assert (= (str.++  "acdaccdebde" C "dcaebeed" C "dcaa" C "bee" C "dda" C "ece" C "cede" C "b" C "bc" C "ababbdbba" C "dabdecbadabba" C "ebbdab")  (str.++  "acda" C C "debde" C "d" C "aebeed" C "d" C "aacbeecddacece" C "cede" C "b" C "b" C "cababbdbba" C "dabde" C "badabbacebbdab") ))
(assert (= (str.++  "ee" C C C "bac" C "e" C "aadcdaacba" C "ccededcbeeebdadbacdddcdeadbbacab" C "a" C C "d" C "bbedbdeddd" C "bababad")  (str.++  "ee" C C C "ba" C "ce" C "aad" C "daa" C "bacccededcbeeebdadbacdddcdeadbbacab" C "accd" C "bbedbdeddd" C "bababad") ))
(assert (= (str.++  C "cabaedbbdcdbdbbaeebacbbb" C "db" C "deeaeedddb" C "aeeddeac" C "bedaa" C "bdbdcac" C "ecdabaa" C C "abeacb")  (str.++  "c" C "abaedbbd" C "dbdbbaeebacbbbcdbcdeeaeedddbcaeeddea" C "cbedaacbdbd" C "a" C "cecdabaa" C C "abeacb") ))
(assert (= (str.++  "aaabecddeabd" C "cbd" C "aaddaeacceaaaadcbbd" C C "cadeadeaa" C "aad" C "abdcbbd" C C "e" C "eddabeecdca" C "eda")  (str.++  "aaabe" C "ddeabdc" C "bdcaaddaeacceaaaad" C "bbdc" C "cadeadeaacaadcabd" C "bbdcceceddabee" C "dcaceda") ))
(assert (= (str.++  "edbccb" C "eeddecdedd" C "badbbae" C C "debd" C "ddacbdaacdbdbeae" C "eedcbbced" C "e" C "eacddeea" C "dcce" C "e" C "e")  (str.++  "edb" C C "bceedde" C "deddcbadbbae" C C "debd" C "ddacbdaa" C "dbdbeaeceedcbbcedcecea" C "ddeeacdc" C "ecece") ))
(assert (= (str.++  "cd" C "bd" C C "d" C "adbddeddb" C "deda" C "beccdbbcaad" C "abdbebedeaeebcccdbaaecea" C "aaacbc" C C "babebbc" C "d")  (str.++  C "d" C "bdccd" C "adbddeddbcdedacbec" C "dbb" C "aad" C "abdbebedeaeebcccdbaaeceacaaacb" C "ccbabebbccd") ))
(assert (= (str.++  "acacceeeaccedaccddea" C "bbdcceababb" C "ebaaaabaeb" C "dabeaeeabcbdbaaeabeba" C "dad" C "eda" C "dccc")  (str.++  "a" C "a" C "ceeea" C "cedac" C "ddeacbbd" C "ceababbcebaaaabaeb" C "dabeaeeab" C "bdbaaeabebacdadcedacdcc" C) ))
(assert (= (str.++  "dd" C C "dacdbeedddedbaeccb" C "bdeedba" C "dabeaeaea" C "badccecbea" C "aeaddaeaebbbadbedaebadaadb")  (str.++  "ddc" C "da" C "dbeedddedbaec" C "b" C "bdeedbacdabeaeaea" C "bad" C "cecbeacaeaddaeaebbbadbedaebadaadb") ))
(assert (= (str.++  "abeabbbaebca" C "baabdbc" C "bdbe" C "daba" C "abdebcbabbdceeb" C C "dbdad" C "adeebadaaeaccd" C "adecaceb" C)  (str.++  "abeabbbaeb" C "acbaabdb" C "cbdbe" C "daba" C "abdeb" C "babbdceeb" C C "dbdad" C "adeebadaaea" C "cdcade" C "aceb" C) ))
(assert (= (str.++  C "ebebc" C "bdbdaaab" C "cbbcddabdadceecab" C "b" C "cadcaeabcbecbd" C "aaabc" C "ebbbaebaaaebaeadbcadd")  (str.++  "cebebccbdbdaaab" C C "bbcddabdadceecabcb" C C "ad" C "aeabcbecbd" C "aaab" C C "ebbbaebaaaebaeadbcadd") ))
(assert (= (str.++  "aceebeeeebaeedaa" C "dbcabdeeebcdabdaedebeabebbbcadaa" C "aecedcdaeaad" C "aaacebbcbebaaab")  (str.++  "a" C "eebeeeebaeedaacdb" C "abdeeebcdabdaedebeabebbb" C "adaacae" C "edcdaeaadcaaacebbcbebaaab") ))
(assert (= (str.++  "baaedadaadadabaeadddecaebbdeebecaebba" C "edebe" C "ecabbdccdeaddbcd" C "ebbeebdbeeaaaaabe")  (str.++  "baaedadaadadabaeaddde" C "aebbdeebecaebba" C "edebe" C "ecabbdc" C "deaddbcdcebbeebdbeeaaaaabe") ))
(assert (= (str.++  "bcecddbdbdbebc" C "dba" C "daae" C "aedda" C "bab" C "bae" C "adecabe" C "edbabdcbbdeeeeaeeb" C "eedeabdaababc")  (str.++  "b" C "e" C "ddbdbdbeb" C "cdba" C "daaecaedda" C "bab" C "baecade" C "abe" C "edbabdcbbdeeeeaeeb" C "eedeabdaababc") ))
(assert (= (str.++  "abbddbd" C "abaaebddbad" C "decebeb" C "ebb" C "bcaebddeeaccbc" C "eab" C "aaaecaccdcbbdcaabc" C "dadadcda")  (str.++  "abbddbdcabaaebddbadcdecebebcebbcbcaebddeea" C "cbcceab" C "aaaecac" C "dcbbdcaabccdadad" C "da") ))
(assert (= (str.++  "b" C C "ecaecdcadebeee" C "bc" C C "ecbbaae" C "bea" C "ecadeebeabdbd" C "bddcbaeeaabdeeebaedeabbda" C C C "ed")  (str.++  "b" C C "ecaecdcadebeee" C "bc" C "ce" C "bbaae" C "beacecadeebeabdbdcbddcbaeeaabdeeebaedeabbda" C C "ced") ))
(assert (= (str.++  C "edeeaeeeabeaaeea" C "bdeac" C "ccadbeaecea" C "abbebdebadeeabcbbabbed" C "cddd" C "edbebcbcceddec")  (str.++  "cedeeaeeeabeaaeea" C "bdea" C "c" C "cadbeaecea" C "abbebdebadeeab" C "bbabbedc" C "ddd" C "edbeb" C "b" C "ceddec") ))
(assert (= (str.++  C "debbedbbdea" C "bccdbbabbadbd" C "aeebbbbaceecadd" C "abec" C "abbaaadd" C "bcc" C "cae" C "bcebdcdacaedc")  (str.++  C "debbedbbdeacb" C C "dbbabbadbdcaeebbbbaceecaddcabeccabbaaadd" C "bcc" C C "ae" C "bcebd" C "dacaed" C) ))
(assert (= (str.++  "be" C "caee" C "baeedbb" C "adae" C "eeececbecbeecbeeacad" C "aaabad" C "caaabbeadeadd" C "edadca" C "ac" C "abddd")  (str.++  "be" C "caeecbaeedbb" C "adae" C "eee" C "e" C "becbeecbeeacadcaaabad" C "caaabbeadeadd" C "edadcaca" C "cabddd") ))
(assert (= (str.++  "ddcba" C "debbabebbdcacbdddccdd" C "eeb" C "cedabaaddcaeccae" C "acaabbaebeebaddaebdadaeeecead")  (str.++  "ddcbacdebbabebbdcacbddd" C "cddceeb" C "cedabaadd" C "ae" C "cae" C "acaabbaebeebaddaebdadaeee" C "ead") ))
(assert (= (str.++  "abdcadeeadbaccbdc" C "dbbaadece" C "bdbadebdec" C "bdeaddee" C "dddaeaeddabaeaedaabdbdebade" C "dd")  (str.++  "abd" C "adeeadba" C C "bd" C C "dbbaadece" C "bdbadebdec" C "bdeaddee" C "dddaeaeddabaeaedaabdbdebadecdd") ))
(assert (= (str.++  "acede" C "addaabeaeadabddedcb" C C "aceaecbbced" C "aedbbedebbcadcdaadbceeeeee" C C "bea" C "daeddba")  (str.++  "a" C "ede" C "addaabeaeadabddedcbc" C "aceae" C "bbced" C "aedbbedebb" C "ad" C "daadbceeeeeec" C "bea" C "daeddba") ))
(assert (= (str.++  "adcb" C "d" C "eabdebede" C "dbdababeadbe" C "debbbeb" C "addaebeba" C "aaebdbbeeadd" C C "bbeadaeaeed" C "bcab")  (str.++  "ad" C "b" C "dceabdebede" C "dbdababeadbecdebbbebcaddaebebacaaebdbbeeaddc" C "bbeadaeaeedcbcab") ))
(assert (= (str.++  "caaceddeaeedadeebddeacaebaeabecbadcead" C "bd" C "ddddebabec" C "dbbeeaa" C "ccaebdbbdaa" C "aa" C C "e")  (str.++  C "aa" C "eddeaeedadeebddeacaebaeabe" C "bad" C "ead" C "bd" C "ddddebabe" C C "dbbeeaacccaebdbbdaa" C "aa" C "ce") ))
(assert (= (str.++  "aebeeaccabeeaacdaebed" C "cacbddbdebb" C C C C "eae" C "aadbbeebbcaeeaeeaacddeaddc" C "adebd" C "adbb")  (str.++  "aebeea" C "cabeeaa" C "daebedcca" C "bddbdebb" C C "cceaecaadbbeebb" C "aeeaeeaa" C "ddeaddc" C "adebdcadbb") ))
(assert (= (str.++  "abeeaeba" C "eaed" C "aeceaeecdbedeeabcaeeebbaadddabb" C "aecdeeaadcadaedbd" C "da" C "ebaaaddeea" C)  (str.++  "abeeaebaceaedcaeceaeecdbedeeab" C "aeeebbaadddabbcaecdeeaad" C "adaedbd" C "da" C "ebaaaddeeac") ))
(assert (= (str.++  C "cd" C "babeaeeabad" C C "abcebddaba" C C "beeb" C "a" C "eadeaeebcdcecaaca" C "badcdbdcddcaca" C "e" C "ecbbdad")  (str.++  "c" C "d" C "babeaeeabadc" C "ab" C "ebddabaccbeebcaceadeaeebcdce" C "aacacbadcdbd" C "ddcacace" C "e" C "bbdad") ))
(assert (= (str.++  "dd" C "ccebbb" C "de" C "cbddbcdeeaacbaadbbdbbcebaeb" C "dba" C "edaba" C "caceceebdebececedecadabbd" C "d")  (str.++  "ddc" C "cebbb" C "de" C "cbddbcdeeaa" C "baadbbdbbcebaebcdbacedabac" C "a" C "eceebdebece" C "ede" C "adabbdcd") ))
(assert (= (str.++  "eebbdb" C "c" C "bddebbbdaebdbadedca" C "adccbeadbddadb" C "dedbe" C "cad" C "ee" C "bd" C C "abcabbbbcedea" C "e" C "e")  (str.++  "eebbdb" C C C "bddebbbdaebdbadedca" C "ad" C "cbeadbddadbcdedbeccadceecbdc" C "abcabbbb" C "edea" C "e" C "e") ))
(assert (= (str.++  C "ebdbad" C "abb" C "dbe" C "edadbb" C "c" C "ec" C "beadadc" C "aebbadcea" C "beebccadaae" C "bbbae" C "cceaabeddeceab")  (str.++  C "ebdbad" C "abbcdbecedadbbc" C C "e" C "cbeadadc" C "aebbad" C "eacbeeb" C C "adaaecbbbae" C C "ceaabeddeceab") ))
(assert (= (str.++  "abeda" C "daeaebecdadadcdaeed" C "deebeacdedeeee" C "eeeaaebce" C C "eabd" C "eedabdbdeecbead" C "edabe")  (str.++  "abeda" C "daeaebecdadad" C "daeed" C "deebeacdedeeee" C "eeeaaebce" C C "eabdceedabdbdeecbead" C "edabe") ))
(assert (= (str.++  "db" C "aaacadaec" C "bddeadebad" C "abadddbac" C "baedbeecadedbe" C "bbabd" C "ebedbe" C "e" C "b" C "bacecdbdddce")  (str.++  "db" C "aaacadaec" C "bddeadebad" C "abadddba" C C "baedbeecadedbe" C "bbabdcebedbece" C "bcba" C "ecdbdddce") ))
(assert (= (str.++  "eae" C "daebaedebdecc" C "aee" C "dcbdbeabad" C C "ececeacdbbbbc" C "bee" C "b" C "a" C "e" C C "cadbeacdcea" C "bedbdab")  (str.++  "eaecdaebaedebdecc" C "aeecd" C "bdbeabad" C C "e" C "eceacdbbbb" C "cbee" C "b" C "acec" C C "adbeacd" C "eacbedbdab") ))
(assert (= (str.++  "e" C "bb" C "bbbae" C "bdebbdacdbdbdbebdddaab" C "d" C C "dadeabead" C C "ece" C "cbaba" C "debbdadcdbaceeaadeee")  (str.++  "e" C "bb" C "bbbae" C "bdebbda" C "dbdbdbebdddaabcd" C "cdadeabead" C "ce" C "e" C C "baba" C "debbdadcdbaceeaadeee") ))
(assert (= (str.++  "eda" C "b" C "da" C C "abeaddc" C "abde" C "deaaedbbeade" C "abebdabdaddeadadabcbcdbcd" C "deaacbdedbeedbe" C)  (str.++  "eda" C "bcdac" C "abeaddc" C "abde" C "deaaedbbeade" C "abebdabdaddeadadab" C "b" C "db" C "d" C "deaacbdedbeedbe" C) ))
(assert (= (str.++  "bbebebbebbbacaacbeeacadbcbbcedebd" C "bebabdeaadb" C "beeaaadeebabbaabdcebbbabcdbeebad")  (str.++  "bbebebbebbba" C "aacbeea" C "adbcbbcedebd" C "bebabdeaadbcbeeaaadeebabbaabd" C "ebbbab" C "dbeebad") ))
(assert (= (str.++  "c" C "bbcd" C "a" C C "ddbedd" C "cdedcbaeccbed" C "bedcebaead" C "bbbcaacabcd" C "addbbac" C "edbeaeadbcbd" C "ded")  (str.++  C "cbbcd" C "accddbedd" C C "dedcbaec" C "bed" C "bedcebaeadcbbbcaacab" C "d" C "addbba" C C "edbeaeadbcbdcded") ))
(assert (= (str.++  "ebadaabeeaedbaddabbd" C "bdadbddb" C "badcbea" C "dddceeaebaabadeeeaebceedadceebbbcbeeece" C)  (str.++  "ebadaabeeaedbaddabbd" C "bdadbddbcbad" C "beacddd" C "eeaebaabadeeeaebceedad" C "eebbbcbeeecec") ))
(assert (= (str.++  "d" C "baa" C "bdcaebb" C "abbdedadaeddabddbaabbdaeebcaabddbdbbdca" C C "bdbdadbadddbeadbbbbaebe")  (str.++  "d" C "baacbdcaebbcabbdedadaeddabddbaabbdaeeb" C "aabddbdbbdcaccbdbdadbadddbeadbbbbaebe") ))
(assert (= (str.++  "bbdeaeabd" C "bed" C C "ecccbeccdcaccc" C "da" C "aacecccadcdd" C "abdbebaac" C "bbdde" C "aeeabadabeaeadaa")  (str.++  "bbdeaeabd" C "bed" C "cec" C C "beccdca" C C C "cda" C "aace" C C C "ad" C "ddcabdbebaac" C "bbddecaeeabadabeaeadaa") ))
(assert (= (str.++  "a" C "deaedbababa" C "cbbedaeadb" C "adae" C "addddccedb" C C "eaeadeeebd" C "eacbaaeaeb" C "aaccbddbeddbed")  (str.++  "acdeaedbababac" C "bbedaeadb" C "adaecadddd" C "cedb" C C "eaeadeeebdcea" C "baaeaebcaaccbddbeddbed") ))
(assert (= (str.++  "beaeddebecaed" C "aedbeebd" C "eaea" C "eea" C "cacddbdda" C "b" C C "dbdaedaceddbbe" C "bdebaddc" C "aeebddecd")  (str.++  "beaeddebecaedcaedbeebdceaea" C "eea" C "cacddbddacbccdbdaeda" C "eddbbecbdebaddccaeebddecd") ))
(assert (= (str.++  "d" C "ebeaaabed" C "adceadd" C "ddbbbbcedeaabaddabedeea" C C "a" C "ab" C "abddaaee" C "bebaaceaabdecccabad")  (str.++  "dcebeaaabedcadceaddcddbbbbcedeaabaddabedeea" C C "acab" C "abddaaee" C "bebaa" C "eaabdecccabad") ))
(assert (= (str.++  "bbebd" C "ebacbbdb" C "eebdae" C C "cdbedbbad" C "eaedbaeddebabdaedbd" C "cb" C "aeeec" C "db" C C C "edbdebbeaaa")  (str.++  "bbebdceba" C "bbdbceebdae" C "ccdbedbbadceaedbaeddebabdaedbdccbcaeee" C "cdb" C C C "edbdebbeaaa") ))
(assert (= (str.++  "bbdbaeebe" C C "aaeaededbba" C "abbbabbbedbaedea" C "bbe" C "ddbaaebbbcaadeba" C "b" C "edaebcdbbbbaabe")  (str.++  "bbdbaeebe" C C "aaeaededbba" C "abbbabbbedbaedeacbbecddbaaebbb" C "aadeba" C "bcedaeb" C "dbbbbaabe") ))
(assert (= (str.++  "dbbcebaddabeb" C "eaeaddeebebecaaebaedeaadeebbc" C "e" C "adcebcdeeebe" C "ad" C "bdaecaedadaacbea")  (str.++  "dbbcebaddabebceaeaddeebebe" C "aaebaedeaadeebbc" C "e" C "ad" C "eb" C "deeebecadcbdaecaedadaa" C "bea") ))
(assert (= (str.++  "ac" C "ed" C "deb" C "badadadbedeac" C "cbbedebabe" C "badbea" C "daedaebaeaaaabbabda" C "eeecbbecbeaeacb" C)  (str.++  "ac" C "edcdebcbadadadbedea" C C "cbbedebabe" C "badbea" C "daedaebaeaaaabbabda" C "eeecbbecbeaea" C "bc") ))
(assert (= (str.++  "bb" C "bddebbdeeaddda" C "dcd" C "ddddacacdcbabbeeacbabe" C "bee" C "aadbbbebcb" C "decba" C "d" C "daabddaabb")  (str.++  "bb" C "bddebbdeeaddda" C "d" C "d" C "dddda" C "acd" C "babbeea" C "babe" C "beecaadbbbeb" C "bcdecba" C "d" C "daabddaabb") ))
(assert (= (str.++  "dece" C "acbeeedceeadeadcccdad" C "b" C "ea" C "aaaa" C C "acb" C "ecaaabddaca" C "ddadadecaaa" C "eebaeabadbad")  (str.++  "de" C "ecacbeeed" C "eeadeadcccdadcbcea" C "aaaac" C "acbcecaaabdda" C "acddadade" C "aaaceebaeabadbad") ))
(assert (= (str.++  "abbdddcadadbdaebaacbcbe" C "a" C "abaaedaaebabdecbcced" C "bdacaabeaab" C "bbc" C "ceedabdcebaccde")  (str.++  "abbddd" C "adadbdaebaa" C "b" C "beca" C "abaaedaaebabde" C "b" C "ced" C "bda" C "aabeaab" C "bb" C C C "eedabdceba" C C "de") ))
(assert (= (str.++  "ddebbab" C "ddbadcdaea" C C "eadcebbdbedcbeca" C "dadbdcdeaaebebabdac" C "bcced" C "aae" C "ebeebbbdeea")  (str.++  "ddebbabcddbad" C "daeaccead" C "ebbdbedcbe" C "acdadbd" C "deaaebebabda" C C "bccedcaae" C "ebeebbbdeea") ))
(assert (= (str.++  C "eeaeaeedeaeaae" C "eb" C "ce" C "adde" C "daeabeab" C "cdbae" C "a" C "eebeedbbab" C "bedddbadabcdaddaeeeb" C "ed")  (str.++  "ceeaeaeedeaeaaeceb" C "ce" C "adde" C "daeabeabccdbaeca" C "eebeedbbabcbedddbadab" C "daddaeeebced") ))
(assert (= (str.++  "beeeeddaaaeb" C "dbcbdeabbcddeebbdeebbebdada" C "ae" C "bdbbaaebddbcbdba" C "aeeeddebeedceddb" C)  (str.++  "beeeeddaaaeb" C "db" C "bdeabb" C "ddeebbdeebbebdada" C "ae" C "bdbbaaebddb" C "bdba" C "aeeeddebeedceddbc") ))
(assert (= (str.++  "e" C "bcbeeeabbeaeebbaeaeedeeece" C "cd" C "aada" C "becedbecacebeebd" C "dab" C "abae" C "aaaadaaabbbeebc")  (str.++  "e" C "bcbeeeabbeaeebbaeaeedeee" C "e" C "cd" C "aada" C "becedbeca" C "ebeebd" C "dab" C "abaecaaaadaaabbbeeb" C) ))
(assert (= (str.++  "eecabddb" C "aeaaebea" C "caeeebdccbceabadbeceaebcba" C "ddbdedabcdabbbbedb" C "cbdbeabedabbea")  (str.++  "ee" C "abddb" C "aeaaebea" C C "aeeebd" C "cbceabadbeceaebcba" C "ddbdedabcdabbbbedbc" C "bdbeabedabbea") ))
(assert (= (str.++  "ea" C "adaddabdbddabaeebedadb" C "abdebe" C "da" C "becbbbdcbebdddaccebdabaeabdeabceedadeb" C "dae")  (str.++  "eacadaddabdbddabaeebedadbcabdebe" C "da" C "be" C "bbbd" C "bebddda" C C "ebdabaeabdeabceedadeb" C "dae") ))
(assert (= (str.++  C "dacbbdebaa" C "d" C "daeedeeadd" C "baabc" C "ceadeeebba" C "dddebebaede" C "bedcbbeacbbaeaeae" C "edbaed")  (str.++  "cda" C "bbdebaa" C "dcdaeedeeadd" C "baabcc" C "eadeeebbacdddebebaedecbedcbbeacbbaeaeaecedbaed") ))
(assert (= (str.++  "eccaeedbaabdabebdbeeaeddbaabaddbcedaaebeddadedbbbdede" C "bcded" C "aeeddbaecaedaabde" C)  (str.++  "ec" C "aeedbaabdabebdbeeaeddbaabaddb" C "edaaebeddadedbbbdedecb" C "ded" C "aeeddbae" C "aedaabdec") ))
(assert (= (str.++  "dbb" C "eceaceababd" C "e" C "aabacddedadbb" C "e" C "edbecebabbebaebb" C "bd" C "dddbadceedcbdbe" C "dcacaebd")  (str.++  "dbbce" C "ea" C "eababd" C "ecaaba" C "ddedadbbcecedbe" C "ebabbebaebbcbd" C "dddbad" C "eedcbdbecd" C "acaebd") ))
(assert (= (str.++  "beddbedddbccbdb" C "b" C "aebedcaabdaa" C "daee" C C "daeebacbeaebaeccacabdeeebbdccebed" C "acdbbbb")  (str.++  "beddbedddbccbdbcbcaebedcaabdaacdaee" C "cdaeeba" C "beaebae" C "cacabdeeebbd" C "cebedca" C "dbbbb") ))
(assert (= (str.++  "ba" C "eedbbaadbbaeed" C C "dddbdeadaedadabaeadeabaababbaeebd" C "abcaeadadeceddbeeecbbdcab")  (str.++  "ba" C "eedbbaadbbaeedc" C "dddbdeadaedadabaeadeabaababbaeebdcabcaeadadeceddbeeecbbd" C "ab") ))
(assert (= (str.++  "acec" C "adbcde" C "daa" C "eaeaddadbebdebebcebbeadbdbbdaababebdced" C "ebaceaaebaddbacde" C "debd")  (str.++  "aceccadb" C "decdaa" C "eaeaddadbebdebeb" C "ebbeadbdbbdaababebd" C "ed" C "ebaceaaebaddbacde" C "debd") ))
(assert (= (str.++  "dbdbadbaaecbbdbe" C "ebadbaacbbac" C "ecebad" C "ebeabebbaaddbbddedabedddebbcaddbeaebeebab")  (str.++  "dbdbadbaae" C "bbdbecebadbaa" C "bba" C "cecebadcebeabebbaaddbbddedabedddebb" C "addbeaebeebab") ))
(assert (= (str.++  "debabceebb" C "becdeecebedeebebd" C "beddaebbabcca" C "debde" C C C "aaaebdceeceadddea" C "eeebbbeee")  (str.++  "debab" C "eebbcbe" C "deecebedeebebd" C "beddaebbab" C "cacdebdec" C C "aaaebd" C "eeceadddea" C "eeebbbeee") ))
(assert (= (str.++  "abbdbac" C "e" C "eebbbcac" C "acaecdbdcab" C C "e" C "ddeacbdbdaacaedaaaebdea" C "aba" C "ddbebdbeddad" C C "aa")  (str.++  "abbdbacce" C "eebbbcacca" C "aecdbdcab" C "ce" C "ddea" C "bdbdaa" C "aedaaaebdea" C "abacddbebdbeddadc" C "aa") ))
(assert (= (str.++  "dd" C "adbadaecdd" C "ad" C C "adaddaaeebabedbeaeaac" C "aedeaaa" C "eeebadb" C "e" C C C "adeaebdacebadeadee")  (str.++  "ddcadbadae" C "ddcad" C C "adaddaaeebabedbeaeaaccaedeaaaceeebadb" C "ecccadeaebda" C "ebadeadee") ))
(assert (= (str.++  "decbebeeee" C "bbdbebbd" C "dcbddacba" C "cacdaade" C "a" C "bb" C "bdaddaaaa" C "a" C "abcc" C "dd" C "db" C "dabecddecbd")  (str.++  "de" C "bebeeeecbbdbebbdcdcbddacba" C C "a" C "daade" C "a" C "bb" C "bdaddaaaa" C "a" C "abcc" C "ddcdbcdabecdde" C "bd") ))
(assert (= (str.++  "ddcaeeecbdb" C "aaacee" C "bbecceccebeadecdbcbebdaacebcbebdaccbdbcbaecedecde" C "aee" C "ddeea")  (str.++  "ddcaeeecbdb" C "aaaceecbbec" C "e" C "cebeade" C "db" C "bebdaa" C "eb" C "bebdac" C "bdbcbaecede" C "de" C "aeecddeea") ))
(assert (= (str.++  "ddccacdaddddedacbdbe" C "baaaedadebeebdebced" C "abbaabeeabeeaaeaebdcbceac" C "e" C "beadd" C "ecb")  (str.++  "dd" C C "a" C "daddddedacbdbecbaaaedadebeebdeb" C "edcabbaabeeabeeaaeaebd" C "bcea" C C "e" C "beaddcecb") ))
(assert (= (str.++  "a" C "badea" C "ddbd" C "dbedeaabb" C "aacaeadebadadbede" C "abbecbda" C "eda" C "dedbcbbbeabecccdbcd" C "bc" C "c")  (str.++  "acbadea" C "ddbd" C "dbedeaabb" C "aa" C "aeadebadadbede" C "abbe" C "bdacedacdedb" C "bbbeabe" C "ccdb" C "dcb" C C C) ))
(check-sat)

(exit)
