(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Joel Day, Thorsten Ehlers, Mitja Kulczynski, Federico Mora, Florin Manea, Dirk Nowotka, Danny Poulsen, Zhengyang Lu
Application: Test WOORPJE
Target solver: WOORPJE
Publications: Day, J. D., Ehlers, T., Kulczynski, M., Manea, F., Nowotka, D., & Poulsen, D. B. (2019). On solving word equations using SAT. In RP 2019
Description: Consisting of a system of 100 small random word equations with at most 6 letters, 10 variables and length 60.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun B () String)
(declare-fun A () String)
(declare-fun C () String)
(declare-fun D () String)
(assert (= (str.++  D "")  (str.++  A A A "aaa") ))
(assert (= (str.++  D "")  (str.++  A B B A B "a") ))
(assert (= (str.++  C B)  (str.++  B "aaaa" B "aaaaaaa") ))
(assert (= (str.++  D "")  (str.++  A "aaaaaa" B B "a") ))
(assert (= (str.++  "aa" B "aaaa" B "aa" B "a")  (str.++  A A A "aaa") ))
(assert (= (str.++  D "")  (str.++  "aa" B A "aa" B "aaa") ))
(assert (= (str.++  D "")  (str.++  A "aaaaaa" B "aaa") ))
(assert (= (str.++  D "")  (str.++  A A A B "a") ))
(assert (= (str.++  A "aaaa" B B B "a")  (str.++  "aa" B "aaaa" A "aaa") ))
(assert (= (str.++  D "")  (str.++  "aa" B "aa" B B "aa" B "a") ))
(assert (= (str.++  B "aa" A A "aaa")  (str.++  "aa" B A A "aaa") ))
(assert (= (str.++  C "aa" "")  (str.++  A "aa" B B B B "a") ))
(assert (= (str.++  D "")  (str.++  B "aa" A "aaaa" B "a") ))
(assert (= (str.++  B "aa" A "aa" B B "a")  (str.++  B "aa" B B A B "a") ))
(assert (= (str.++  D "")  (str.++  A B "aaaaaa" B "a") ))
(assert (= (str.++  A B "aa" A B "a")  (str.++  B "aa" B B A B "a") ))
(assert (= (str.++  C B)  (str.++  A "aaaaaa" B "aaa") ))
(assert (= (str.++  C B)  (str.++  "aa" B A B "aaaaa") ))
(assert (= (str.++  D "")  (str.++  "aa" B A A B "a") ))
(assert (= (str.++  A A B "aa" B "a")  (str.++  A "aaaa" A "aaa") ))
(assert (= (str.++  D "")  (str.++  B B A A "aaa") ))
(assert (= (str.++  D "")  (str.++  B B A B B "aaa") ))
(assert (= (str.++  D "")  (str.++  "aaaa" A B "aaaaa") ))
(assert (= (str.++  A B "aa" B "aaaaa")  (str.++  A A "aaaaaaa") ))
(assert (= (str.++  D "")  (str.++  "aa" B B "aa" A B "a") ))
(assert (= (str.++  D "")  (str.++  A B "aa" A "aaa") ))
(assert (= (str.++  A A A "aaa")  (str.++  "aa" B A A B "a") ))
(assert (= (str.++  C "aa" "")  (str.++  A A A "aaa") ))
(assert (= (str.++  C B)  (str.++  A "aa" B "aa" B "aaa") ))
(assert (= (str.++  D "")  (str.++  "aa" B "aa" B B "aa" B "a") ))
(assert (= (str.++  D "")  (str.++  B "aa" A B B B "a") ))
(assert (= (str.++  C B)  (str.++  B B A A B "a") ))
(assert (= (str.++  C "aa" "")  (str.++  A "aaaa" A "aaa") ))
(assert (= (str.++  D "")  (str.++  B "aa" A B "aa" B "a") ))
(assert (= (str.++  B "aaaaaa" A B "a")  (str.++  A B B A "aaa") ))
(assert (= (str.++  C "aa" "")  (str.++  A B B A "aaa") ))
(assert (= (str.++  "aa" B A A B "a")  (str.++  "aaaa" A "aaaaaaa") ))
(assert (= (str.++  C B)  (str.++  A "aaaa" A "aaa") ))
(assert (= (str.++  D "")  (str.++  A A A B "a") ))
(assert (= (str.++  D "")  (str.++  "aaaa" B "aaaa" B B "a") ))
(check-sat)

(exit)
