(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Joel Day, Thorsten Ehlers, Mitja Kulczynski, Federico Mora, Florin Manea, Dirk Nowotka, Danny Poulsen, Zhengyang Lu
Application: Test WOORPJE
Target solver: WOORPJE
Publications: Day, J. D., Ehlers, T., Kulczynski, M., Manea, F., Nowotka, D., & Poulsen, D. B. (2019). On solving word equations using SAT. In RP 2019
Description: Consisting of a system of 100 small random word equations with at most 6 letters, 10 variables and length 60.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun B () String)
(declare-fun A () String)
(declare-fun C () String)
(assert (= (str.++  "eacacda" B "aea")  (str.++  "eacacd" C "aea") ))
(assert (= (str.++  "aebbcdabbeaacc" "")  (str.++  "aebbcd" B "aacc") ))
(assert (= (str.++  "e" B "bcdbebcec")  (str.++  "e" B "bcdbebcec") ))
(assert (= (str.++  "eaeabbebdecdcd" "")  (str.++  "eae" B "bdecdcd") ))
(assert (= (str.++  B "dcddcadbae" "")  (str.++  "abbedcddcadbae" "") ))
(assert (= (str.++  "b" B "acabcbcde")  (str.++  "b" B "acabcbcde") ))
(assert (= (str.++  B "dbbecaaeac" "")  (str.++  B "dbbecaaeac" "") ))
(assert (= (str.++  "ac" B "bbbbdbcc")  (str.++  "acabbebbbbdbcc" "") ))
(assert (= (str.++  "bcbdb" B "beaed")  (str.++  "bcbdb" B "beaed") ))
(assert (= (str.++  "aaaedbd" A "eb")  (str.++  "aaaedbd" A "eb") ))
(assert (= (str.++  "eeedccac" A "e")  (str.++  "eeedccac" A "e") ))
(assert (= (str.++  "cdede" A "bbde")  (str.++  "cdede" A "bbde") ))
(assert (= (str.++  "cbaaae" B "bdad")  (str.++  "cbaaaeabbebdad" "") ))
(assert (= (str.++  "beabbebbcbaada" "")  (str.++  "be" B "bbcbaada") ))
(assert (= (str.++  "eabedc" B "bacb")  (str.++  "eabedc" B "bacb") ))
(assert (= (str.++  "c" B "eecacaadb")  (str.++  "cabbeeecacaadb" "") ))
(assert (= (str.++  "dcdbabbeebedac" "")  (str.++  "dcdb" B "ebedac") ))
(assert (= (str.++  "daedbb" A "de")  (str.++  "daedbba" C) ))
(assert (= (str.++  "baebedbbabaeac" "")  (str.++  "baebe" B "aeac") ))
(assert (= (str.++  "d" A B)  (str.++  "dedaedabaadabc" "") ))
(assert (= (str.++  "dadd" A "bddeabb")  (str.++  "daddedabddeabb" "") ))
(assert (= (str.++  "ce" A "abddceaba")  (str.++  "ce" A "abddceaba") ))
(assert (= (str.++  "ededaaccccaebc" "")  (str.++  "ed" A "accccaebc") ))
(assert (= (str.++  "dbdcbabe" A "acd")  (str.++  "dbdcbabeedaacd" "") ))
(assert (= (str.++  "cea" A "abbedabd")  (str.++  "ceaedaabbedabd" "") ))
(assert (= (str.++  A "ecacacabbcb" "")  (str.++  A "ecacacabbcb" "") ))
(assert (= (str.++  "beb" A "baccdacd")  (str.++  "bebedabaccdacd" "") ))
(assert (= (str.++  "ab" A "eaaeaaacd")  (str.++  "abedaeaaeaaacd" "") ))
(assert (= (str.++  "aeadcdb" A "ecec")  (str.++  "aeadcdbedaecec" "") ))
(assert (= (str.++  "dac" A "ebcbcbaa")  (str.++  "dacedaebcbcbaa" "") ))
(assert (= (str.++  "aabbdedadbdbbb" "")  (str.++  "aabbd" A "dbdbbb") ))
(assert (= (str.++  "daedbcaae" A "de")  (str.++  "daedbcaaeedade" "") ))
(assert (= (str.++  "aac" A "bddedcee")  (str.++  "aacedabddedcee" "") ))
(assert (= (str.++  "abb" A "caddccdb")  (str.++  "abbedacaddccdb" "") ))
(assert (= (str.++  "eedacdeccdbdda" "")  (str.++  "e" A "cdeccdbdda") ))
(assert (= (str.++  "eeeecacea" A "ba")  (str.++  "eeeecaceaedaba" "") ))
(assert (= (str.++  "acc" A "ddccbebb")  (str.++  "accedaddccbebb" "") ))
(assert (= (str.++  "ededdcea" A "aae")  (str.++  "ededdceaedaaae" "") ))
(assert (= (str.++  "cabbbabeedadac" "")  (str.++  "cabbbabe" A "dac") ))
(assert (= (str.++  "dcaaedceeee" A)  (str.++  "dcaaedceeee" A) ))
(assert (= (str.++  "baaaacbdbc" A "b")  (str.++  "baaaacbdbcedab" "") ))
(assert (= (str.++  "eabcaddcca" A "b")  (str.++  "eabcaddccaedab" "") ))
(assert (= (str.++  "dbae" A "bbbaaca")  (str.++  "dbaeedabbbaaca" "") ))
(assert (= (str.++  "addbdd" A "cbddd")  (str.++  "addbdd" A "cbddd") ))
(assert (= (str.++  A "beaaddaedca" "")  (str.++  "edabeaaddaedca" "") ))
(assert (= (str.++  "dbacdd" A "adabd")  (str.++  "dbacdd" A "adabd") ))
(assert (= (str.++  "cbac" A "bbbaacd")  (str.++  "cbac" A "bbbaacd") ))
(assert (= (str.++  "caaebbbdd" A "dc")  (str.++  "caaebbbdd" A "dc") ))
(assert (= (str.++  "bc" A "ebbcdeaca")  (str.++  "bcedaebbcdeaca" "") ))
(assert (= (str.++  "ceebbcbcedaedb" "")  (str.++  "ceebbcbc" A "edb") ))
(assert (= (str.++  "cceadbaedaaeaa" "")  (str.++  "cceadba" A "aeaa") ))
(assert (= (str.++  "edaddbaeaddebe" "")  (str.++  A "ddbaeaddebe" "") ))
(assert (= (str.++  "ebdcaedbaeeeda" "")  (str.++  "ebdcaedbaee" A) ))
(assert (= (str.++  "aaedabeaaeaada" "")  (str.++  "aa" A "beaaeaada") ))
(assert (= (str.++  "aec" A "deceacdb")  (str.++  "aec" A "deceacdb") ))
(assert (= (str.++  "cdccbedaaaccaa" "")  (str.++  "cdccb" A "aaccaa") ))
(assert (= (str.++  A "dbeedddcbdd" "")  (str.++  "edadbeedddcbdd" "") ))
(assert (= (str.++  "beebddb" A "cdea")  (str.++  "beebddb" A "cdea") ))
(assert (= (str.++  "aebccaedabaedc" "")  (str.++  "aebcca" A "baedc") ))
(assert (= (str.++  "dabecdbdedd" A)  (str.++  "dabecdbdeddeda" "") ))
(assert (= (str.++  "dbbebedacacabd" "")  (str.++  "dbbeb" A "cacabd") ))
(assert (= (str.++  "dbabecbe" A "caa")  (str.++  "dbabecbeedacaa" "") ))
(assert (= (str.++  "aededeabea" A "a")  (str.++  "aededeabea" A "a") ))
(assert (= (str.++  "edacbcedbccacd" "")  (str.++  A "cbcedbccacd" "") ))
(assert (= (str.++  "db" A "ddbdabdea")  (str.++  "db" A "ddbdabdea") ))
(assert (= (str.++  "abbeeeeee" A "ae")  (str.++  "abbeeeeeeedaae" "") ))
(assert (= (str.++  "dcbc" A "cbcceae")  (str.++  "dcbcedacbcceae" "") ))
(assert (= (str.++  "dabebbad" A "aeb")  (str.++  "dabebbadedaaeb" "") ))
(assert (= (str.++  "dbd" A "cccbebee")  (str.++  "dbdedacccbebee" "") ))
(assert (= (str.++  "dccc" A "cdaeabe")  (str.++  "dcccedacdaeabe" "") ))
(assert (= (str.++  "cbdaedcd" A "aac")  (str.++  "cbdaedcdedaaac" "") ))
(assert (= (str.++  "dcdecaedacbecc" "")  (str.++  "dcdeca" A "cbecc") ))
(assert (= (str.++  "dceebdc" A "ceee")  (str.++  "dceebdcedaceee" "") ))
(assert (= (str.++  "ebad" A "dbdeeec")  (str.++  "ebadedadbdeeec" "") ))
(assert (= (str.++  "bcebccdd" A "acb")  (str.++  "bcebccddedaacb" "") ))
(assert (= (str.++  "ecbaccdedaaead" "")  (str.++  "ecbaccd" A "aead") ))
(assert (= (str.++  "edccedbecca" A)  (str.++  "edccedbeccaeda" "") ))
(assert (= (str.++  "bbc" A "adeddcbb")  (str.++  "bbc" A "adeddcbb") ))
(assert (= (str.++  "dae" A "daadcecd")  (str.++  "daeedadaadcecd" "") ))
(assert (= (str.++  "eadec" A "adaecd")  (str.++  "eadec" A "adaecd") ))
(assert (= (str.++  "cedadaadacabec" "")  (str.++  "c" A "daadacabec") ))
(assert (= (str.++  "eabddada" A "bda")  (str.++  "eabddadaedabda" "") ))
(assert (= (str.++  "edaabad" A "cdaa")  (str.++  "edaabadedacdaa" "") ))
(assert (= (str.++  "badccaaaedaecd" "")  (str.++  "badccaaa" A "ecd") ))
(assert (= (str.++  "a" A "dadecabdad")  (str.++  "aedadadecabdad" "") ))
(assert (= (str.++  "debca" A "abeccc")  (str.++  "debcaedaabeccc" "") ))
(assert (= (str.++  "bbecdeea" A "eab")  (str.++  "bbecdeea" A "eab") ))
(assert (= (str.++  "aaccc" A "bdbceb")  (str.++  "aacccedabdbceb" "") ))
(assert (= (str.++  "ecbedabebceddc" "")  (str.++  "ecb" A "bebceddc") ))
(assert (= (str.++  "aaa" A "bcdaabed")  (str.++  "aaa" A "bcdaabed") ))
(assert (= (str.++  "addcccbd" A "baa")  (str.++  "addcccbdedabaa" "") ))
(assert (= (str.++  "ebdbebbbcd" A "b")  (str.++  "ebdbebbbcd" A "b") ))
(assert (= (str.++  "dcd" A "dbcbebcb")  (str.++  "dcdedadbcbebcb" "") ))
(assert (= (str.++  "aabbaeedebedaa" "")  (str.++  "aabbaeedeb" A "a") ))
(assert (= (str.++  "eb" B B "ed" B A C "bbe")  (str.++  "eb" B B "ed" B "b" C "ecbbe") ))
(assert (= (str.++  "ebebe" C "badea" B "dd")  (str.++  "ebebe" B "badea" C "dd") ))
(assert (= (str.++  "abb" B B "dde" C C "e" B "bc")  (str.++  "abb" C B "dde" C B "e" B "bc") ))
(assert (= (str.++  "beab" C "aabd" B "ee" B "a")  (str.++  "beabcaabd" C "eeca") ))
(assert (= (str.++  "deed" B "dab" B "abde" B)  (str.++  "deed" B "dabcabde" C) ))
(assert (= (str.++  "ddad" C "eeebcce" C "b")  (str.++  "ddadceeeb" C C "ecb") ))
(assert (= (str.++  "decb" B "addeeedee")  (str.++  "de" C "b" B "addeeedee") ))
(assert (= (str.++  "e" C "dedbeaaea" A)  (str.++  "e" B "dedbeaaeab" C "e") ))
(assert (= (str.++  C "dbbaddedceecd" "")  (str.++  C "dbbadded" B "eecd") ))
(assert (= (str.++  "eaeaee" C "b" B "cbeaa")  (str.++  "eaeaee" B "b" C B "beaa") ))
(assert (= (str.++  "dbedd" B B C "adece" C)  (str.++  "dbedd" C B C "ade" C "e" C) ))
(assert (= (str.++  B "dddebe" B "ebeab" B)  (str.++  C "dddebe" C "ebeab" B) ))
(assert (= (str.++  "c" B "bedbaa" C "aeeed")  (str.++  "c" C "bedbaa" C "aeeed") ))
(assert (= (str.++  "edbdbdbaa" B "dbee")  (str.++  "edbdbdbaa" C "dbee") ))
(assert (= (str.++  "ba" C "daab" B B "eeeee")  (str.++  "ba" C "daabcceeeee") ))
(assert (= (str.++  "ae" C "aadecddaadd")  (str.++  "ae" C "aade" C "ddaadd") ))
(assert (= (str.++  "ebbbb" B "ac" B "eeeee")  (str.++  "ebbbb" C "a" B C "eeeee") ))
(assert (= (str.++  "ba" B "bad" C B "dacdbb")  (str.++  "bacbad" C B "da" C "dbb") ))
(assert (= (str.++  "beeaa" C B "eecbcdb")  (str.++  "beeaa" C "cee" B "b" C "db") ))
(assert (= (str.++  "ed" B "daba" B "dcedbd")  (str.++  "edcdaba" B "dcedbd") ))
(assert (= (str.++  "daccddaabadade" "")  (str.++  "dac" C "ddaabadade") ))
(assert (= (str.++  "addabaaedbb" B "ac")  (str.++  "addabaaedbb" C "a" C) ))
(assert (= (str.++  C B "bacebbabd" B C "b")  (str.++  C "cbacebbabd" B C "b") ))
(assert (= (str.++  "b" B "aedbb" B "deaddb")  (str.++  "b" C "aedbb" C "deaddb") ))
(assert (= (str.++  "edaaeba" C "a" B "eadc")  (str.++  "edaaebaca" C "eadc") ))
(assert (= (str.++  "ebb" C B "daedbe" B "ba")  (str.++  "ebbccdaedbe" C "ba") ))
(assert (= (str.++  "aedeb" B "a" B "edbead")  (str.++  "aedeb" C "a" C "edbead") ))
(assert (= (str.++  "daa" B "bbcaeeedee")  (str.++  "daa" B "bb" C "aeeedee") ))
(assert (= (str.++  "ebdeebebabde" B "b")  (str.++  "ebdeebebabde" C "b") ))
(assert (= (str.++  "aabed" B "aa" C "ddbe" B)  (str.++  "aabed" C "aa" C "ddbe" C) ))
(assert (= (str.++  C "dae" B "bea" C "eddaa")  (str.++  C "daecbea" B "eddaa") ))
(assert (= (str.++  B "aabdaab" C B "a" B "bd")  (str.++  C "aabdaab" C B "a" C "bd") ))
(assert (= (str.++  "cb" C "daddaede" B "ad")  (str.++  "cb" C "daddaede" C "ad") ))
(assert (= (str.++  "c" C B "eebabdebcaa")  (str.++  B B B "eebabdebcaa") ))
(assert (= (str.++  "bbdddddeeceaee" "")  (str.++  "bbdddddee" B "eaee") ))
(assert (= (str.++  "ebbedabaeddece" "")  (str.++  "ebbedabaedde" C "e") ))
(assert (= (str.++  "eaaeed" B "beb" B "bde")  (str.++  "eaaeedcbebcbde" "") ))
(assert (= (str.++  "be" B "ad" C "baced" B "a" B)  (str.++  "be" C "ad" C "baced" C "a" C) ))
(assert (= (str.++  "a" B "abaedecebadb")  (str.++  "acabaedecebadb" "") ))
(assert (= (str.++  "ebbbbbbdbaba" B "a")  (str.++  "ebbbbbbdbaba" C "a") ))
(assert (= (str.++  "badaccae" A "eaa")  (str.++  "bada" C "caeb" C "eeaa") ))
(assert (= (str.++  "adda" B "e" C "ba" B "bedc")  (str.++  "adda" C "e" C "ba" B "bed" B) ))
(assert (= (str.++  "aebaabe" A "ebaa")  (str.++  "aebaabebceebaa" "") ))
(assert (= (str.++  B "bed" B "dddaaceeb")  (str.++  C "bed" B "dddaaceeb") ))
(assert (= (str.++  "eaedcdc" C "daedeb")  (str.++  "eaed" C "d" C C "daedeb") ))
(assert (= (str.++  "dcaeeea" B "a" B B "dbe")  (str.++  "d" C "aeeea" B "a" C B "dbe") ))
(assert (= (str.++  "da" B "baedea" C "ca" B "d")  (str.++  "da" B "baedea" B "ca" C "d") ))
(assert (= (str.++  "a" B "ebdaeeeadbea")  (str.++  "a" B "ebdaeeeadbea") ))
(assert (= (str.++  "dcadae" B "dd" B "dbad")  (str.++  "d" B "adae" C "dd" C "dbad") ))
(assert (= (str.++  "d" B "eaba" B "bdad" C "ed")  (str.++  "d" C "eaba" B "bdadced") ))
(assert (= (str.++  "aaba" B "becba" A "b")  (str.++  "aaba" B "be" B "bab" B "eb") ))
(assert (= (str.++  B C "deeb" B "edbaea" B)  (str.++  C "cdeeb" B "edbaea" B) ))
(assert (= (str.++  C "ddedbd" B C "dddba")  (str.++  "cddedbdc" B "dddba") ))
(assert (= (str.++  "bdbddbca" B C "bbbc")  (str.++  "bdbddbca" C C "bbb" C) ))
(assert (= (str.++  B "abaadeee" B "ddaa")  (str.++  "cabaadeee" B "ddaa") ))
(assert (= (str.++  "aba" B "dbdeeea" C "dd")  (str.++  "abacdbdeeeacdd" "") ))
(assert (= (str.++  "acbdbeaee" B B "bea")  (str.++  "acbdbeaee" C C "bea") ))
(assert (= (str.++  "c" B "aaaaebeea" B B "e")  (str.++  "c" C "aaaaebeea" C "ce") ))
(assert (= (str.++  "be" B "aedcedcbadc")  (str.++  "be" C "aed" C "ed" C "badc") ))
(assert (= (str.++  "caadb" C "d" B "eaa" B B "d")  (str.++  C "aadb" B "dceaa" B C "d") ))
(assert (= (str.++  "bbeb" B B "cedde" B B B)  (str.++  "bbeb" B B "ceddec" C C) ))
(assert (= (str.++  "bebb" B "aeabebeee")  (str.++  "bebbcaeabebeee" "") ))
(assert (= (str.++  B "eddd" B B "cbaecbc")  (str.++  C "eddd" C C C "bae" C "b" B) ))
(assert (= (str.++  "d" C "cbabbdeaddad")  (str.++  "d" B "cbabbdeaddad") ))
(assert (= (str.++  "aabdaaaedba" C "b" C)  (str.++  "aabdaaaedba" C "b" C) ))
(assert (= (str.++  B "adbeeb" B "ab" C "aed")  (str.++  C "adbeeb" B "ab" C "aed") ))
(assert (= (str.++  "daceeeebdebda" B)  (str.++  "da" C "eeeebdebda" C) ))
(assert (= (str.++  "da" B "aedbedbdeed")  (str.++  "da" B "aedbedbdeed") ))
(assert (= (str.++  "cc" B "abebd" B "abaaa")  (str.++  B "c" B "abebdcabaaa") ))
(assert (= (str.++  B "beacdaeaeacaa" "")  (str.++  C "bea" C "daeaea" C "aa") ))
(assert (= (str.++  "aabdbddd" C "edbee")  (str.++  "aabdbddd" C "edbee") ))
(assert (= (str.++  "a" C "ddadd" B "edec" B C)  (str.++  "a" B "ddadd" C "edec" B B) ))
(assert (= (str.++  B "deadeeaa" B "a" B "aa")  (str.++  B "deadeeaa" C "a" C "aa") ))
(assert (= (str.++  "adceb" B "badadba" C)  (str.++  "ad" C "eb" C "badadba" C) ))
(assert (= (str.++  "adbbe" C "e" B "bb" B "c" B "a")  (str.++  "adbbe" C "e" B "bb" B C C "a") ))
(assert (= (str.++  B "d" B "aeaadaeea" C C)  (str.++  "cdcaeaadaeea" B "c") ))
(assert (= (str.++  B "bc" B C "d" C "d" B "be" B "d" B)  (str.++  C "b" C B B "d" C "d" C "be" B "dc") ))
(assert (= (str.++  "eddb" B B "daa" B "bada")  (str.++  "eddb" B C "daa" B "bada") ))
(assert (= (str.++  "abbea" C "dbe" B "eace")  (str.++  "abbea" C "dbe" C "ea" C "e") ))
(assert (= (str.++  B "adcaea" C "bbda" B "e")  (str.++  C "ad" C "aea" B "bbdace") ))
(assert (= (str.++  "edba" B "dbdadeeba")  (str.++  "edba" C "dbdadeeba") ))
(assert (= (str.++  "aaa" C "bdeaedaada")  (str.++  "aaacbdeaedaada" "") ))
(assert (= (str.++  "ebadbace" B "bea" B "a")  (str.++  "ebadba" C "e" C "bea" C "a") ))
(assert (= (str.++  "bb" B "a" B "ebea" B "bebe")  (str.++  "bbca" C "ebea" C "bebe") ))
(assert (= (str.++  "cbbbaedae" B "a" C "be")  (str.++  B "bbbaedae" C "acbe") ))
(assert (= (str.++  "bdd" B "aeb" C "b" B "baed")  (str.++  "bdd" B "aebcb" B "baed") ))
(assert (= (str.++  "aec" B "ebab" B C "ac" B "d")  (str.++  "ae" C B "ebab" C C "a" B C "d") ))
(assert (= (str.++  "c" B "baedcaca" B "bbe")  (str.++  C B "baed" C "a" C "a" C "bbe") ))
(assert (= (str.++  "da" B "a" C "bbaabbaee")  (str.++  "daca" C "bbaabbaee") ))
(assert (= (str.++  "d" C "bb" B B "a" B "a" B "aaba")  (str.++  "d" C "bbc" B "a" B "a" C "aaba") ))
(assert (= (str.++  "deeeddc" B "bbbbed")  (str.++  "deeeddc" C "bbbbed") ))
(assert (= (str.++  B "aa" C "de" C "dacbeae")  (str.++  C "aacdecdacbeae" "") ))
(assert (= (str.++  "e" B "bdaaeeadddbe")  (str.++  "e" C "bdaaeeadddbe") ))
(assert (= (str.++  "dda" A "ba" B "dea" C "e")  (str.++  "dda" A "bacdea" C "e") ))
(assert (= (str.++  C "aed" B "eb" C B "d" B "db" C)  (str.++  C "aed" C "ebc" C "d" B "db" C) ))
(assert (= (str.++  "dbaea" B "aea" B "d" C "dd")  (str.++  "dbaea" C "aea" B "d" B "dd") ))
(assert (= (str.++  "edad" B "bbdceb" C "dd")  (str.++  "edad" C "bbd" B "eb" C "dd") ))
(assert (= (str.++  "eeeebb" B C "aedbb" B)  (str.++  "eeeebb" C "caedbb" C) ))
(assert (= (str.++  C "ebbacde" B "daae" B)  (str.++  C "ebba" C "de" B "daae" C) ))
(assert (= (str.++  "addb" C "edd" B "bbb" C "e")  (str.++  "addbcedd" B "bbb" C "e") ))
(assert (= (str.++  "dedda" B "dacae" B "ba")  (str.++  "dedda" C "da" B "aecba") ))
(assert (= (str.++  "bedbded" B "dabad" B)  (str.++  "bedbded" B "dabad" B) ))
(assert (= (str.++  "aeb" B "bbc" C "ab" B B "bc")  (str.++  "aeb" B "bb" C B "ab" C C "b" C) ))
(assert (= (str.++  "e" C "d" B "c" C "baa" C "e" B "ae")  (str.++  "ecd" C C C "baa" C "e" C "ae") ))
(assert (= (str.++  "ee" B B "ebda" B "bbeee")  (str.++  "ee" B C "ebda" C "bbeee") ))
(assert (= (str.++  "bba" B "d" B B "caeee" C "e")  (str.++  "bba" C "d" B C "caeee" B "e") ))
(assert (= (str.++  "adee" C "bdcbedaeb")  (str.++  "adee" B "bd" C "bedaeb") ))
(assert (= (str.++  C "d" C "a" B "edbeaeccc")  (str.++  C "dca" B "edbeaec" C C) ))
(assert (= (str.++  C "e" B B "b" B "eadbedba")  (str.++  B "e" C C A "adbedba") ))
(assert (= (str.++  "d" B B "eaad" B "bebeab")  (str.++  "d" B C "eaadcbebeab") ))
(assert (= (str.++  "dd" B "aa" C "c" B "eda" C "ad")  (str.++  "dd" C "aa" C C C "eda" C "ad") ))
(assert (= (str.++  "bedce" C "eaeaabdc")  (str.++  "bed" C "e" B "eaeaabd" C) ))
(assert (= (str.++  "e" B "adb" B "aa" B "eeebd")  (str.++  "e" C "adb" C "aa" C "eeebd") ))
(assert (= (str.++  C "ddacdb" B "de" A "a")  (str.++  C "dda" C "dbcdeb" C "ea") ))
(assert (= (str.++  "baaaeaede" C "baae")  (str.++  "baaaeaede" B "baae") ))
(assert (= (str.++  "bab" B "e" B "bdaeaeab")  (str.++  "ba" A C "bdaeaeab") ))
(assert (= (str.++  "eea" B "ebdedaaaab")  (str.++  "eea" C "ebdedaaaab") ))
(assert (= (str.++  "aeabd" B "adadeeae")  (str.++  "aeabd" B "adadeeae") ))
(assert (= (str.++  "baeede" B B C "ea" B C B)  (str.++  "baeedec" C B "ea" B "cc") ))
(assert (= (str.++  "b" B "aeec" B "ee" B "ee" C "b")  (str.++  "b" C "aeeccee" C "ee" C "b") ))
(assert (= (str.++  "b" B "b" C "a" B "add" B "eeea")  (str.++  "b" B "b" C "acadd" C "eeea") ))
(assert (= (str.++  "ddeeee" B "baedaaa")  (str.++  "ddeeee" B "baedaaa") ))
(assert (= (str.++  "e" B "bdeeedad" C "e" C "a")  (str.++  "e" C "bdeeedad" C "e" B "a") ))
(assert (= (str.++  "eebaabdecbaeba" "")  (str.++  "eebaabde" C "baeba") ))
(check-sat)

(exit)
