(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Joel Day, Thorsten Ehlers, Mitja Kulczynski, Federico Mora, Florin Manea, Dirk Nowotka, Danny Poulsen, Zhengyang Lu
Application: Test WOORPJE
Target solver: WOORPJE
Publications: Day, J. D., Ehlers, T., Kulczynski, M., Manea, F., Nowotka, D., & Poulsen, D. B. (2019). On solving word equations using SAT. In RP 2019
Description: Consisting of a system of 100 small random word equations with at most 6 letters, 10 variables and length 60.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun B () String)
(declare-fun A () String)
(assert (= (str.++  "abdcaadba" B)  (str.++  "abdcaadba" B) ))
(assert (= (str.++  "bdbcbcccbabedabbcbaeacde" "")  (str.++  "bdbcbccc" A "e") ))
(assert (= (str.++  "eaaaddcadceb" A "ececa")  (str.++  B "abceececa" "") ))
(assert (= (str.++  "bbdbde" B "b" A "aebedbd")  (str.++  "bbdbde" B "b" A "aebedbd") ))
(assert (= (str.++  B "cbaebdcecdd" B B "ab" B "bebbbce")  (str.++  "ecba" B "bdc" B "cddeeab" B "b" B "bbbc" B) ))
(assert (= (str.++  B "a" B "bbbccb" B "acdcdaadcebdcb")  (str.++  B "a" B "bbbccbeacdcdaadcebdcb") ))
(assert (= (str.++  "ddacddaeadeaccd" B "bdbbbbac")  (str.++  "ddacddaead" B "accd" B "bdbbbbac") ))
(assert (= (str.++  "aabd" B "dcabdbcd" B B "cebcddbdb")  (str.++  "aabdedcabdbcd" B "ecebcddbdb") ))
(assert (= (str.++  "edaecc" B "dd" B B "ccddda" B B "b" B "ecc")  (str.++  "edaeccedd" B B "ccddda" B "eb" B "ecc") ))
(assert (= (str.++  "ecacedbaeadbaacbcd" B "beacb")  (str.++  B "cacedba" B "adbaacbcdebeacb") ))
(assert (= (str.++  "ab" B "caedc" B "adeaabcccbd" B "bbc")  (str.++  "ab" B "ca" B "dcead" B "aabcccbd" B "bbc") ))
(assert (= (str.++  "eaada" B B "daeacdcdbabeebaed")  (str.++  "eaada" B B "daeacdcdbabe" B "ba" B "d") ))
(assert (= (str.++  "debaddddbeaadbbabadeaaad" "")  (str.++  "d" B "baddddbeaadbbabadeaaad") ))
(assert (= (str.++  "bcbccadaddaddddda" B "adaada")  (str.++  "bcbccadaddaddddda" B "adaada") ))
(assert (= (str.++  "e" B "abec" B "cc" B "cbbdacccddabaa")  (str.++  B B "ab" B "ceccecbbdacccddabaa") ))
(assert (= (str.++  B "dcccbdad" B "babecd" B "dcc" B "aba")  (str.++  "edcccbdad" B "babecd" B "dcceaba") ))
(assert (= (str.++  "bedcbdaadbac" B "bdede" B "ebdba")  (str.++  "bedcbdaadbacebd" B "dee" B "bdba") ))
(assert (= (str.++  "ba" B "ca" B B "e" B "cddbcaebcaebcdc")  (str.++  "baeca" B B "e" B "cddbcaebcaebcdc") ))
(assert (= (str.++  "abbdbcba" B "ecbcd" B "becdc" B B "ad")  (str.++  "abbdbcbae" B "cbcdebecdc" B B "ad") ))
(assert (= (str.++  "dcc" B "cbadcccc" B "ebbe" B "edbbb" B)  (str.++  "dccecbadcccc" B B "bb" B "e" B "dbbbe") ))
(assert (= (str.++  "dbdcaaabadbbbdc" B "cdd" B "debc")  (str.++  "dbdcaaabadbbbdc" B "cdd" B "d" B "bc") ))
(assert (= (str.++  "ddcebccd" B "cababdbdedaacdb")  (str.++  "ddc" B "bccd" B "cababdbd" B "daacdb") ))
(assert (= (str.++  "dbbbaedabab" B "cbcbca" B "e" B "cdc")  (str.++  "dbbba" B "dabab" B "cbcbcaeeecdc") ))
(assert (= (str.++  "bdbadabbaabdba" B "d" B "eaeacba")  (str.++  "bdbadabbaabdba" B "deea" B "acba") ))
(assert (= (str.++  "beccbaabdcecbdebbca" B "aebe")  (str.++  "beccbaabdc" B "cbdebbcaea" B "b" B) ))
(assert (= (str.++  "cbdeac" B "dbcdcbc" B "dcbeecba" B)  (str.++  "cbd" B "ac" B "dbcdcbcedcb" B "ecbae") ))
(assert (= (str.++  "dcebaabce" B "dcacca" B "adbcbdb")  (str.++  "dcebaabceedcaccaeadbcbdb" "") ))
(assert (= (str.++  B "babdbccbaaccddbceab" B "bd" B)  (str.++  B "babdbccbaaccddbceab" B "bd" B) ))
(assert (= (str.++  "aacae" B "ccd" B "dccbcddd" B B "cbba")  (str.++  "aaca" B "eccdedccbcddd" B B "cbba") ))
(assert (= (str.++  "cbdda" B B "d" B "bbbccaeceecacd" B)  (str.++  "cbdda" B B "d" B "bbbcca" B "c" B "ecacde") ))
(assert (= (str.++  "cdbedabdcacaacbeddac" B "ddc")  (str.++  "cdb" B "dabdcacaacb" B "ddac" B "ddc") ))
(assert (= (str.++  "b" B "dba" B "ebaebbddedcaaddeac")  (str.++  "bedba" B "ebaebbdd" B "dcaadd" B "ac") ))
(assert (= (str.++  "bcddda" B "bcdcdcebddbe" B "ccad")  (str.++  "bcdddaebcdcdcebddbe" B "ccad") ))
(assert (= (str.++  "bca" B "abdabac" B "ddbdb" B "bcccec")  (str.++  "bca" B "abdabaceddbdb" B "bcccec") ))
(assert (= (str.++  "cabcebeddedddcdcccae" B "d" B "a")  (str.++  "cabcebeddedddcdccca" B "ed" B "a") ))
(assert (= (str.++  "bddba" B "dcbdddbed" B "cbdabbbe")  (str.++  "bddba" B "dcbdddb" B "decbdabbbe") ))
(assert (= (str.++  B "cec" B B "eecbbacbcacdcabdbe")  (str.++  "ec" B "ce" B B "ecbbacbcacdcabdbe") ))
(assert (= (str.++  "a" B "debbbeebcccccb" B "aecbbea")  (str.++  "a" B "debbb" B B "bcccccbeaecbbea") ))
(assert (= (str.++  "ecccecbccadaacbadacacbdd" "")  (str.++  B "cccecbccadaacbadacacbdd" "") ))
(assert (= (str.++  "aad" B "abadbaeedecdbccabb" B "b")  (str.++  "aad" B "abadbaeed" B "cdbccabb" B "b") ))
(assert (= (str.++  "baab" B "ec" B "dabecddacdebbbb" B)  (str.++  "baabeecedabecddacdebbbb" B) ))
(assert (= (str.++  "cbcabcddcbcbbdaecccdabbb" "")  (str.++  "cbcabcddcbcbbda" B "cccdabbb") ))
(assert (= (str.++  "c" B "cadbcbbbeadadceabdda" B "c")  (str.++  "cecadbcbbb" B "adadceabdda" B "c") ))
(assert (= (str.++  "debdbddcdbaabaaaccbb" B "acd")  (str.++  "debdbddcdbaabaaaccbbeacd" "") ))
(assert (= (str.++  "c" B "bdbc" B "dbcedbbbddb" B "babec")  (str.++  "c" B "bdbc" B "dbc" B "dbbbddb" B "bab" B "c") ))
(assert (= (str.++  "decbaaebb" B "bdadabbdccbdac")  (str.++  "d" B "cbaa" B "bbebdadabbdccbdac") ))
(assert (= (str.++  "ddbccacdcbcecbb" B "bacbecad")  (str.++  "ddbccacdcbc" B "cbb" B "bacbecad") ))
(assert (= (str.++  "dcaa" B "deca" B B "dbbbaabdcdbde")  (str.++  "dcaaed" B "cae" B "dbbbaabdcdbd" B) ))
(assert (= (str.++  "bdbcbbcebd" B "babb" B "bdadaacb")  (str.++  "bdbcbbcebd" B "babbebdadaacb") ))
(assert (= (str.++  "bcdbcaccacbddbbdebbacbcc" "")  (str.++  "bcdbcaccacbddbbd" B "bbacbcc") ))
(assert (= (str.++  "b" B "acad" B "badbcad" B "acbacde" B "b")  (str.++  "beacad" B "badbcad" B "acbacde" B "b") ))
(assert (= (str.++  "bdadcdabcbdbdddedbadbaae" "")  (str.++  "bdadcdabcbdbddd" B "dbadbaae") ))
(assert (= (str.++  "ecbabadcaadb" B "acbad" B "cad" B "b")  (str.++  B "cbabadcaadbeacbad" B "cad" B "b") ))
(assert (= (str.++  "d" B B "aeecb" B "aacdb" B "eccabce" B "a")  (str.++  "deeaeecbeaacdbeeccabceea" "") ))
(assert (= (str.++  "ccaadeaccbacda" B "dbcdace" B "d")  (str.++  "ccaad" B "accbacdaedbcdaceed") ))
(assert (= (str.++  "caccceacedb" B "acdacadcddbd")  (str.++  "caccc" B "acedb" B "acdacadcddbd") ))
(assert (= (str.++  "ddda" B "eeadddaaea" B "eaabadd" B)  (str.++  "dddaee" B "adddaa" B "ae" B "aabadd" B) ))
(assert (= (str.++  "b" B B "cdcbebbdcccddcaceddcc")  (str.++  "b" B "ecdcb" B "bbdcccddcac" B "ddcc") ))
(assert (= (str.++  "daeddadabbdaacddbad" B "cbab")  (str.++  "daeddadabbdaacddbadecbab" "") ))
(assert (= (str.++  B "ddd" B "cabbdb" B "dcdaccdc" B B B "b")  (str.++  "eddd" B "cabbdbedcdaccdceeeb") ))
(assert (= (str.++  "ceb" B "ecdeeac" B "eeb" B "ac" B "d" B "bba")  (str.++  "ceb" B B "cd" B B "ac" B B B "beaced" B "bba") ))
(assert (= (str.++  "e" B "bcab" B "e" B "b" B "adadbbaccca" B B)  (str.++  B B "bcab" B B "ebeadadbbaccca" B B) ))
(assert (= (str.++  "aedeaddeb" B "daadecacddecc" B)  (str.++  "aed" B "add" B "bedaadecacddecce") ))
(assert (= (str.++  "adbcdddccbbdcbddb" B "d" B "ebbe")  (str.++  "adbcdddccbbdcbddb" B "d" B B "bbe") ))
(assert (= (str.++  "dadddaadbceadcaacebbb" B "ba")  (str.++  "dadddaadbceadcaacebbbeba" "") ))
(assert (= (str.++  "a" B "a" B "cddbb" B "bdaec" B "abceadea")  (str.++  "aea" B "cddbbebdaec" B "abcead" B "a") ))
(assert (= (str.++  "bcb" B "db" B "d" B "acbebdbaacabadd")  (str.++  "bcbedb" B "deacb" B "bdbaacabadd") ))
(assert (= (str.++  "cdddcea" B "eaceccbcccd" B "cecc")  (str.++  "cdddc" B "a" B "eaceccbcccdececc") ))
(assert (= (str.++  "bdd" B "ed" B "eeebedbe" B "aac" B "edeb")  (str.++  "bdde" B "d" B B "e" B "b" B "dbe" B "aace" B "d" B "b") ))
(assert (= (str.++  "dcd" B "dcedaccaabcebcaacaad")  (str.++  "dcdedc" B "daccaabc" B "bcaacaad") ))
(assert (= (str.++  "aceebccbbebabdcbebd" B "baed")  (str.++  "aceebccbbebabdcb" B "bdeba" B "d") ))
(assert (= (str.++  "cedaccceeadebdacbc" B "ba" B "cb")  (str.++  "c" B "daccc" B B "ad" B "bdacbcebaecb") ))
(assert (= (str.++  "add" B "cabecdbdabcac" B B "babcc")  (str.++  "addecab" B "cdbdabcac" B B "babcc") ))
(assert (= (str.++  "c" B "cec" B "bbdbecbbc" B "ddcded" B "d")  (str.++  "cececebbdbecbbc" B "ddcded" B "d") ))
(assert (= (str.++  "bbda" B "bebdbbdbcd" B "eccbaedd")  (str.++  "bbda" B "bebdbbdbcdeeccba" B "dd") ))
(assert (= (str.++  "ccacabdaaaccaeacbdcd" B B "cd")  (str.++  "ccacabdaaaccaeacbdcd" B B "cd") ))
(assert (= (str.++  "ed" B "bd" B "bddcaecbcaacdb" B B "aa")  (str.++  "ed" B "bd" B "bddca" B "cbcaacdb" B "eaa") ))
(assert (= (str.++  "becb" B "adddcdd" B "a" B "accdbeaba")  (str.++  "b" B "cbeadddcdd" B "aeaccdbeaba") ))
(assert (= (str.++  "a" B "cced" B "dabead" B "ebacdaeca" B)  (str.++  "a" B "cc" B "d" B "dabeade" B "bacda" B "ca" B) ))
(assert (= (str.++  "e" B "cdc" B B "dbb" B "bdd" B "bbcbcddab")  (str.++  B B "cdc" B B "dbb" B "bddebbcbcddab") ))
(assert (= (str.++  "eccbebbba" B "ababddcebebaab")  (str.++  B "ccbebbba" B "ababddcebebaab") ))
(assert (= (str.++  "aacaabcbbddcdddeedcbcdcc" "")  (str.++  "aacaabcbbddcddd" B "edcbcdcc") ))
(assert (= (str.++  "dae" B "edecddd" B "ccbccabdbcbd")  (str.++  "daee" B "d" B "cddd" B "ccbccabdbcbd") ))
(assert (= (str.++  "b" B "bcbbc" B "ebbadb" B "dbeeabbce")  (str.++  "bebcbbc" B B "bbadbedbe" B "abbce") ))
(assert (= (str.++  "aadcac" B "cecddeddaaaedaecc")  (str.++  "aadcacececdd" B "ddaaa" B "daecc") ))
(assert (= (str.++  "eda" B "d" B B "bcccdaacb" B B "cae" B "d" B)  (str.++  "eda" B "d" B "ebcccdaacbe" B "cae" B "d" B) ))
(assert (= (str.++  "ecadc" B "daddaddcbddcadcbc" B)  (str.++  "ecadcedaddaddcbddcadcbc" B) ))
(assert (= (str.++  "dba" B "beaebcdaaccdbc" B B "ccda")  (str.++  "dba" B "bea" B "bcdaaccdbc" B B "ccda") ))
(assert (= (str.++  "db" B B "bdbcdeedcab" B "ccc" B "aacd")  (str.++  "dbeebdbcd" B B "dcab" B "ccc" B "aacd") ))
(assert (= (str.++  "aacd" B "bd" B "ecbdeddacabba" B "dc")  (str.++  "aacdebde" B "cbd" B "ddacabbaedc") ))
(check-sat)

(exit)
