(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Joel Day, Thorsten Ehlers, Mitja Kulczynski, Federico Mora, Florin Manea, Dirk Nowotka, Danny Poulsen, Zhengyang Lu
Application: Test WOORPJE
Target solver: WOORPJE
Publications: Day, J. D., Ehlers, T., Kulczynski, M., Manea, F., Nowotka, D., & Poulsen, D. B. (2019). On solving word equations using SAT. In RP 2019
Description: Consisting of a system of 100 small random word equations with at most 6 letters, 10 variables and length 60.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun B () String)
(declare-fun D () String)
(declare-fun A () String)
(assert (= (str.++  "c" D "dccbccacbddcd")  (str.++  "cdada" B "dcdccbccacbddcd") ))
(assert (= (str.++  "cdba" A "b" A "bdbdcaccacacacbcaadadaddc")  (str.++  "cdbabb" A "bdbdcaccacacac" A "caadadaddc") ))
(assert (= (str.++  "dcdacaddddadcdaabacdccaaa" A "baac" A "a")  (str.++  "dcdacaddddadcdaa" A "acdccaaa" A "baac" A "a") ))
(assert (= (str.++  "bcaccc" A "dbcbdccadcc" A "abd" A "c" A "abccbdd")  (str.++  "bcacccbdbcbdccadccba" A "dbcba" A "cc" A "dd") ))
(assert (= (str.++  "cdb" A A "dc" A "cacdcd" A "a" A A "aadccacaadbcad")  (str.++  "cdb" A "bdcbcacdcd" A "a" A A "aadccacaad" A "cad") ))
(assert (= (str.++  "addb" A "bdcdcddd" A "cacbaadcdcbcdacbca")  (str.++  "add" A A "bdcdcdddbcacbaadcdcbcdac" A "ca") ))
(assert (= (str.++  "ddcadabdcaca" A A A "cacccdaad" A "bc" A "da" A "d")  (str.++  "ddcada" A "dcacabbbcacccdaadb" A "cbda" A "d") ))
(assert (= (str.++  A "b" A "aaaccccaabd" A "daadcacddaadabcdc")  (str.++  "bb" A "aaaccccaa" A "d" A "daadcacddaada" A "cdc") ))
(assert (= (str.++  "aabc" A "d" A "ccca" A "c" A "abcabca" A "cb" A "cdbaabd")  (str.++  "aa" A "cbdbcccabc" A "a" A "ca" A "cabc" A A "cd" A "aabd") ))
(assert (= (str.++  "bccd" A "bcadd" A "aabdb" A "dca" A "dadcaad" A "ccd")  (str.++  A "ccd" A A "cadd" A "aabdbbdca" A "dadcaadbccd") ))
(assert (= (str.++  "cccaaa" A "aa" A "cdccbcc" A A "bddcb" A "dd" A "ccbc")  (str.++  "cccaaa" A "aabcdcc" A "cc" A "bbddc" A A "dd" A "cc" A "c") ))
(assert (= (str.++  "cababaaca" A "ccc" A "cd" A "cdcbcccaadaddbc")  (str.++  "caba" A "aaca" A "ccc" A "cd" A "cdc" A "cccaadadd" A "c") ))
(assert (= (str.++  "adbccdaadbd" A "bdccacb" A "bcd" A "a" A "a" A "cbdc")  (str.++  "adbccdaadbd" A "bdccac" A "b" A "cdbaba" A "cbdc") ))
(assert (= (str.++  "d" A "abcdddcadbccddbcccdacd" A "dddbcac")  (str.++  "dbabcdddcad" A "ccddbcccdacdbdddbcac") ))
(assert (= (str.++  "a" A "dad" A A A "bdaccabbadc" A A "b" A "dbcaaaaad")  (str.++  "abdadbbb" A "daccabbadc" A A "bbdbcaaaaad") ))
(assert (= (str.++  "cdcacacadad" A "d" A "aacdcca" A "abb" A "cacada")  (str.++  "cdcacacadadbd" A "aacdccababb" A "cacada") ))
(assert (= (str.++  "bacd" A "a" A "cd" A "ad" A "aadacaccdcaabadcbbd")  (str.++  "bacd" A "a" A "cd" A "adbaadacaccdcaa" A "adcb" A "d") ))
(assert (= (str.++  "ccacca" A "dccaaabd" A "bcdaaacaddbaa" A A "d")  (str.++  "ccacca" A "dccaaabdb" A "cdaaacadd" A "aa" A A "d") ))
(assert (= (str.++  "ccadcabcaaddb" A "bdcadbdaadcaaca" A A "a")  (str.++  "ccadca" A "caaddb" A "bdcadbdaadcaacab" A "a") ))
(assert (= (str.++  "cd" A A "abaadb" A "d" A "b" A "ccdcdacdcad" A "b" A "ddc")  (str.++  "cdbbabaadbbd" A "bbccdcdacdcad" A "bbddc") ))
(assert (= (str.++  A "cbbdbbddbcbac" A "ddcaacacddcbcd" A "dc")  (str.++  A "c" A "bd" A A "ddbcbac" A "ddcaacacddcbcdbdc") ))
(assert (= (str.++  "cddaaaaaddcda" A "accaccaccdccddbccd")  (str.++  "cddaaaaaddcdabaccaccaccdccdd" A "ccd") ))
(assert (= (str.++  "bc" A "cdcdadcd" A "acac" A "dcdba" A "dcdbdcccb")  (str.++  A "cbcdcdadcdbacacbdcd" A "a" A "dcd" A "dccc" A) ))
(assert (= (str.++  "a" A "ccca" A "cbacbca" A "dbaadccdccaaabddb")  (str.++  "abcccabc" A "acbcabd" A "aadccdccaaabddb") ))
(assert (= (str.++  "acbdaaac" A "acacabaddb" A "dbcbaa" A A A "cba")  (str.++  "acbdaaacbacacabadd" A "bdbcbaab" A "bc" A "a") ))
(assert (= (str.++  "bbbcbd" A "addccbadabcc" A A "abbb" A "c" A "bdad")  (str.++  A A "bc" A "dbaddcc" A "ada" A "ccbbabbbbc" A "bdad") ))
(assert (= (str.++  "d" A "abd" A "cccaddaadddddbdacccddddda" A)  (str.++  "dbabd" A "cccaddaadddddbdacccdddddab") ))
(assert (= (str.++  "a" A "a" A "dccc" A "cccdcdaadcbcaa" A "d" A "ccdacd")  (str.++  "aba" A "dcccbcccdcdaadcbcaa" A "d" A "ccdacd") ))
(assert (= (str.++  "addacacdacdacadcccccdcddcdadc" A A A)  (str.++  "addacacdacdacadcccccdcddcdadcbb" A) ))
(assert (= (str.++  A "ccca" A "ddddccdcbddcdbc" A "b" A "baddabad")  (str.++  A "ccca" A "ddddccdcbddcd" A "c" A A "b" A "addabad") ))
(assert (= (str.++  "cad" A "bbadaccd" A "bcadbdacdaacdcaacaa")  (str.++  "cadb" A A "adaccd" A "bcadbdacdaacdcaacaa") ))
(assert (= (str.++  A A "abaddcaddcbcaaa" A A A "d" A "ada" A "ccaaaa")  (str.++  A "babaddcaddc" A "caaa" A A A "d" A "adabccaaaa") ))
(assert (= (str.++  A A A "ccbacdbaacddaacccc" A "adaacdacac")  (str.++  A A "bccbacdbaacddaaccccbadaacdacac") ))
(assert (= (str.++  "aadcddcaaddacd" A "dabbbdacd" A "cadbadd")  (str.++  "aadcddcaaddacdbda" A "b" A "dacdbcad" A "add") ))
(assert (= (str.++  "da" A "ccdaabaccdd" A "bbaddacbd" A "dad" A A A "c")  (str.++  "dabccdaabaccdd" A "b" A "addacbd" A "dad" A "b" A "c") ))
(assert (= (str.++  "bbcddcaccadda" A "ba" A "ddacdcbddad" A "ba" A)  (str.++  "b" A "cddcaccadda" A "babddacdc" A "ddadb" A "ab") ))
(assert (= (str.++  "accaccddbdadbbcaadaaddbbd" A "ca" A "cad")  (str.++  "accaccdd" A "dad" A A "caadaadd" A "bd" A "ca" A "cad") ))
(assert (= (str.++  "ccdabdac" A "cacca" A "ddacaddca" A "cdadd" A "d")  (str.++  "ccda" A "dac" A "caccabddacaddcabcdaddbd") ))
(assert (= (str.++  "bccacac" A "cab" A "abddccccdddabdbc" A "bac")  (str.++  "bccacac" A "ca" A "babddccccddda" A "dbc" A "bac") ))
(assert (= (str.++  "cccdbbaccdaba" A "dcdddbacbcca" A "aacdc")  (str.++  "cccdb" A "accda" A "abdcdddbac" A "cca" A "aacdc") ))
(assert (= (str.++  "acdddaadcdba" A "cb" A "abcddad" A A "bdc" A "db" A)  (str.++  "acdddaadcd" A "abc" A "babcddad" A "b" A "dc" A "dbb") ))
(assert (= (str.++  "aacd" A "c" A "dbccdccbbccdacccadaab" A "dbc")  (str.++  "aacd" A "cbd" A "ccdcc" A A "ccdacccadaab" A "dbc") ))
(assert (= (str.++  "ccacaadd" A "dcacdcaa" A "cc" A "ccddc" A "acddc")  (str.++  "ccacaaddbdcacdcaabcc" A "ccddc" A "acddc") ))
(assert (= (str.++  "a" A A "cadccbacabac" A "baddbdccddaad" A "da")  (str.++  "ab" A "cadcc" A "acabacbbaddbdccddaad" A "da") ))
(assert (= (str.++  "a" A "ac" A "dabd" A "d" A "daccaaccbddbcaaadcbb")  (str.++  "a" A "ac" A "da" A "d" A "dbdaccaaccbdd" A "caaadc" A "b") ))
(assert (= (str.++  "c" A "caa" A "acdcdcad" A "baddaa" A "adbddaaaad")  (str.++  "cbcaa" A "acdcdcadb" A "addaabad" A "ddaaaad") ))
(assert (= (str.++  "accadadcbbccddddddca" A "bccdacc" A "ddc")  (str.++  "accadadc" A A "ccddddddca" A "bccdaccbddc") ))
(assert (= (str.++  "aacacdcdaacd" A "cbdcb" A "bdadc" A "dddccbc")  (str.++  "aacacdcdaacd" A "cbdc" A A A "dadc" A "dddccbc") ))
(assert (= (str.++  "cbcccbcac" A A "dcd" A "cacaaacaacacdddcc")  (str.++  "cbccc" A "cac" A A "dcdbcacaaacaacacdddcc") ))
(assert (= (str.++  "c" A "c" A "cccadad" A "d" A "aa" A "aaaddadaddadac" A)  (str.++  "cbc" A "cccadad" A "d" A "aabaaaddadaddadac" A) ))
(assert (= (str.++  "aadaadaadcdc" A A "dddbacaddaacddcaa" A)  (str.++  "aadaadaadcdc" A A "ddd" A "acaddaacddcaab") ))
(assert (= (str.++  "bdccd" A "adcac" A "caca" A A A "cdcccaca" A "cdba")  (str.++  A "dccdbadcacbcaca" A "b" A "cdcccacabcdba") ))
(assert (= (str.++  "ccdccccadc" A "dacaabccdcccdbbbbcaaa")  (str.++  "ccdccccadc" A "dacaa" A "ccdcccd" A "bb" A "caaa") ))
(assert (= (str.++  A "add" A "accdb" A "bb" A "dacacad" A "b" A "bbaabbbc")  (str.++  A "add" A "accd" A A A "b" A "dacacadb" A A "bbaabb" A "c") ))
(assert (= (str.++  "dada" A "addacdadaaaabcdcdaabbcbcad" A)  (str.++  "dada" A "addacdadaaaabcdcdaabbc" A "cad" A) ))
(assert (= (str.++  "ddddaaaca" A "dcddd" A "caadcbcdccdcd" A "ab")  (str.++  "ddddaaaca" A "dcdddbcaadcbcdccdcd" A "a" A) ))
(assert (= (str.++  "ccaddb" A "ddcbadddccada" A "aabadbcc" A "ac")  (str.++  "ccadd" A A "ddc" A "adddccadabaabadbcc" A "ac") ))
(check-sat)

(exit)
