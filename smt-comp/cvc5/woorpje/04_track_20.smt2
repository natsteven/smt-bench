(set-info :smt-lib-version 2.6)
(set-logic QF_S)
(set-info :source |
Generated by: Joel Day, Thorsten Ehlers, Mitja Kulczynski, Federico Mora, Florin Manea, Dirk Nowotka, Danny Poulsen, Zhengyang Lu
Application: Test WOORPJE
Target solver: WOORPJE
Publications: Day, J. D., Ehlers, T., Kulczynski, M., Manea, F., Nowotka, D., & Poulsen, D. B. (2019). On solving word equations using SAT. In RP 2019
Description: Consisting of a system of 100 small random word equations with at most 6 letters, 10 variables and length 60.
|)
(set-info :license "https://creativecommons.org/licenses/by/4.0/")
(set-info :category "random")
(set-info :status unknown)

(declare-fun B () String)
(declare-fun A () String)
(declare-fun C () String)
(assert (= (str.++  "aa" B "bddd")  (str.++  "aadcbddd" "") ))
(assert (= (str.++  "a" B "c" B "cc")  (str.++  "adccdccc" "") ))
(assert (= (str.++  "ccdadadc" "")  (str.++  "ccdada" B) ))
(assert (= (str.++  B "dabccd" "")  (str.++  B "dabccd" "") ))
(assert (= (str.++  "dddccdba" "")  (str.++  "dd" B "cdba") ))
(assert (= (str.++  "caca" A)  (str.++  "cacaaa" B) ))
(assert (= (str.++  "a" C "cd")  (str.++  "a" A "bcd") ))
(assert (= (str.++  "ad" A "ca")  (str.++  "adaa" B "ca") ))
(assert (= (str.++  "adbdbddc" "")  (str.++  "adbdbd" B) ))
(assert (= (str.++  "cccda" B "b")  (str.++  "cccda" B "b") ))
(assert (= (str.++  "ab" B "daaa")  (str.++  "abdcdaaa" "") ))
(assert (= (str.++  "dc" B "baaa")  (str.++  B B "baaa") ))
(assert (= (str.++  "ccad" A)  (str.++  "ccad" A) ))
(assert (= (str.++  "ccdcddad" "")  (str.++  "cc" B "ddad") ))
(assert (= (str.++  "cccddcbb" "")  (str.++  "cccd" B "bb") ))
(assert (= (str.++  C "ccb" "")  (str.++  "aadcbccb" "") ))
(assert (= (str.++  "cba" B "ccb")  (str.++  "cba" B "ccb") ))
(assert (= (str.++  "baacb" B "b")  (str.++  "baacbdcb" "") ))
(assert (= (str.++  "aacdc" B "b")  (str.++  "aac" B "dcb") ))
(assert (= (str.++  "ddcdddad" "")  (str.++  "d" B "dddad") ))
(assert (= (str.++  "bdccddca" "")  (str.++  "b" B "cddca") ))
(assert (= (str.++  "abddccdc" "")  (str.++  "abd" B "c" B) ))
(assert (= (str.++  B "dbabad" "")  (str.++  B "dbabad" "") ))
(assert (= (str.++  "a" B "dbddb")  (str.++  "adcdbddb" "") ))
(assert (= (str.++  "ca" B "b" B "c")  (str.++  "ca" B "bdcc") ))
(assert (= (str.++  "aaddddcc" "")  (str.++  "aaddd" B "c") ))
(assert (= (str.++  "acdccbbc" "")  (str.++  "ac" B "cbbc") ))
(assert (= (str.++  B "ddbcbc" "")  (str.++  "dcddbcbc" "") ))
(assert (= (str.++  "dcdbcbbd" "")  (str.++  B "dbcbbd" "") ))
(assert (= (str.++  "a" C "db")  (str.++  "a" C "db") ))
(assert (= (str.++  B "bdccbd" "")  (str.++  B "b" B "cbd") ))
(assert (= (str.++  "dadbbddc" "")  (str.++  "dadbbd" B) ))
(assert (= (str.++  "addda" B "b")  (str.++  "addda" B "b") ))
(assert (= (str.++  "bdcbacad" "")  (str.++  "b" B "bacad") ))
(assert (= (str.++  "ddcdbdbd" "")  (str.++  "d" B "dbdbd") ))
(assert (= (str.++  "abddcbbc" "")  (str.++  "abd" B "bbc") ))
(assert (= (str.++  B "ddad" B)  (str.++  "dcddaddc" "") ))
(assert (= (str.++  "ddadcdda" "")  (str.++  "dda" B "dda") ))
(assert (= (str.++  "cc" B "bbad")  (str.++  "cc" B "bbad") ))
(assert (= (str.++  "abca" B "cb")  (str.++  "abca" B "cb") ))
(assert (= (str.++  "d" B "acdda")  (str.++  "ddcacdda" "") ))
(assert (= (str.++  "bdba" B "cd")  (str.++  "bdba" B "cd") ))
(assert (= (str.++  "bbcad" B "a")  (str.++  "bbcaddca" "") ))
(assert (= (str.++  B "dbcddd" "")  (str.++  B "dbcddd" "") ))
(assert (= (str.++  "abddab" B)  (str.++  "abddab" B) ))
(assert (= (str.++  "dcdaadbd" "")  (str.++  B "daadbd" "") ))
(assert (= (str.++  "dba" B "dda")  (str.++  "dbadcdda" "") ))
(assert (= (str.++  "d" B "acbca")  (str.++  "ddcacbca" "") ))
(assert (= (str.++  "dbab" A)  (str.++  "dbab" A) ))
(assert (= (str.++  "cadcaaad" "")  (str.++  "ca" B "aaad") ))
(assert (= (str.++  "bdbba" B "a")  (str.++  "bdbbadca" "") ))
(assert (= (str.++  "ab" B "baaa")  (str.++  "ab" B "baaa") ))
(assert (= (str.++  "babadcad" "")  (str.++  "baba" B "ad") ))
(assert (= (str.++  "abbcba" B)  (str.++  "abbcba" B) ))
(assert (= (str.++  "cbb" B "cbb")  (str.++  "cbb" B "cbb") ))
(assert (= (str.++  "cdcbcbdc" "")  (str.++  "c" B "bcbdc") ))
(assert (= (str.++  "cdcbdbca" "")  (str.++  "c" B "bdbca") ))
(assert (= (str.++  "bbab" B "aa")  (str.++  "bbabdcaa" "") ))
(assert (= (str.++  "ccaad" B "b")  (str.++  "ccaad" B "b") ))
(assert (= (str.++  "ccdcaaad" "")  (str.++  "cc" B "aaad") ))
(assert (= (str.++  "dd" B "dcdd")  (str.++  "dd" B "dcdd") ))
(assert (= (str.++  "bbcc" B "bd")  (str.++  "bbcc" B "bd") ))
(assert (= (str.++  "dcabaada" "")  (str.++  B "abaada" "") ))
(assert (= (str.++  "cb" B "ca" B)  (str.++  "cb" B "cadc") ))
(assert (= (str.++  "ddcaaacc" "")  (str.++  "d" B "aaacc") ))
(assert (= (str.++  "ddcbcccd" "")  (str.++  "d" B "bcccd") ))
(assert (= (str.++  "dabc" B "cd")  (str.++  "dabc" B "cd") ))
(assert (= (str.++  "daddcaca" "")  (str.++  "dad" B "aca") ))
(assert (= (str.++  "a" B "dbccd")  (str.++  "a" B "dbccd") ))
(assert (= (str.++  B "bca" B "d")  (str.++  "dcbca" B "d") ))
(assert (= (str.++  "cbdccdca" "")  (str.++  "cbdcc" B "a") ))
(assert (= (str.++  B "dddabb" "")  (str.++  "dcdddabb" "") ))
(assert (= (str.++  "abda" B "aa")  (str.++  "abdadcaa" "") ))
(assert (= (str.++  "ccca" B "ab")  (str.++  "cccadcab" "") ))
(assert (= (str.++  "dda" B "dbd")  (str.++  "ddadcdbd" "") ))
(assert (= (str.++  "dcbcdddd" "")  (str.++  B "bcdddd" "") ))
(assert (= (str.++  "bbcabdcc" "")  (str.++  "bbcab" B "c") ))
(assert (= (str.++  "cdbdcb" B)  (str.++  "cdbdcbdc" "") ))
(assert (= (str.++  "bc" B "dbac")  (str.++  "bcdcdbac" "") ))
(assert (= (str.++  "adbcd" B "d")  (str.++  "adbcd" B "d") ))
(assert (= (str.++  "addcabcb" "")  (str.++  "ad" B "abcb") ))
(assert (= (str.++  "adabd" B "c")  (str.++  "adabd" B "c") ))
(assert (= (str.++  "dcdadaad" "")  (str.++  B "dadaad" "") ))
(assert (= (str.++  "addcbcaa" "")  (str.++  "ad" B "bcaa") ))
(assert (= (str.++  "cadcabcc" "")  (str.++  "ca" B "abcc") ))
(assert (= (str.++  "cccdd" B "c")  (str.++  "cccdd" B "c") ))
(assert (= (str.++  "cbb" B "aaa")  (str.++  "cbbdcaaa" "") ))
(assert (= (str.++  "aaadcaba" "")  (str.++  "aaa" B "aba") ))
(assert (= (str.++  "adcbcddc" "")  (str.++  "a" B "bcd" B) ))
(assert (= (str.++  "d" B "abbdd")  (str.++  "d" B "abbdd") ))
(assert (= (str.++  "addbdb" B)  (str.++  "addbdbdc" "") ))
(assert (= (str.++  B "bbacac" "")  (str.++  "dcbbacac" "") ))
(assert (= (str.++  "cddcdadd" "")  (str.++  "cd" B "dadd") ))
(assert (= (str.++  "dcddabad" "")  (str.++  B "ddabad" "") ))
(assert (= (str.++  "abdbddcc" "")  (str.++  "abdbd" B "c") ))
(assert (= (str.++  "aadbbb" B)  (str.++  "aadbbb" B) ))
(assert (= (str.++  B "abaacd" "")  (str.++  B "abaacd" "") ))
(assert (= (str.++  B "c" B "aac")  (str.++  "dccdcaac" "") ))
(assert (= (str.++  "ccccadcc" "")  (str.++  "cccca" B "c") ))
(assert (= (str.++  "aaddbadc" "")  (str.++  "aaddba" B) ))
(assert (= (str.++  "bb" B "baca")  (str.++  "bb" B "baca") ))
(assert (= (str.++  B "ab" A)  (str.++  "dcabaa" B) ))
(assert (= (str.++  "d" B "c" B "dd")  (str.++  "d" B "c" B "dd") ))
(assert (= (str.++  "b" A "abc")  (str.++  "baadcabc" "") ))
(assert (= (str.++  "c" A "dad")  (str.++  "c" A "dad") ))
(assert (= (str.++  "ccbbac" B)  (str.++  "ccbbacdc" "") ))
(assert (= (str.++  B "cddaac" "")  (str.++  "dccddaac" "") ))
(assert (= (str.++  "b" A "bcc")  (str.++  "baa" B "bcc") ))
(assert (= (str.++  B B "dbdb")  (str.++  B "dcdbdb" "") ))
(assert (= (str.++  B "cdabab" "")  (str.++  "dccdabab" "") ))
(assert (= (str.++  "bcb" B "dac")  (str.++  "bcb" B "dac") ))
(assert (= (str.++  "bc" B "bdba")  (str.++  "bc" B "bdba") ))
(assert (= (str.++  B "cddadd" "")  (str.++  "dccddadd" "") ))
(assert (= (str.++  "cbcadcac" "")  (str.++  "cbca" B "ac") ))
(assert (= (str.++  "aadccadc" "")  (str.++  "aa" B "ca" B) ))
(assert (= (str.++  "c" B "babac")  (str.++  "c" B "babac") ))
(assert (= (str.++  "dacdcdaa" "")  (str.++  "dac" B "daa") ))
(check-sat)

(exit)
